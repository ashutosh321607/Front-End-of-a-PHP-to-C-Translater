Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> top_statement_list
Rule 2     top_statement_list -> top_statement_list top_statement
Rule 3     top_statement_list -> empty
Rule 4     top_statement -> statement
Rule 5     top_statement -> function_declaration_statement
Rule 6     top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON
Rule 7     top_statement -> CONST constant_declarations SEMI_COLON
Rule 8     constant_declarations -> constant_declarations COMMA constant_declaration
Rule 9     constant_declarations -> constant_declaration
Rule 10    constant_declaration -> IDENTIFIER EQUALS static_expr
Rule 11    inner_statement_list -> inner_statement_list inner_statement
Rule 12    inner_statement_list -> empty
Rule 13    inner_statement -> statement
Rule 14    inner_statement -> function_declaration_statement
Rule 15    inner_statement -> YIELD SEMI_COLON
Rule 16    inner_statement -> YIELD expr SEMI_COLON
Rule 17    statement -> LBRACE inner_statement_list RBRACE
Rule 18    statement -> IF LPAREN expr RPAREN statement elseif_list else_single
Rule 19    statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
Rule 20    statement -> WHILE LPAREN expr RPAREN while_statement
Rule 21    statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON
Rule 22    statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
Rule 23    statement -> SWITCH LPAREN expr RPAREN switch_case_list
Rule 24    statement -> BREAK SEMI_COLON
Rule 25    statement -> BREAK expr SEMI_COLON
Rule 26    statement -> CONTINUE SEMI_COLON
Rule 27    statement -> CONTINUE expr SEMI_COLON
Rule 28    statement -> RETURN SEMI_COLON
Rule 29    statement -> RETURN expr SEMI_COLON
Rule 30    statement -> GLOBAL global_var_list SEMI_COLON
Rule 31    statement -> STATIC static_var_list SEMI_COLON
Rule 32    statement -> ECHO echo_expr_list SEMI_COLON
Rule 33    statement -> INLINE_HTML
Rule 34    statement -> expr SEMI_COLON
Rule 35    statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON
Rule 36    statement -> SEMI_COLON
Rule 37    elseif_list -> empty
Rule 38    elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement
Rule 39    else_single -> empty
Rule 40    else_single -> ELSE statement
Rule 41    new_elseif_list -> empty
Rule 42    new_elseif_list -> new_elseif_list ELSEIF LPAREN expr RPAREN COLON inner_statement_list
Rule 43    new_else_single -> empty
Rule 44    new_else_single -> ELSE COLON inner_statement_list
Rule 45    while_statement -> statement
Rule 46    while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON
Rule 47    for_expr -> empty
Rule 48    for_expr -> non_empty_for_expr
Rule 49    non_empty_for_expr -> non_empty_for_expr COMMA expr
Rule 50    non_empty_for_expr -> expr
Rule 51    for_statement -> statement
Rule 52    for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON
Rule 53    switch_case_list -> LBRACE case_list RBRACE
Rule 54    switch_case_list -> LBRACE SEMI_COLON case_list RBRACE
Rule 55    switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON
Rule 56    switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON
Rule 57    case_list -> empty
Rule 58    case_list -> case_list_no_default CASE expr case_separator inner_statement_list
Rule 59    case_list -> case_list_no_default DEFAULT case_separator inner_statement_list
Rule 60    case_list_no_default -> empty
Rule 61    case_list_no_default -> case_list_no_default CASE expr case_separator inner_statement_list
Rule 62    case_separator -> COLON
Rule 63    case_separator -> SEMI_COLON
Rule 64    global_var_list -> global_var_list COMMA global_var
Rule 65    global_var_list -> global_var
Rule 66    global_var -> VARIABLE
Rule 67    global_var -> DOLLAR variable
Rule 68    global_var -> DOLLAR LBRACE expr RBRACE
Rule 69    static_var_list -> static_var_list COMMA static_var
Rule 70    static_var_list -> static_var
Rule 71    static_var -> VARIABLE EQUALS static_scalar
Rule 72    static_var -> VARIABLE
Rule 73    echo_expr_list -> echo_expr_list COMMA expr
Rule 74    echo_expr_list -> expr
Rule 75    unset_variables -> unset_variables COMMA unset_variable
Rule 76    unset_variables -> unset_variable
Rule 77    unset_variable -> variable
Rule 78    function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
Rule 79    is_reference -> AND
Rule 80    is_reference -> empty
Rule 81    parameter_list -> non_empty_parameter_list
Rule 82    parameter_list -> empty
Rule 83    non_empty_parameter_list -> non_empty_parameter_list COMMA parameter
Rule 84    non_empty_parameter_list -> parameter
Rule 85    parameter -> VARIABLE
Rule 86    parameter -> AND VARIABLE
Rule 87    parameter -> VARIABLE EQUALS static_scalar
Rule 88    parameter -> AND VARIABLE EQUALS static_scalar
Rule 89    expr -> variable
Rule 90    expr -> variable EQUALS expr
Rule 91    expr -> variable EQUALS AND expr
Rule 92    expr -> CLONE expr
Rule 93    expr -> LIST LPAREN assignment_list RPAREN EQUALS expr
Rule 94    assignment_list -> assignment_list COMMA assignment_list_element
Rule 95    assignment_list -> assignment_list_element
Rule 96    assignment_list_element -> variable
Rule 97    assignment_list_element -> empty
Rule 98    assignment_list_element -> LIST LPAREN assignment_list RPAREN
Rule 99    variable -> base_variable_with_function_calls
Rule 100   base_variable_with_function_calls -> base_variable
Rule 101   base_variable_with_function_calls -> function_call
Rule 102   function_call -> IDENTIFIER fucntion_call_body
Rule 103   function_call -> ARRAY fucntion_call_body
Rule 104   fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN
Rule 105   fucntion_call_body -> LPAREN empty RPAREN
Rule 106   function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
Rule 107   function_call -> variable_without_objects LPAREN empty RPAREN
Rule 108   base_variable -> simple_indirect_reference
Rule 109   simple_indirect_reference -> DOLLAR simple_indirect_reference
Rule 110   simple_indirect_reference -> reference_variable
Rule 111   variable -> variable LBRACKET dim_offset RBRACKET
Rule 112   reference_variable -> reference_variable LBRACKET dim_offset RBRACKET
Rule 113   reference_variable -> reference_variable LBRACE expr RBRACE
Rule 114   reference_variable -> compound_variable
Rule 115   expr -> expr LBRACE dim_offset RBRACE
Rule 116   compound_variable -> VARIABLE
Rule 117   compound_variable -> DOLLAR LBRACE expr RBRACE
Rule 118   dim_offset -> expr
Rule 119   dim_offset -> empty
Rule 120   variable_without_objects -> simple_indirect_reference
Rule 121   expr -> scalar
Rule 122   expr -> ARRAY LPAREN array_pair_list RPAREN
Rule 123   expr -> LBRACKET array_pair_list RBRACKET
Rule 124   array_pair_list -> empty
Rule 125   array_pair_list -> non_empty_array_pair_list possible_comma
Rule 126   non_empty_array_pair_list -> nonempty_function_call_parameter_list
Rule 127   non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr DOUBLE_ARROW AND variable
Rule 128   non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr DOUBLE_ARROW expr
Rule 129   non_empty_array_pair_list -> expr DOUBLE_ARROW AND variable
Rule 130   non_empty_array_pair_list -> expr DOUBLE_ARROW expr
Rule 131   possible_comma -> empty
Rule 132   possible_comma -> COMMA
Rule 133   nonempty_function_call_parameter_list -> nonempty_function_call_parameter_list COMMA function_call_parameter
Rule 134   nonempty_function_call_parameter_list -> function_call_parameter
Rule 135   function_call_parameter -> expr
Rule 136   function_call_parameter -> AND variable
Rule 137   expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
Rule 138   lexical_vars -> USE LPAREN lexical_var_list RPAREN
Rule 139   lexical_vars -> empty
Rule 140   lexical_var_list -> lexical_var_list COMMA AND VARIABLE
Rule 141   lexical_var_list -> lexical_var_list COMMA VARIABLE
Rule 142   lexical_var_list -> AND VARIABLE
Rule 143   lexical_var_list -> VARIABLE
Rule 144   expr -> variable PLUS_EQUAL expr
Rule 145   expr -> variable MINUS_EQUAL expr
Rule 146   expr -> variable MUL_EQUAL expr
Rule 147   expr -> variable DIV_EQUAL expr
Rule 148   expr -> variable CONCAT_EQUAL expr
Rule 149   expr -> variable MOD_EQUAL expr
Rule 150   expr -> variable AND_EQUAL expr
Rule 151   expr -> variable OR_EQUAL expr
Rule 152   expr -> variable XOR_EQUAL expr
Rule 153   expr -> variable SL_EQUAL expr
Rule 154   expr -> variable SR_EQUAL expr
Rule 155   expr -> expr BOOLEAN_AND expr
Rule 156   expr -> expr BOOLEAN_OR expr
Rule 157   expr -> expr LOGICAL_AND expr
Rule 158   expr -> expr LOGICAL_OR expr
Rule 159   expr -> expr LOGICAL_XOR expr
Rule 160   expr -> expr AND expr
Rule 161   expr -> expr OR expr
Rule 162   expr -> expr XOR expr
Rule 163   expr -> expr CONCAT expr
Rule 164   expr -> expr PLUS expr
Rule 165   expr -> expr MINUS expr
Rule 166   expr -> expr MUL expr
Rule 167   expr -> expr DIV expr
Rule 168   expr -> expr SL expr
Rule 169   expr -> expr SR expr
Rule 170   expr -> expr MOD expr
Rule 171   expr -> expr IS_IDENTICAL expr
Rule 172   expr -> expr IS_NOT_IDENTICAL expr
Rule 173   expr -> expr IS_EQUAL_TO expr
Rule 174   expr -> expr IS_NOT_EQUAL expr
Rule 175   expr -> expr LESS_THAN expr
Rule 176   expr -> expr LESS_THAN_OR_EQUAL expr
Rule 177   expr -> expr GREATER_THAN expr
Rule 178   expr -> expr GRATER_THAN_OR_EQUAL expr
Rule 179   expr -> expr INSTANCEOF expr
Rule 180   expr -> expr INSTANCEOF STATIC
Rule 181   expr -> PLUS expr
Rule 182   expr -> MINUS expr
Rule 183   expr -> NOT expr
Rule 184   expr -> BOOLEAN_NOT expr
Rule 185   expr -> expr QUESTION expr COLON expr
Rule 186   expr -> expr QUESTION COLON expr
Rule 187   expr -> INC variable
Rule 188   expr -> DEC variable
Rule 189   expr -> variable INC
Rule 190   expr -> variable DEC
Rule 191   expr -> INT_CAST expr
Rule 192   expr -> ARRAY_CAST expr
Rule 193   expr -> STRING_CAST expr
Rule 194   expr -> DOUBLE_CAST expr
Rule 195   expr -> BOOL_CAST expr
Rule 196   expr -> UNSET_CAST expr
Rule 197   expr -> BINARY_CAST expr
Rule 198   expr -> ISSET LPAREN isset_variables RPAREN
Rule 199   isset_variables -> isset_variables COMMA variable
Rule 200   isset_variables -> variable
Rule 201   expr -> EMPTY LPAREN expr RPAREN
Rule 202   expr -> EVAL LPAREN expr RPAREN
Rule 203   expr -> INCLUDE expr
Rule 204   expr -> INCLUDE_ONCE expr
Rule 205   expr -> REQUIRE expr
Rule 206   expr -> REQUIRE_ONCE expr
Rule 207   exit_or_die -> EXIT
Rule 208   exit_or_die -> DIE
Rule 209   expr -> exit_or_die
Rule 210   expr -> exit_or_die LPAREN RPAREN
Rule 211   expr -> exit_or_die LPAREN expr RPAREN
Rule 212   expr -> PRINT expr
Rule 213   expr -> AT expr
Rule 214   expr -> LPAREN expr RPAREN
Rule 215   nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC
Rule 216   scalar -> common_scalar
Rule 217   scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
Rule 218   scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
Rule 219   scalar -> scalar_heredoc
Rule 220   scalar -> nowdoc
Rule 221   scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC
Rule 222   nowdoc_text_content -> nowdoc_text_content ENCAPSED_AND_WHITESPACE
Rule 223   nowdoc_text_content -> empty
Rule 224   scalar -> IDENTIFIER
Rule 225   common_scalar -> INT_NUMBER
Rule 226   common_scalar -> FLOAT_NUMBER
Rule 227   common_scalar -> CONSTANT_ENCAPSED_STRING
Rule 228   common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING
Rule 229   common_scalar -> FUNC_C
Rule 230   common_scalar -> METHOD_C
Rule 231   common_scalar -> LINE
Rule 232   common_scalar -> FILE
Rule 233   common_scalar -> DIR
Rule 234   static_scalar -> common_scalar
Rule 235   static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE
Rule 236   static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
Rule 237   static_scalar -> static_heredoc
Rule 238   static_scalar -> nowdoc
Rule 239   static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC
Rule 240   multiple_encapsed -> multiple_encapsed ENCAPSED_AND_WHITESPACE
Rule 241   multiple_encapsed -> empty
Rule 242   static_scalar -> IDENTIFIER
Rule 243   static_scalar -> PLUS static_scalar
Rule 244   static_scalar -> MINUS static_scalar
Rule 245   static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN
Rule 246   static_scalar -> LBRACKET static_array_pair_list RBRACKET
Rule 247   static_array_pair_list -> empty
Rule 248   static_array_pair_list -> static_non_empty_array_pair_list possible_comma
Rule 249   static_non_empty_array_pair_list -> static_non_empty_array_pair_list COMMA static_expr
Rule 250   static_non_empty_array_pair_list -> static_expr
Rule 251   static_non_empty_array_pair_list -> static_non_empty_array_pair_list COMMA static_scalar DOUBLE_ARROW static_expr
Rule 252   static_non_empty_array_pair_list -> static_scalar DOUBLE_ARROW static_expr
Rule 253   static_expr -> static_scalar
Rule 254   static_expr -> static_expr BOOLEAN_AND static_expr
Rule 255   static_expr -> static_expr BOOLEAN_OR static_expr
Rule 256   static_expr -> static_expr LOGICAL_AND static_expr
Rule 257   static_expr -> static_expr LOGICAL_OR static_expr
Rule 258   static_expr -> static_expr LOGICAL_XOR static_expr
Rule 259   static_expr -> static_expr AND static_expr
Rule 260   static_expr -> static_expr OR static_expr
Rule 261   static_expr -> static_expr XOR static_expr
Rule 262   static_expr -> static_expr CONCAT static_expr
Rule 263   static_expr -> static_expr PLUS static_expr
Rule 264   static_expr -> static_expr MINUS static_expr
Rule 265   static_expr -> static_expr MUL static_expr
Rule 266   static_expr -> static_expr DIV static_expr
Rule 267   static_expr -> static_expr SL static_expr
Rule 268   static_expr -> static_expr SR static_expr
Rule 269   static_expr -> static_expr MOD static_expr
Rule 270   static_expr -> static_expr IS_IDENTICAL static_expr
Rule 271   static_expr -> static_expr IS_NOT_IDENTICAL static_expr
Rule 272   static_expr -> static_expr IS_EQUAL_TO static_expr
Rule 273   static_expr -> static_expr IS_NOT_EQUAL static_expr
Rule 274   static_expr -> static_expr LESS_THAN static_expr
Rule 275   static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr
Rule 276   static_expr -> static_expr GREATER_THAN static_expr
Rule 277   static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr
Rule 278   static_expr -> LPAREN static_expr RPAREN
Rule 279   encaps_list -> encaps_list encaps_var
Rule 280   encaps_list -> empty
Rule 281   encaps_var -> VARIABLE
Rule 282   encaps_var -> VARIABLE LBRACKET encaps_var_offset RBRACKET
Rule 283   encaps_var -> DOLLAR_OPEN_CURLY_BRACES expr RBRACE
Rule 284   encaps_var -> DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME LBRACKET expr RBRACKET RBRACE
Rule 285   encaps_var -> CURLY_OPEN variable RBRACE
Rule 286   encaps_var_offset -> IDENTIFIER
Rule 287   encaps_var_offset -> NUM_STRING
Rule 288   encaps_var_offset -> VARIABLE
Rule 289   empty -> <empty>

Terminals, with rules where they appear

AND                  : 79 86 88 91 127 129 136 140 142 160 259
AND_EQUAL            : 150
ARRAY                : 103 122 245
ARRAY_CAST           : 192
AT                   : 213
BINARY_CAST          : 197
BOOLEAN_AND          : 155 254
BOOLEAN_NOT          : 184
BOOLEAN_OR           : 156 255
BOOL_CAST            : 195
BREAK                : 24 25
CASE                 : 58 61
CLONE                : 92
COLON                : 19 42 44 46 52 55 56 62 185 186
COMMA                : 8 49 64 69 73 75 83 94 127 128 132 133 140 141 199 249 251
CONCAT               : 163 262
CONCAT_EQUAL         : 148
CONST                : 7
CONSTANT_ENCAPSED_STRING : 227 228
CONTINUE             : 26 27
CURLY_OPEN           : 285
DEC                  : 188 190
DEFAULT              : 59
DIE                  : 208
DIR                  : 233
DIV                  : 167 266
DIV_EQUAL            : 147
DO                   : 21
DOLLAR               : 67 68 109 117
DOLLAR_OPEN_CURLY_BRACES : 283 284
DOUBLE_ARROW         : 127 128 129 130 251 252
DOUBLE_CAST          : 194
DOUBLE_QUOTE         : 217 217 218 218 235 235 236 236
ECHO                 : 32
ELSE                 : 40 44
ELSEIF               : 38 42
EMPTY                : 201
ENCAPSED_AND_WHITESPACE : 222 236 240
ENDFOR               : 52
ENDIF                : 19
ENDSWITCH            : 55 56
ENDWHILE             : 46
END_HEREDOC          : 221 239
END_NOWDOC           : 215
EQUALS               : 10 71 87 88 90 91 93
EVAL                 : 202
EXIT                 : 207
FILE                 : 232
FLOAT_NUMBER         : 226
FOR                  : 22
FUNCTION             : 78 137
FUNC_C               : 229
GLOBAL               : 30
GRATER_THAN_OR_EQUAL : 178 277
GREATER_THAN         : 177 276
HALT_COMPILER        : 6
IDENTIFIER           : 10 78 102 218 224 228 242 286
IF                   : 18 19
INC                  : 187 189
INCLUDE              : 203
INCLUDE_ONCE         : 204
INLINE_HTML          : 33
INSTANCEOF           : 179 180
INT_CAST             : 191
INT_NUMBER           : 225
ISSET                : 198
IS_EQUAL_TO          : 173 272
IS_IDENTICAL         : 171 270
IS_NOT_EQUAL         : 174 273
IS_NOT_IDENTICAL     : 172 271
LBRACE               : 17 53 54 68 78 113 115 117 137
LBRACKET             : 111 112 123 246 282 284
LESS_THAN            : 175 274
LESS_THAN_OR_EQUAL   : 176 275
LINE                 : 231
LIST                 : 93 98
LOGICAL_AND          : 157 256
LOGICAL_OR           : 158 257
LOGICAL_XOR          : 159 258
LPAREN               : 6 18 19 20 21 22 23 35 38 42 78 93 98 104 105 106 107 122 137 138 198 201 202 210 211 214 245 278
METHOD_C             : 230
MINUS                : 165 182 244 264
MINUS_EQUAL          : 145
MOD                  : 170 269
MOD_EQUAL            : 149
MUL                  : 166 265
MUL_EQUAL            : 146
NOT                  : 183
NUM_STRING           : 287
OR                   : 161 260
OR_EQUAL             : 151
PLUS                 : 164 181 243 263
PLUS_EQUAL           : 144
PRINT                : 212
QUESTION             : 185 186
RBRACE               : 17 53 54 68 78 113 115 117 137 283 284 285
RBRACKET             : 111 112 123 246 282 284
REQUIRE              : 205
REQUIRE_ONCE         : 206
RETURN               : 28 29
RPAREN               : 6 18 19 20 21 22 23 35 38 42 78 93 98 104 105 106 107 122 137 138 198 201 202 210 211 214 245 278
SEMI_COLON           : 6 7 15 16 19 21 22 22 24 25 26 27 28 29 30 31 32 34 35 36 46 52 54 55 56 56 63
SL                   : 168 267
SL_EQUAL             : 153
SR                   : 169 268
SR_EQUAL             : 154
START_HEREDOC        : 221 239
START_NOWDOC         : 215
STATIC               : 31 180
STRING_CAST          : 193
STRING_VARNAME       : 284
SWITCH               : 23
UNSET                : 35
UNSET_CAST           : 196
USE                  : 138
VARIABLE             : 66 71 72 85 86 87 88 116 140 141 142 143 281 282 288
WHILE                : 20 21
XOR                  : 162 261
XOR_EQUAL            : 152
YIELD                : 15 16
error                : 

Nonterminals, with rules where they appear

array_pair_list      : 122 123
assignment_list      : 93 94 98
assignment_list_element : 94 95
base_variable        : 100
base_variable_with_function_calls : 99
case_list            : 53 54 55 56
case_list_no_default : 58 59 61
case_separator       : 58 59 61
common_scalar        : 216 234
compound_variable    : 114
constant_declaration : 8 9
constant_declarations : 7 8
dim_offset           : 111 112 115
echo_expr_list       : 32 73
else_single          : 18
elseif_list          : 18 38
empty                : 3 12 37 39 41 43 47 57 60 80 82 97 105 107 119 124 131 139 223 241 247 280
encaps_list          : 217 218 221 279
encaps_var           : 279
encaps_var_offset    : 282
exit_or_die          : 209 210 211
expr                 : 16 18 19 20 21 23 25 27 29 34 38 42 49 50 58 61 68 73 74 90 91 92 93 113 115 117 118 127 128 128 129 130 130 135 144 145 146 147 148 149 150 151 152 153 154 155 155 156 156 157 157 158 158 159 159 160 160 161 161 162 162 163 163 164 164 165 165 166 166 167 167 168 168 169 169 170 170 171 171 172 172 173 173 174 174 175 175 176 176 177 177 178 178 179 179 180 181 182 183 184 185 185 185 186 186 191 192 193 194 195 196 197 201 202 203 204 205 206 211 212 213 214 283 284
for_expr             : 22 22 22
for_statement        : 22
fucntion_call_body   : 102 103
function_call        : 101
function_call_parameter : 133 134
function_declaration_statement : 5 14
global_var           : 64 65
global_var_list      : 30 64
inner_statement      : 11
inner_statement_list : 11 17 19 42 44 46 52 58 59 61 78 137
is_reference         : 78 137
isset_variables      : 198 199
lexical_var_list     : 138 140 141
lexical_vars         : 137
multiple_encapsed    : 239 240
new_else_single      : 19
new_elseif_list      : 19 42
non_empty_array_pair_list : 125 127 128
non_empty_for_expr   : 48 49
non_empty_parameter_list : 81 83
nonempty_function_call_parameter_list : 104 106 126 133
nowdoc               : 220 238
nowdoc_text_content  : 215 222
parameter            : 83 84
parameter_list       : 78 137
possible_comma       : 125 248
reference_variable   : 110 112 113
scalar               : 121
scalar_heredoc       : 219
simple_indirect_reference : 108 109 120
start                : 0
statement            : 4 13 18 21 38 40 45 51
static_array_pair_list : 245 246
static_expr          : 10 249 250 251 252 254 254 255 255 256 256 257 257 258 258 259 259 260 260 261 261 262 262 263 263 264 264 265 265 266 266 267 267 268 268 269 269 270 270 271 271 272 272 273 273 274 274 275 275 276 276 277 277 278
static_heredoc       : 237
static_non_empty_array_pair_list : 248 249 251
static_scalar        : 71 87 88 243 244 251 252 253
static_var           : 69 70
static_var_list      : 31 69
switch_case_list     : 23
top_statement        : 2
top_statement_list   : 1 2
unset_variable       : 75 76
unset_variables      : 35 75
variable             : 67 77 89 90 91 96 111 127 129 136 144 145 146 147 148 149 150 151 152 153 154 187 188 189 190 199 200 285
variable_without_objects : 106 107
while_statement      : 20

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . top_statement_list
    (2) top_statement_list -> . top_statement_list top_statement
    (3) top_statement_list -> . empty
    (289) empty -> .

    HALT_COMPILER   reduce using rule 289 (empty -> .)
    CONST           reduce using rule 289 (empty -> .)
    LBRACE          reduce using rule 289 (empty -> .)
    IF              reduce using rule 289 (empty -> .)
    WHILE           reduce using rule 289 (empty -> .)
    DO              reduce using rule 289 (empty -> .)
    FOR             reduce using rule 289 (empty -> .)
    SWITCH          reduce using rule 289 (empty -> .)
    BREAK           reduce using rule 289 (empty -> .)
    CONTINUE        reduce using rule 289 (empty -> .)
    RETURN          reduce using rule 289 (empty -> .)
    GLOBAL          reduce using rule 289 (empty -> .)
    STATIC          reduce using rule 289 (empty -> .)
    ECHO            reduce using rule 289 (empty -> .)
    INLINE_HTML     reduce using rule 289 (empty -> .)
    UNSET           reduce using rule 289 (empty -> .)
    SEMI_COLON      reduce using rule 289 (empty -> .)
    FUNCTION        reduce using rule 289 (empty -> .)
    CLONE           reduce using rule 289 (empty -> .)
    LIST            reduce using rule 289 (empty -> .)
    ARRAY           reduce using rule 289 (empty -> .)
    LBRACKET        reduce using rule 289 (empty -> .)
    PLUS            reduce using rule 289 (empty -> .)
    MINUS           reduce using rule 289 (empty -> .)
    NOT             reduce using rule 289 (empty -> .)
    BOOLEAN_NOT     reduce using rule 289 (empty -> .)
    INC             reduce using rule 289 (empty -> .)
    DEC             reduce using rule 289 (empty -> .)
    INT_CAST        reduce using rule 289 (empty -> .)
    ARRAY_CAST      reduce using rule 289 (empty -> .)
    STRING_CAST     reduce using rule 289 (empty -> .)
    DOUBLE_CAST     reduce using rule 289 (empty -> .)
    BOOL_CAST       reduce using rule 289 (empty -> .)
    UNSET_CAST      reduce using rule 289 (empty -> .)
    BINARY_CAST     reduce using rule 289 (empty -> .)
    ISSET           reduce using rule 289 (empty -> .)
    EMPTY           reduce using rule 289 (empty -> .)
    EVAL            reduce using rule 289 (empty -> .)
    INCLUDE         reduce using rule 289 (empty -> .)
    INCLUDE_ONCE    reduce using rule 289 (empty -> .)
    REQUIRE         reduce using rule 289 (empty -> .)
    REQUIRE_ONCE    reduce using rule 289 (empty -> .)
    PRINT           reduce using rule 289 (empty -> .)
    AT              reduce using rule 289 (empty -> .)
    LPAREN          reduce using rule 289 (empty -> .)
    DOUBLE_QUOTE    reduce using rule 289 (empty -> .)
    IDENTIFIER      reduce using rule 289 (empty -> .)
    EXIT            reduce using rule 289 (empty -> .)
    DIE             reduce using rule 289 (empty -> .)
    INT_NUMBER      reduce using rule 289 (empty -> .)
    FLOAT_NUMBER    reduce using rule 289 (empty -> .)
    CONSTANT_ENCAPSED_STRING reduce using rule 289 (empty -> .)
    FUNC_C          reduce using rule 289 (empty -> .)
    METHOD_C        reduce using rule 289 (empty -> .)
    LINE            reduce using rule 289 (empty -> .)
    FILE            reduce using rule 289 (empty -> .)
    DIR             reduce using rule 289 (empty -> .)
    START_HEREDOC   reduce using rule 289 (empty -> .)
    START_NOWDOC    reduce using rule 289 (empty -> .)
    DOLLAR          reduce using rule 289 (empty -> .)
    VARIABLE        reduce using rule 289 (empty -> .)
    $end            reduce using rule 289 (empty -> .)

    start                          shift and go to state 1
    top_statement_list             shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (1) start -> top_statement_list .
    (2) top_statement_list -> top_statement_list . top_statement
    (4) top_statement -> . statement
    (5) top_statement -> . function_declaration_statement
    (6) top_statement -> . HALT_COMPILER LPAREN RPAREN SEMI_COLON
    (7) top_statement -> . CONST constant_declarations SEMI_COLON
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list else_single
    (19) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (20) statement -> . WHILE LPAREN expr RPAREN while_statement
    (21) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (22) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (23) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (24) statement -> . BREAK SEMI_COLON
    (25) statement -> . BREAK expr SEMI_COLON
    (26) statement -> . CONTINUE SEMI_COLON
    (27) statement -> . CONTINUE expr SEMI_COLON
    (28) statement -> . RETURN SEMI_COLON
    (29) statement -> . RETURN expr SEMI_COLON
    (30) statement -> . GLOBAL global_var_list SEMI_COLON
    (31) statement -> . STATIC static_var_list SEMI_COLON
    (32) statement -> . ECHO echo_expr_list SEMI_COLON
    (33) statement -> . INLINE_HTML
    (34) statement -> . expr SEMI_COLON
    (35) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (36) statement -> . SEMI_COLON
    (78) function_declaration_statement -> . FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    $end            reduce using rule 1 (start -> top_statement_list .)
    HALT_COMPILER   shift and go to state 7
    CONST           shift and go to state 10
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    FUNCTION        shift and go to state 26
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    top_statement                  shift and go to state 4
    statement                      shift and go to state 5
    function_declaration_statement shift and go to state 6
    expr                           shift and go to state 13
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 3

    (3) top_statement_list -> empty .

    HALT_COMPILER   reduce using rule 3 (top_statement_list -> empty .)
    CONST           reduce using rule 3 (top_statement_list -> empty .)
    LBRACE          reduce using rule 3 (top_statement_list -> empty .)
    IF              reduce using rule 3 (top_statement_list -> empty .)
    WHILE           reduce using rule 3 (top_statement_list -> empty .)
    DO              reduce using rule 3 (top_statement_list -> empty .)
    FOR             reduce using rule 3 (top_statement_list -> empty .)
    SWITCH          reduce using rule 3 (top_statement_list -> empty .)
    BREAK           reduce using rule 3 (top_statement_list -> empty .)
    CONTINUE        reduce using rule 3 (top_statement_list -> empty .)
    RETURN          reduce using rule 3 (top_statement_list -> empty .)
    GLOBAL          reduce using rule 3 (top_statement_list -> empty .)
    STATIC          reduce using rule 3 (top_statement_list -> empty .)
    ECHO            reduce using rule 3 (top_statement_list -> empty .)
    INLINE_HTML     reduce using rule 3 (top_statement_list -> empty .)
    UNSET           reduce using rule 3 (top_statement_list -> empty .)
    SEMI_COLON      reduce using rule 3 (top_statement_list -> empty .)
    FUNCTION        reduce using rule 3 (top_statement_list -> empty .)
    CLONE           reduce using rule 3 (top_statement_list -> empty .)
    LIST            reduce using rule 3 (top_statement_list -> empty .)
    ARRAY           reduce using rule 3 (top_statement_list -> empty .)
    LBRACKET        reduce using rule 3 (top_statement_list -> empty .)
    PLUS            reduce using rule 3 (top_statement_list -> empty .)
    MINUS           reduce using rule 3 (top_statement_list -> empty .)
    NOT             reduce using rule 3 (top_statement_list -> empty .)
    BOOLEAN_NOT     reduce using rule 3 (top_statement_list -> empty .)
    INC             reduce using rule 3 (top_statement_list -> empty .)
    DEC             reduce using rule 3 (top_statement_list -> empty .)
    INT_CAST        reduce using rule 3 (top_statement_list -> empty .)
    ARRAY_CAST      reduce using rule 3 (top_statement_list -> empty .)
    STRING_CAST     reduce using rule 3 (top_statement_list -> empty .)
    DOUBLE_CAST     reduce using rule 3 (top_statement_list -> empty .)
    BOOL_CAST       reduce using rule 3 (top_statement_list -> empty .)
    UNSET_CAST      reduce using rule 3 (top_statement_list -> empty .)
    BINARY_CAST     reduce using rule 3 (top_statement_list -> empty .)
    ISSET           reduce using rule 3 (top_statement_list -> empty .)
    EMPTY           reduce using rule 3 (top_statement_list -> empty .)
    EVAL            reduce using rule 3 (top_statement_list -> empty .)
    INCLUDE         reduce using rule 3 (top_statement_list -> empty .)
    INCLUDE_ONCE    reduce using rule 3 (top_statement_list -> empty .)
    REQUIRE         reduce using rule 3 (top_statement_list -> empty .)
    REQUIRE_ONCE    reduce using rule 3 (top_statement_list -> empty .)
    PRINT           reduce using rule 3 (top_statement_list -> empty .)
    AT              reduce using rule 3 (top_statement_list -> empty .)
    LPAREN          reduce using rule 3 (top_statement_list -> empty .)
    DOUBLE_QUOTE    reduce using rule 3 (top_statement_list -> empty .)
    IDENTIFIER      reduce using rule 3 (top_statement_list -> empty .)
    EXIT            reduce using rule 3 (top_statement_list -> empty .)
    DIE             reduce using rule 3 (top_statement_list -> empty .)
    INT_NUMBER      reduce using rule 3 (top_statement_list -> empty .)
    FLOAT_NUMBER    reduce using rule 3 (top_statement_list -> empty .)
    CONSTANT_ENCAPSED_STRING reduce using rule 3 (top_statement_list -> empty .)
    FUNC_C          reduce using rule 3 (top_statement_list -> empty .)
    METHOD_C        reduce using rule 3 (top_statement_list -> empty .)
    LINE            reduce using rule 3 (top_statement_list -> empty .)
    FILE            reduce using rule 3 (top_statement_list -> empty .)
    DIR             reduce using rule 3 (top_statement_list -> empty .)
    START_HEREDOC   reduce using rule 3 (top_statement_list -> empty .)
    START_NOWDOC    reduce using rule 3 (top_statement_list -> empty .)
    DOLLAR          reduce using rule 3 (top_statement_list -> empty .)
    VARIABLE        reduce using rule 3 (top_statement_list -> empty .)
    $end            reduce using rule 3 (top_statement_list -> empty .)


state 4

    (2) top_statement_list -> top_statement_list top_statement .

    HALT_COMPILER   reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    CONST           reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    LBRACE          reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    IF              reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    WHILE           reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    DO              reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    FOR             reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    SWITCH          reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    BREAK           reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    CONTINUE        reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    RETURN          reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    GLOBAL          reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    STATIC          reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    ECHO            reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    INLINE_HTML     reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    UNSET           reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    SEMI_COLON      reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    FUNCTION        reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    CLONE           reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    LIST            reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    ARRAY           reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    LBRACKET        reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    PLUS            reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    MINUS           reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    NOT             reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    BOOLEAN_NOT     reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    INC             reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    DEC             reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    INT_CAST        reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    ARRAY_CAST      reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    STRING_CAST     reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    DOUBLE_CAST     reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    BOOL_CAST       reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    UNSET_CAST      reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    BINARY_CAST     reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    ISSET           reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    EMPTY           reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    EVAL            reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    INCLUDE         reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    INCLUDE_ONCE    reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    REQUIRE         reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    REQUIRE_ONCE    reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    PRINT           reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    AT              reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    LPAREN          reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    DOUBLE_QUOTE    reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    IDENTIFIER      reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    EXIT            reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    DIE             reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    INT_NUMBER      reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    FLOAT_NUMBER    reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    FUNC_C          reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    METHOD_C        reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    LINE            reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    FILE            reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    DIR             reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    START_HEREDOC   reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    START_NOWDOC    reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    DOLLAR          reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    VARIABLE        reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)
    $end            reduce using rule 2 (top_statement_list -> top_statement_list top_statement .)


state 5

    (4) top_statement -> statement .

    HALT_COMPILER   reduce using rule 4 (top_statement -> statement .)
    CONST           reduce using rule 4 (top_statement -> statement .)
    LBRACE          reduce using rule 4 (top_statement -> statement .)
    IF              reduce using rule 4 (top_statement -> statement .)
    WHILE           reduce using rule 4 (top_statement -> statement .)
    DO              reduce using rule 4 (top_statement -> statement .)
    FOR             reduce using rule 4 (top_statement -> statement .)
    SWITCH          reduce using rule 4 (top_statement -> statement .)
    BREAK           reduce using rule 4 (top_statement -> statement .)
    CONTINUE        reduce using rule 4 (top_statement -> statement .)
    RETURN          reduce using rule 4 (top_statement -> statement .)
    GLOBAL          reduce using rule 4 (top_statement -> statement .)
    STATIC          reduce using rule 4 (top_statement -> statement .)
    ECHO            reduce using rule 4 (top_statement -> statement .)
    INLINE_HTML     reduce using rule 4 (top_statement -> statement .)
    UNSET           reduce using rule 4 (top_statement -> statement .)
    SEMI_COLON      reduce using rule 4 (top_statement -> statement .)
    FUNCTION        reduce using rule 4 (top_statement -> statement .)
    CLONE           reduce using rule 4 (top_statement -> statement .)
    LIST            reduce using rule 4 (top_statement -> statement .)
    ARRAY           reduce using rule 4 (top_statement -> statement .)
    LBRACKET        reduce using rule 4 (top_statement -> statement .)
    PLUS            reduce using rule 4 (top_statement -> statement .)
    MINUS           reduce using rule 4 (top_statement -> statement .)
    NOT             reduce using rule 4 (top_statement -> statement .)
    BOOLEAN_NOT     reduce using rule 4 (top_statement -> statement .)
    INC             reduce using rule 4 (top_statement -> statement .)
    DEC             reduce using rule 4 (top_statement -> statement .)
    INT_CAST        reduce using rule 4 (top_statement -> statement .)
    ARRAY_CAST      reduce using rule 4 (top_statement -> statement .)
    STRING_CAST     reduce using rule 4 (top_statement -> statement .)
    DOUBLE_CAST     reduce using rule 4 (top_statement -> statement .)
    BOOL_CAST       reduce using rule 4 (top_statement -> statement .)
    UNSET_CAST      reduce using rule 4 (top_statement -> statement .)
    BINARY_CAST     reduce using rule 4 (top_statement -> statement .)
    ISSET           reduce using rule 4 (top_statement -> statement .)
    EMPTY           reduce using rule 4 (top_statement -> statement .)
    EVAL            reduce using rule 4 (top_statement -> statement .)
    INCLUDE         reduce using rule 4 (top_statement -> statement .)
    INCLUDE_ONCE    reduce using rule 4 (top_statement -> statement .)
    REQUIRE         reduce using rule 4 (top_statement -> statement .)
    REQUIRE_ONCE    reduce using rule 4 (top_statement -> statement .)
    PRINT           reduce using rule 4 (top_statement -> statement .)
    AT              reduce using rule 4 (top_statement -> statement .)
    LPAREN          reduce using rule 4 (top_statement -> statement .)
    DOUBLE_QUOTE    reduce using rule 4 (top_statement -> statement .)
    IDENTIFIER      reduce using rule 4 (top_statement -> statement .)
    EXIT            reduce using rule 4 (top_statement -> statement .)
    DIE             reduce using rule 4 (top_statement -> statement .)
    INT_NUMBER      reduce using rule 4 (top_statement -> statement .)
    FLOAT_NUMBER    reduce using rule 4 (top_statement -> statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 4 (top_statement -> statement .)
    FUNC_C          reduce using rule 4 (top_statement -> statement .)
    METHOD_C        reduce using rule 4 (top_statement -> statement .)
    LINE            reduce using rule 4 (top_statement -> statement .)
    FILE            reduce using rule 4 (top_statement -> statement .)
    DIR             reduce using rule 4 (top_statement -> statement .)
    START_HEREDOC   reduce using rule 4 (top_statement -> statement .)
    START_NOWDOC    reduce using rule 4 (top_statement -> statement .)
    DOLLAR          reduce using rule 4 (top_statement -> statement .)
    VARIABLE        reduce using rule 4 (top_statement -> statement .)
    $end            reduce using rule 4 (top_statement -> statement .)


state 6

    (5) top_statement -> function_declaration_statement .

    HALT_COMPILER   reduce using rule 5 (top_statement -> function_declaration_statement .)
    CONST           reduce using rule 5 (top_statement -> function_declaration_statement .)
    LBRACE          reduce using rule 5 (top_statement -> function_declaration_statement .)
    IF              reduce using rule 5 (top_statement -> function_declaration_statement .)
    WHILE           reduce using rule 5 (top_statement -> function_declaration_statement .)
    DO              reduce using rule 5 (top_statement -> function_declaration_statement .)
    FOR             reduce using rule 5 (top_statement -> function_declaration_statement .)
    SWITCH          reduce using rule 5 (top_statement -> function_declaration_statement .)
    BREAK           reduce using rule 5 (top_statement -> function_declaration_statement .)
    CONTINUE        reduce using rule 5 (top_statement -> function_declaration_statement .)
    RETURN          reduce using rule 5 (top_statement -> function_declaration_statement .)
    GLOBAL          reduce using rule 5 (top_statement -> function_declaration_statement .)
    STATIC          reduce using rule 5 (top_statement -> function_declaration_statement .)
    ECHO            reduce using rule 5 (top_statement -> function_declaration_statement .)
    INLINE_HTML     reduce using rule 5 (top_statement -> function_declaration_statement .)
    UNSET           reduce using rule 5 (top_statement -> function_declaration_statement .)
    SEMI_COLON      reduce using rule 5 (top_statement -> function_declaration_statement .)
    FUNCTION        reduce using rule 5 (top_statement -> function_declaration_statement .)
    CLONE           reduce using rule 5 (top_statement -> function_declaration_statement .)
    LIST            reduce using rule 5 (top_statement -> function_declaration_statement .)
    ARRAY           reduce using rule 5 (top_statement -> function_declaration_statement .)
    LBRACKET        reduce using rule 5 (top_statement -> function_declaration_statement .)
    PLUS            reduce using rule 5 (top_statement -> function_declaration_statement .)
    MINUS           reduce using rule 5 (top_statement -> function_declaration_statement .)
    NOT             reduce using rule 5 (top_statement -> function_declaration_statement .)
    BOOLEAN_NOT     reduce using rule 5 (top_statement -> function_declaration_statement .)
    INC             reduce using rule 5 (top_statement -> function_declaration_statement .)
    DEC             reduce using rule 5 (top_statement -> function_declaration_statement .)
    INT_CAST        reduce using rule 5 (top_statement -> function_declaration_statement .)
    ARRAY_CAST      reduce using rule 5 (top_statement -> function_declaration_statement .)
    STRING_CAST     reduce using rule 5 (top_statement -> function_declaration_statement .)
    DOUBLE_CAST     reduce using rule 5 (top_statement -> function_declaration_statement .)
    BOOL_CAST       reduce using rule 5 (top_statement -> function_declaration_statement .)
    UNSET_CAST      reduce using rule 5 (top_statement -> function_declaration_statement .)
    BINARY_CAST     reduce using rule 5 (top_statement -> function_declaration_statement .)
    ISSET           reduce using rule 5 (top_statement -> function_declaration_statement .)
    EMPTY           reduce using rule 5 (top_statement -> function_declaration_statement .)
    EVAL            reduce using rule 5 (top_statement -> function_declaration_statement .)
    INCLUDE         reduce using rule 5 (top_statement -> function_declaration_statement .)
    INCLUDE_ONCE    reduce using rule 5 (top_statement -> function_declaration_statement .)
    REQUIRE         reduce using rule 5 (top_statement -> function_declaration_statement .)
    REQUIRE_ONCE    reduce using rule 5 (top_statement -> function_declaration_statement .)
    PRINT           reduce using rule 5 (top_statement -> function_declaration_statement .)
    AT              reduce using rule 5 (top_statement -> function_declaration_statement .)
    LPAREN          reduce using rule 5 (top_statement -> function_declaration_statement .)
    DOUBLE_QUOTE    reduce using rule 5 (top_statement -> function_declaration_statement .)
    IDENTIFIER      reduce using rule 5 (top_statement -> function_declaration_statement .)
    EXIT            reduce using rule 5 (top_statement -> function_declaration_statement .)
    DIE             reduce using rule 5 (top_statement -> function_declaration_statement .)
    INT_NUMBER      reduce using rule 5 (top_statement -> function_declaration_statement .)
    FLOAT_NUMBER    reduce using rule 5 (top_statement -> function_declaration_statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 5 (top_statement -> function_declaration_statement .)
    FUNC_C          reduce using rule 5 (top_statement -> function_declaration_statement .)
    METHOD_C        reduce using rule 5 (top_statement -> function_declaration_statement .)
    LINE            reduce using rule 5 (top_statement -> function_declaration_statement .)
    FILE            reduce using rule 5 (top_statement -> function_declaration_statement .)
    DIR             reduce using rule 5 (top_statement -> function_declaration_statement .)
    START_HEREDOC   reduce using rule 5 (top_statement -> function_declaration_statement .)
    START_NOWDOC    reduce using rule 5 (top_statement -> function_declaration_statement .)
    DOLLAR          reduce using rule 5 (top_statement -> function_declaration_statement .)
    VARIABLE        reduce using rule 5 (top_statement -> function_declaration_statement .)
    $end            reduce using rule 5 (top_statement -> function_declaration_statement .)


state 7

    (6) top_statement -> HALT_COMPILER . LPAREN RPAREN SEMI_COLON

    LPAREN          shift and go to state 82


state 8

    (214) expr -> LPAREN . expr RPAREN
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 83
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 9

    (36) statement -> SEMI_COLON .

    HALT_COMPILER   reduce using rule 36 (statement -> SEMI_COLON .)
    CONST           reduce using rule 36 (statement -> SEMI_COLON .)
    LBRACE          reduce using rule 36 (statement -> SEMI_COLON .)
    IF              reduce using rule 36 (statement -> SEMI_COLON .)
    WHILE           reduce using rule 36 (statement -> SEMI_COLON .)
    DO              reduce using rule 36 (statement -> SEMI_COLON .)
    FOR             reduce using rule 36 (statement -> SEMI_COLON .)
    SWITCH          reduce using rule 36 (statement -> SEMI_COLON .)
    BREAK           reduce using rule 36 (statement -> SEMI_COLON .)
    CONTINUE        reduce using rule 36 (statement -> SEMI_COLON .)
    RETURN          reduce using rule 36 (statement -> SEMI_COLON .)
    GLOBAL          reduce using rule 36 (statement -> SEMI_COLON .)
    STATIC          reduce using rule 36 (statement -> SEMI_COLON .)
    ECHO            reduce using rule 36 (statement -> SEMI_COLON .)
    INLINE_HTML     reduce using rule 36 (statement -> SEMI_COLON .)
    UNSET           reduce using rule 36 (statement -> SEMI_COLON .)
    SEMI_COLON      reduce using rule 36 (statement -> SEMI_COLON .)
    FUNCTION        reduce using rule 36 (statement -> SEMI_COLON .)
    CLONE           reduce using rule 36 (statement -> SEMI_COLON .)
    LIST            reduce using rule 36 (statement -> SEMI_COLON .)
    ARRAY           reduce using rule 36 (statement -> SEMI_COLON .)
    LBRACKET        reduce using rule 36 (statement -> SEMI_COLON .)
    PLUS            reduce using rule 36 (statement -> SEMI_COLON .)
    MINUS           reduce using rule 36 (statement -> SEMI_COLON .)
    NOT             reduce using rule 36 (statement -> SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 36 (statement -> SEMI_COLON .)
    INC             reduce using rule 36 (statement -> SEMI_COLON .)
    DEC             reduce using rule 36 (statement -> SEMI_COLON .)
    INT_CAST        reduce using rule 36 (statement -> SEMI_COLON .)
    ARRAY_CAST      reduce using rule 36 (statement -> SEMI_COLON .)
    STRING_CAST     reduce using rule 36 (statement -> SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 36 (statement -> SEMI_COLON .)
    BOOL_CAST       reduce using rule 36 (statement -> SEMI_COLON .)
    UNSET_CAST      reduce using rule 36 (statement -> SEMI_COLON .)
    BINARY_CAST     reduce using rule 36 (statement -> SEMI_COLON .)
    ISSET           reduce using rule 36 (statement -> SEMI_COLON .)
    EMPTY           reduce using rule 36 (statement -> SEMI_COLON .)
    EVAL            reduce using rule 36 (statement -> SEMI_COLON .)
    INCLUDE         reduce using rule 36 (statement -> SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 36 (statement -> SEMI_COLON .)
    REQUIRE         reduce using rule 36 (statement -> SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 36 (statement -> SEMI_COLON .)
    PRINT           reduce using rule 36 (statement -> SEMI_COLON .)
    AT              reduce using rule 36 (statement -> SEMI_COLON .)
    LPAREN          reduce using rule 36 (statement -> SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 36 (statement -> SEMI_COLON .)
    IDENTIFIER      reduce using rule 36 (statement -> SEMI_COLON .)
    EXIT            reduce using rule 36 (statement -> SEMI_COLON .)
    DIE             reduce using rule 36 (statement -> SEMI_COLON .)
    INT_NUMBER      reduce using rule 36 (statement -> SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 36 (statement -> SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 36 (statement -> SEMI_COLON .)
    FUNC_C          reduce using rule 36 (statement -> SEMI_COLON .)
    METHOD_C        reduce using rule 36 (statement -> SEMI_COLON .)
    LINE            reduce using rule 36 (statement -> SEMI_COLON .)
    FILE            reduce using rule 36 (statement -> SEMI_COLON .)
    DIR             reduce using rule 36 (statement -> SEMI_COLON .)
    START_HEREDOC   reduce using rule 36 (statement -> SEMI_COLON .)
    START_NOWDOC    reduce using rule 36 (statement -> SEMI_COLON .)
    DOLLAR          reduce using rule 36 (statement -> SEMI_COLON .)
    VARIABLE        reduce using rule 36 (statement -> SEMI_COLON .)
    $end            reduce using rule 36 (statement -> SEMI_COLON .)
    RBRACE          reduce using rule 36 (statement -> SEMI_COLON .)
    YIELD           reduce using rule 36 (statement -> SEMI_COLON .)
    ELSEIF          reduce using rule 36 (statement -> SEMI_COLON .)
    ELSE            reduce using rule 36 (statement -> SEMI_COLON .)
    ENDIF           reduce using rule 36 (statement -> SEMI_COLON .)
    ENDWHILE        reduce using rule 36 (statement -> SEMI_COLON .)
    ENDSWITCH       reduce using rule 36 (statement -> SEMI_COLON .)
    ENDFOR          reduce using rule 36 (statement -> SEMI_COLON .)
    CASE            reduce using rule 36 (statement -> SEMI_COLON .)
    DEFAULT         reduce using rule 36 (statement -> SEMI_COLON .)


state 10

    (7) top_statement -> CONST . constant_declarations SEMI_COLON
    (8) constant_declarations -> . constant_declarations COMMA constant_declaration
    (9) constant_declarations -> . constant_declaration
    (10) constant_declaration -> . IDENTIFIER EQUALS static_expr

    IDENTIFIER      shift and go to state 87

    constant_declarations          shift and go to state 85
    constant_declaration           shift and go to state 86

state 11

    (17) statement -> LBRACE . inner_statement_list RBRACE
    (11) inner_statement_list -> . inner_statement_list inner_statement
    (12) inner_statement_list -> . empty
    (289) empty -> .

    RBRACE          reduce using rule 289 (empty -> .)
    YIELD           reduce using rule 289 (empty -> .)
    LBRACE          reduce using rule 289 (empty -> .)
    IF              reduce using rule 289 (empty -> .)
    WHILE           reduce using rule 289 (empty -> .)
    DO              reduce using rule 289 (empty -> .)
    FOR             reduce using rule 289 (empty -> .)
    SWITCH          reduce using rule 289 (empty -> .)
    BREAK           reduce using rule 289 (empty -> .)
    CONTINUE        reduce using rule 289 (empty -> .)
    RETURN          reduce using rule 289 (empty -> .)
    GLOBAL          reduce using rule 289 (empty -> .)
    STATIC          reduce using rule 289 (empty -> .)
    ECHO            reduce using rule 289 (empty -> .)
    INLINE_HTML     reduce using rule 289 (empty -> .)
    UNSET           reduce using rule 289 (empty -> .)
    SEMI_COLON      reduce using rule 289 (empty -> .)
    FUNCTION        reduce using rule 289 (empty -> .)
    CLONE           reduce using rule 289 (empty -> .)
    LIST            reduce using rule 289 (empty -> .)
    ARRAY           reduce using rule 289 (empty -> .)
    LBRACKET        reduce using rule 289 (empty -> .)
    PLUS            reduce using rule 289 (empty -> .)
    MINUS           reduce using rule 289 (empty -> .)
    NOT             reduce using rule 289 (empty -> .)
    BOOLEAN_NOT     reduce using rule 289 (empty -> .)
    INC             reduce using rule 289 (empty -> .)
    DEC             reduce using rule 289 (empty -> .)
    INT_CAST        reduce using rule 289 (empty -> .)
    ARRAY_CAST      reduce using rule 289 (empty -> .)
    STRING_CAST     reduce using rule 289 (empty -> .)
    DOUBLE_CAST     reduce using rule 289 (empty -> .)
    BOOL_CAST       reduce using rule 289 (empty -> .)
    UNSET_CAST      reduce using rule 289 (empty -> .)
    BINARY_CAST     reduce using rule 289 (empty -> .)
    ISSET           reduce using rule 289 (empty -> .)
    EMPTY           reduce using rule 289 (empty -> .)
    EVAL            reduce using rule 289 (empty -> .)
    INCLUDE         reduce using rule 289 (empty -> .)
    INCLUDE_ONCE    reduce using rule 289 (empty -> .)
    REQUIRE         reduce using rule 289 (empty -> .)
    REQUIRE_ONCE    reduce using rule 289 (empty -> .)
    PRINT           reduce using rule 289 (empty -> .)
    AT              reduce using rule 289 (empty -> .)
    LPAREN          reduce using rule 289 (empty -> .)
    DOUBLE_QUOTE    reduce using rule 289 (empty -> .)
    IDENTIFIER      reduce using rule 289 (empty -> .)
    EXIT            reduce using rule 289 (empty -> .)
    DIE             reduce using rule 289 (empty -> .)
    INT_NUMBER      reduce using rule 289 (empty -> .)
    FLOAT_NUMBER    reduce using rule 289 (empty -> .)
    CONSTANT_ENCAPSED_STRING reduce using rule 289 (empty -> .)
    FUNC_C          reduce using rule 289 (empty -> .)
    METHOD_C        reduce using rule 289 (empty -> .)
    LINE            reduce using rule 289 (empty -> .)
    FILE            reduce using rule 289 (empty -> .)
    DIR             reduce using rule 289 (empty -> .)
    START_HEREDOC   reduce using rule 289 (empty -> .)
    START_NOWDOC    reduce using rule 289 (empty -> .)
    DOLLAR          reduce using rule 289 (empty -> .)
    VARIABLE        reduce using rule 289 (empty -> .)

    inner_statement_list           shift and go to state 88
    empty                          shift and go to state 89

state 12

    (18) statement -> IF . LPAREN expr RPAREN statement elseif_list else_single
    (19) statement -> IF . LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON

    LPAREN          shift and go to state 90


state 13

    (34) statement -> expr . SEMI_COLON
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      shift and go to state 91
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 14

    (20) statement -> WHILE . LPAREN expr RPAREN while_statement

    LPAREN          shift and go to state 119


state 15

    (21) statement -> DO . statement WHILE LPAREN expr RPAREN SEMI_COLON
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list else_single
    (19) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (20) statement -> . WHILE LPAREN expr RPAREN while_statement
    (21) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (22) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (23) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (24) statement -> . BREAK SEMI_COLON
    (25) statement -> . BREAK expr SEMI_COLON
    (26) statement -> . CONTINUE SEMI_COLON
    (27) statement -> . CONTINUE expr SEMI_COLON
    (28) statement -> . RETURN SEMI_COLON
    (29) statement -> . RETURN expr SEMI_COLON
    (30) statement -> . GLOBAL global_var_list SEMI_COLON
    (31) statement -> . STATIC static_var_list SEMI_COLON
    (32) statement -> . ECHO echo_expr_list SEMI_COLON
    (33) statement -> . INLINE_HTML
    (34) statement -> . expr SEMI_COLON
    (35) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (36) statement -> . SEMI_COLON
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    statement                      shift and go to state 120
    expr                           shift and go to state 13
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 16

    (22) statement -> FOR . LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement

    LPAREN          shift and go to state 121


state 17

    (23) statement -> SWITCH . LPAREN expr RPAREN switch_case_list

    LPAREN          shift and go to state 122


state 18

    (24) statement -> BREAK . SEMI_COLON
    (25) statement -> BREAK . expr SEMI_COLON
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    SEMI_COLON      shift and go to state 123
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 124
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 19

    (26) statement -> CONTINUE . SEMI_COLON
    (27) statement -> CONTINUE . expr SEMI_COLON
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    SEMI_COLON      shift and go to state 125
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 126
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 20

    (28) statement -> RETURN . SEMI_COLON
    (29) statement -> RETURN . expr SEMI_COLON
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    SEMI_COLON      shift and go to state 127
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 128
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 21

    (30) statement -> GLOBAL . global_var_list SEMI_COLON
    (64) global_var_list -> . global_var_list COMMA global_var
    (65) global_var_list -> . global_var
    (66) global_var -> . VARIABLE
    (67) global_var -> . DOLLAR variable
    (68) global_var -> . DOLLAR LBRACE expr RBRACE

    VARIABLE        shift and go to state 131
    DOLLAR          shift and go to state 132

    global_var_list                shift and go to state 129
    global_var                     shift and go to state 130

state 22

    (31) statement -> STATIC . static_var_list SEMI_COLON
    (69) static_var_list -> . static_var_list COMMA static_var
    (70) static_var_list -> . static_var
    (71) static_var -> . VARIABLE EQUALS static_scalar
    (72) static_var -> . VARIABLE

    VARIABLE        shift and go to state 135

    static_var_list                shift and go to state 133
    static_var                     shift and go to state 134

state 23

    (32) statement -> ECHO . echo_expr_list SEMI_COLON
    (73) echo_expr_list -> . echo_expr_list COMMA expr
    (74) echo_expr_list -> . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    echo_expr_list                 shift and go to state 136
    expr                           shift and go to state 137
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 24

    (33) statement -> INLINE_HTML .

    HALT_COMPILER   reduce using rule 33 (statement -> INLINE_HTML .)
    CONST           reduce using rule 33 (statement -> INLINE_HTML .)
    LBRACE          reduce using rule 33 (statement -> INLINE_HTML .)
    IF              reduce using rule 33 (statement -> INLINE_HTML .)
    WHILE           reduce using rule 33 (statement -> INLINE_HTML .)
    DO              reduce using rule 33 (statement -> INLINE_HTML .)
    FOR             reduce using rule 33 (statement -> INLINE_HTML .)
    SWITCH          reduce using rule 33 (statement -> INLINE_HTML .)
    BREAK           reduce using rule 33 (statement -> INLINE_HTML .)
    CONTINUE        reduce using rule 33 (statement -> INLINE_HTML .)
    RETURN          reduce using rule 33 (statement -> INLINE_HTML .)
    GLOBAL          reduce using rule 33 (statement -> INLINE_HTML .)
    STATIC          reduce using rule 33 (statement -> INLINE_HTML .)
    ECHO            reduce using rule 33 (statement -> INLINE_HTML .)
    INLINE_HTML     reduce using rule 33 (statement -> INLINE_HTML .)
    UNSET           reduce using rule 33 (statement -> INLINE_HTML .)
    SEMI_COLON      reduce using rule 33 (statement -> INLINE_HTML .)
    FUNCTION        reduce using rule 33 (statement -> INLINE_HTML .)
    CLONE           reduce using rule 33 (statement -> INLINE_HTML .)
    LIST            reduce using rule 33 (statement -> INLINE_HTML .)
    ARRAY           reduce using rule 33 (statement -> INLINE_HTML .)
    LBRACKET        reduce using rule 33 (statement -> INLINE_HTML .)
    PLUS            reduce using rule 33 (statement -> INLINE_HTML .)
    MINUS           reduce using rule 33 (statement -> INLINE_HTML .)
    NOT             reduce using rule 33 (statement -> INLINE_HTML .)
    BOOLEAN_NOT     reduce using rule 33 (statement -> INLINE_HTML .)
    INC             reduce using rule 33 (statement -> INLINE_HTML .)
    DEC             reduce using rule 33 (statement -> INLINE_HTML .)
    INT_CAST        reduce using rule 33 (statement -> INLINE_HTML .)
    ARRAY_CAST      reduce using rule 33 (statement -> INLINE_HTML .)
    STRING_CAST     reduce using rule 33 (statement -> INLINE_HTML .)
    DOUBLE_CAST     reduce using rule 33 (statement -> INLINE_HTML .)
    BOOL_CAST       reduce using rule 33 (statement -> INLINE_HTML .)
    UNSET_CAST      reduce using rule 33 (statement -> INLINE_HTML .)
    BINARY_CAST     reduce using rule 33 (statement -> INLINE_HTML .)
    ISSET           reduce using rule 33 (statement -> INLINE_HTML .)
    EMPTY           reduce using rule 33 (statement -> INLINE_HTML .)
    EVAL            reduce using rule 33 (statement -> INLINE_HTML .)
    INCLUDE         reduce using rule 33 (statement -> INLINE_HTML .)
    INCLUDE_ONCE    reduce using rule 33 (statement -> INLINE_HTML .)
    REQUIRE         reduce using rule 33 (statement -> INLINE_HTML .)
    REQUIRE_ONCE    reduce using rule 33 (statement -> INLINE_HTML .)
    PRINT           reduce using rule 33 (statement -> INLINE_HTML .)
    AT              reduce using rule 33 (statement -> INLINE_HTML .)
    LPAREN          reduce using rule 33 (statement -> INLINE_HTML .)
    DOUBLE_QUOTE    reduce using rule 33 (statement -> INLINE_HTML .)
    IDENTIFIER      reduce using rule 33 (statement -> INLINE_HTML .)
    EXIT            reduce using rule 33 (statement -> INLINE_HTML .)
    DIE             reduce using rule 33 (statement -> INLINE_HTML .)
    INT_NUMBER      reduce using rule 33 (statement -> INLINE_HTML .)
    FLOAT_NUMBER    reduce using rule 33 (statement -> INLINE_HTML .)
    CONSTANT_ENCAPSED_STRING reduce using rule 33 (statement -> INLINE_HTML .)
    FUNC_C          reduce using rule 33 (statement -> INLINE_HTML .)
    METHOD_C        reduce using rule 33 (statement -> INLINE_HTML .)
    LINE            reduce using rule 33 (statement -> INLINE_HTML .)
    FILE            reduce using rule 33 (statement -> INLINE_HTML .)
    DIR             reduce using rule 33 (statement -> INLINE_HTML .)
    START_HEREDOC   reduce using rule 33 (statement -> INLINE_HTML .)
    START_NOWDOC    reduce using rule 33 (statement -> INLINE_HTML .)
    DOLLAR          reduce using rule 33 (statement -> INLINE_HTML .)
    VARIABLE        reduce using rule 33 (statement -> INLINE_HTML .)
    $end            reduce using rule 33 (statement -> INLINE_HTML .)
    RBRACE          reduce using rule 33 (statement -> INLINE_HTML .)
    YIELD           reduce using rule 33 (statement -> INLINE_HTML .)
    ELSEIF          reduce using rule 33 (statement -> INLINE_HTML .)
    ELSE            reduce using rule 33 (statement -> INLINE_HTML .)
    ENDIF           reduce using rule 33 (statement -> INLINE_HTML .)
    ENDWHILE        reduce using rule 33 (statement -> INLINE_HTML .)
    ENDSWITCH       reduce using rule 33 (statement -> INLINE_HTML .)
    ENDFOR          reduce using rule 33 (statement -> INLINE_HTML .)
    CASE            reduce using rule 33 (statement -> INLINE_HTML .)
    DEFAULT         reduce using rule 33 (statement -> INLINE_HTML .)


state 25

    (35) statement -> UNSET . LPAREN unset_variables RPAREN SEMI_COLON

    LPAREN          shift and go to state 138


state 26

    (78) function_declaration_statement -> FUNCTION . is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (137) expr -> FUNCTION . is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (79) is_reference -> . AND
    (80) is_reference -> . empty
    (289) empty -> .

    AND             shift and go to state 140
    IDENTIFIER      reduce using rule 289 (empty -> .)
    LPAREN          reduce using rule 289 (empty -> .)

    is_reference                   shift and go to state 139
    empty                          shift and go to state 141

state 27

    (218) scalar -> IDENTIFIER . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (224) scalar -> IDENTIFIER .
    (228) common_scalar -> IDENTIFIER . CONSTANT_ENCAPSED_STRING
    (102) function_call -> IDENTIFIER . fucntion_call_body
    (104) fucntion_call_body -> . LPAREN nonempty_function_call_parameter_list RPAREN
    (105) fucntion_call_body -> . LPAREN empty RPAREN

    DOUBLE_QUOTE    shift and go to state 142
    SEMI_COLON      reduce using rule 224 (scalar -> IDENTIFIER .)
    LBRACE          reduce using rule 224 (scalar -> IDENTIFIER .)
    BOOLEAN_AND     reduce using rule 224 (scalar -> IDENTIFIER .)
    BOOLEAN_OR      reduce using rule 224 (scalar -> IDENTIFIER .)
    LOGICAL_AND     reduce using rule 224 (scalar -> IDENTIFIER .)
    LOGICAL_OR      reduce using rule 224 (scalar -> IDENTIFIER .)
    LOGICAL_XOR     reduce using rule 224 (scalar -> IDENTIFIER .)
    AND             reduce using rule 224 (scalar -> IDENTIFIER .)
    OR              reduce using rule 224 (scalar -> IDENTIFIER .)
    XOR             reduce using rule 224 (scalar -> IDENTIFIER .)
    CONCAT          reduce using rule 224 (scalar -> IDENTIFIER .)
    PLUS            reduce using rule 224 (scalar -> IDENTIFIER .)
    MINUS           reduce using rule 224 (scalar -> IDENTIFIER .)
    MUL             reduce using rule 224 (scalar -> IDENTIFIER .)
    DIV             reduce using rule 224 (scalar -> IDENTIFIER .)
    SL              reduce using rule 224 (scalar -> IDENTIFIER .)
    SR              reduce using rule 224 (scalar -> IDENTIFIER .)
    MOD             reduce using rule 224 (scalar -> IDENTIFIER .)
    IS_IDENTICAL    reduce using rule 224 (scalar -> IDENTIFIER .)
    IS_NOT_IDENTICAL reduce using rule 224 (scalar -> IDENTIFIER .)
    IS_EQUAL_TO     reduce using rule 224 (scalar -> IDENTIFIER .)
    IS_NOT_EQUAL    reduce using rule 224 (scalar -> IDENTIFIER .)
    LESS_THAN       reduce using rule 224 (scalar -> IDENTIFIER .)
    LESS_THAN_OR_EQUAL reduce using rule 224 (scalar -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 224 (scalar -> IDENTIFIER .)
    GRATER_THAN_OR_EQUAL reduce using rule 224 (scalar -> IDENTIFIER .)
    INSTANCEOF      reduce using rule 224 (scalar -> IDENTIFIER .)
    QUESTION        reduce using rule 224 (scalar -> IDENTIFIER .)
    RPAREN          reduce using rule 224 (scalar -> IDENTIFIER .)
    COMMA           reduce using rule 224 (scalar -> IDENTIFIER .)
    DOUBLE_ARROW    reduce using rule 224 (scalar -> IDENTIFIER .)
    RBRACKET        reduce using rule 224 (scalar -> IDENTIFIER .)
    RBRACE          reduce using rule 224 (scalar -> IDENTIFIER .)
    COLON           reduce using rule 224 (scalar -> IDENTIFIER .)
    CONSTANT_ENCAPSED_STRING shift and go to state 143
    LPAREN          shift and go to state 145

    fucntion_call_body             shift and go to state 144

state 28

    (89) expr -> variable .
    (90) expr -> variable . EQUALS expr
    (91) expr -> variable . EQUALS AND expr
    (144) expr -> variable . PLUS_EQUAL expr
    (145) expr -> variable . MINUS_EQUAL expr
    (146) expr -> variable . MUL_EQUAL expr
    (147) expr -> variable . DIV_EQUAL expr
    (148) expr -> variable . CONCAT_EQUAL expr
    (149) expr -> variable . MOD_EQUAL expr
    (150) expr -> variable . AND_EQUAL expr
    (151) expr -> variable . OR_EQUAL expr
    (152) expr -> variable . XOR_EQUAL expr
    (153) expr -> variable . SL_EQUAL expr
    (154) expr -> variable . SR_EQUAL expr
    (189) expr -> variable . INC
    (190) expr -> variable . DEC
    (111) variable -> variable . LBRACKET dim_offset RBRACKET

    SEMI_COLON      reduce using rule 89 (expr -> variable .)
    LBRACE          reduce using rule 89 (expr -> variable .)
    BOOLEAN_AND     reduce using rule 89 (expr -> variable .)
    BOOLEAN_OR      reduce using rule 89 (expr -> variable .)
    LOGICAL_AND     reduce using rule 89 (expr -> variable .)
    LOGICAL_OR      reduce using rule 89 (expr -> variable .)
    LOGICAL_XOR     reduce using rule 89 (expr -> variable .)
    AND             reduce using rule 89 (expr -> variable .)
    OR              reduce using rule 89 (expr -> variable .)
    XOR             reduce using rule 89 (expr -> variable .)
    CONCAT          reduce using rule 89 (expr -> variable .)
    PLUS            reduce using rule 89 (expr -> variable .)
    MINUS           reduce using rule 89 (expr -> variable .)
    MUL             reduce using rule 89 (expr -> variable .)
    DIV             reduce using rule 89 (expr -> variable .)
    SL              reduce using rule 89 (expr -> variable .)
    SR              reduce using rule 89 (expr -> variable .)
    MOD             reduce using rule 89 (expr -> variable .)
    IS_IDENTICAL    reduce using rule 89 (expr -> variable .)
    IS_NOT_IDENTICAL reduce using rule 89 (expr -> variable .)
    IS_EQUAL_TO     reduce using rule 89 (expr -> variable .)
    IS_NOT_EQUAL    reduce using rule 89 (expr -> variable .)
    LESS_THAN       reduce using rule 89 (expr -> variable .)
    LESS_THAN_OR_EQUAL reduce using rule 89 (expr -> variable .)
    GREATER_THAN    reduce using rule 89 (expr -> variable .)
    GRATER_THAN_OR_EQUAL reduce using rule 89 (expr -> variable .)
    INSTANCEOF      reduce using rule 89 (expr -> variable .)
    QUESTION        reduce using rule 89 (expr -> variable .)
    RPAREN          reduce using rule 89 (expr -> variable .)
    COMMA           reduce using rule 89 (expr -> variable .)
    DOUBLE_ARROW    reduce using rule 89 (expr -> variable .)
    RBRACKET        reduce using rule 89 (expr -> variable .)
    RBRACE          reduce using rule 89 (expr -> variable .)
    COLON           reduce using rule 89 (expr -> variable .)
    EQUALS          shift and go to state 146
    PLUS_EQUAL      shift and go to state 147
    MINUS_EQUAL     shift and go to state 148
    MUL_EQUAL       shift and go to state 149
    DIV_EQUAL       shift and go to state 150
    CONCAT_EQUAL    shift and go to state 151
    MOD_EQUAL       shift and go to state 152
    AND_EQUAL       shift and go to state 153
    OR_EQUAL        shift and go to state 154
    XOR_EQUAL       shift and go to state 155
    SL_EQUAL        shift and go to state 156
    SR_EQUAL        shift and go to state 157
    INC             shift and go to state 158
    DEC             shift and go to state 159
    LBRACKET        shift and go to state 160


state 29

    (92) expr -> CLONE . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 161
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 30

    (93) expr -> LIST . LPAREN assignment_list RPAREN EQUALS expr

    LPAREN          shift and go to state 162


state 31

    (121) expr -> scalar .

    SEMI_COLON      reduce using rule 121 (expr -> scalar .)
    LBRACE          reduce using rule 121 (expr -> scalar .)
    BOOLEAN_AND     reduce using rule 121 (expr -> scalar .)
    BOOLEAN_OR      reduce using rule 121 (expr -> scalar .)
    LOGICAL_AND     reduce using rule 121 (expr -> scalar .)
    LOGICAL_OR      reduce using rule 121 (expr -> scalar .)
    LOGICAL_XOR     reduce using rule 121 (expr -> scalar .)
    AND             reduce using rule 121 (expr -> scalar .)
    OR              reduce using rule 121 (expr -> scalar .)
    XOR             reduce using rule 121 (expr -> scalar .)
    CONCAT          reduce using rule 121 (expr -> scalar .)
    PLUS            reduce using rule 121 (expr -> scalar .)
    MINUS           reduce using rule 121 (expr -> scalar .)
    MUL             reduce using rule 121 (expr -> scalar .)
    DIV             reduce using rule 121 (expr -> scalar .)
    SL              reduce using rule 121 (expr -> scalar .)
    SR              reduce using rule 121 (expr -> scalar .)
    MOD             reduce using rule 121 (expr -> scalar .)
    IS_IDENTICAL    reduce using rule 121 (expr -> scalar .)
    IS_NOT_IDENTICAL reduce using rule 121 (expr -> scalar .)
    IS_EQUAL_TO     reduce using rule 121 (expr -> scalar .)
    IS_NOT_EQUAL    reduce using rule 121 (expr -> scalar .)
    LESS_THAN       reduce using rule 121 (expr -> scalar .)
    LESS_THAN_OR_EQUAL reduce using rule 121 (expr -> scalar .)
    GREATER_THAN    reduce using rule 121 (expr -> scalar .)
    GRATER_THAN_OR_EQUAL reduce using rule 121 (expr -> scalar .)
    INSTANCEOF      reduce using rule 121 (expr -> scalar .)
    QUESTION        reduce using rule 121 (expr -> scalar .)
    RPAREN          reduce using rule 121 (expr -> scalar .)
    COMMA           reduce using rule 121 (expr -> scalar .)
    DOUBLE_ARROW    reduce using rule 121 (expr -> scalar .)
    RBRACKET        reduce using rule 121 (expr -> scalar .)
    RBRACE          reduce using rule 121 (expr -> scalar .)
    COLON           reduce using rule 121 (expr -> scalar .)


state 32

    (122) expr -> ARRAY . LPAREN array_pair_list RPAREN
    (103) function_call -> ARRAY . fucntion_call_body
    (104) fucntion_call_body -> . LPAREN nonempty_function_call_parameter_list RPAREN
    (105) fucntion_call_body -> . LPAREN empty RPAREN

    LPAREN          shift and go to state 163

    fucntion_call_body             shift and go to state 164

state 33

    (123) expr -> LBRACKET . array_pair_list RBRACKET
    (124) array_pair_list -> . empty
    (125) array_pair_list -> . non_empty_array_pair_list possible_comma
    (289) empty -> .
    (126) non_empty_array_pair_list -> . nonempty_function_call_parameter_list
    (127) non_empty_array_pair_list -> . non_empty_array_pair_list COMMA expr DOUBLE_ARROW AND variable
    (128) non_empty_array_pair_list -> . non_empty_array_pair_list COMMA expr DOUBLE_ARROW expr
    (129) non_empty_array_pair_list -> . expr DOUBLE_ARROW AND variable
    (130) non_empty_array_pair_list -> . expr DOUBLE_ARROW expr
    (133) nonempty_function_call_parameter_list -> . nonempty_function_call_parameter_list COMMA function_call_parameter
    (134) nonempty_function_call_parameter_list -> . function_call_parameter
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (135) function_call_parameter -> . expr
    (136) function_call_parameter -> . AND variable
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    RBRACKET        reduce using rule 289 (empty -> .)
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    AND             shift and go to state 170
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    array_pair_list                shift and go to state 165
    empty                          shift and go to state 166
    non_empty_array_pair_list      shift and go to state 167
    nonempty_function_call_parameter_list shift and go to state 168
    expr                           shift and go to state 169
    variable                       shift and go to state 28
    function_call_parameter        shift and go to state 171
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 34

    (181) expr -> PLUS . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 172
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 35

    (182) expr -> MINUS . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 173
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 36

    (183) expr -> NOT . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 174
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 37

    (184) expr -> BOOLEAN_NOT . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 175
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 38

    (187) expr -> INC . variable
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    IDENTIFIER      shift and go to state 177
    ARRAY           shift and go to state 178
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    variable                       shift and go to state 176
    base_variable_with_function_calls shift and go to state 57
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 39

    (188) expr -> DEC . variable
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    IDENTIFIER      shift and go to state 177
    ARRAY           shift and go to state 178
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    variable                       shift and go to state 179
    base_variable_with_function_calls shift and go to state 57
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 40

    (191) expr -> INT_CAST . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 180
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 41

    (192) expr -> ARRAY_CAST . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 181
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 42

    (193) expr -> STRING_CAST . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 182
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 43

    (194) expr -> DOUBLE_CAST . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 183
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 44

    (195) expr -> BOOL_CAST . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 184
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 45

    (196) expr -> UNSET_CAST . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 185
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 46

    (197) expr -> BINARY_CAST . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 186
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 47

    (198) expr -> ISSET . LPAREN isset_variables RPAREN

    LPAREN          shift and go to state 187


state 48

    (201) expr -> EMPTY . LPAREN expr RPAREN

    LPAREN          shift and go to state 188


state 49

    (202) expr -> EVAL . LPAREN expr RPAREN

    LPAREN          shift and go to state 189


state 50

    (203) expr -> INCLUDE . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 190
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 51

    (204) expr -> INCLUDE_ONCE . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 191
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 52

    (205) expr -> REQUIRE . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 192
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 53

    (206) expr -> REQUIRE_ONCE . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 193
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 54

    (209) expr -> exit_or_die .
    (210) expr -> exit_or_die . LPAREN RPAREN
    (211) expr -> exit_or_die . LPAREN expr RPAREN

    SEMI_COLON      reduce using rule 209 (expr -> exit_or_die .)
    LBRACE          reduce using rule 209 (expr -> exit_or_die .)
    BOOLEAN_AND     reduce using rule 209 (expr -> exit_or_die .)
    BOOLEAN_OR      reduce using rule 209 (expr -> exit_or_die .)
    LOGICAL_AND     reduce using rule 209 (expr -> exit_or_die .)
    LOGICAL_OR      reduce using rule 209 (expr -> exit_or_die .)
    LOGICAL_XOR     reduce using rule 209 (expr -> exit_or_die .)
    AND             reduce using rule 209 (expr -> exit_or_die .)
    OR              reduce using rule 209 (expr -> exit_or_die .)
    XOR             reduce using rule 209 (expr -> exit_or_die .)
    CONCAT          reduce using rule 209 (expr -> exit_or_die .)
    PLUS            reduce using rule 209 (expr -> exit_or_die .)
    MINUS           reduce using rule 209 (expr -> exit_or_die .)
    MUL             reduce using rule 209 (expr -> exit_or_die .)
    DIV             reduce using rule 209 (expr -> exit_or_die .)
    SL              reduce using rule 209 (expr -> exit_or_die .)
    SR              reduce using rule 209 (expr -> exit_or_die .)
    MOD             reduce using rule 209 (expr -> exit_or_die .)
    IS_IDENTICAL    reduce using rule 209 (expr -> exit_or_die .)
    IS_NOT_IDENTICAL reduce using rule 209 (expr -> exit_or_die .)
    IS_EQUAL_TO     reduce using rule 209 (expr -> exit_or_die .)
    IS_NOT_EQUAL    reduce using rule 209 (expr -> exit_or_die .)
    LESS_THAN       reduce using rule 209 (expr -> exit_or_die .)
    LESS_THAN_OR_EQUAL reduce using rule 209 (expr -> exit_or_die .)
    GREATER_THAN    reduce using rule 209 (expr -> exit_or_die .)
    GRATER_THAN_OR_EQUAL reduce using rule 209 (expr -> exit_or_die .)
    INSTANCEOF      reduce using rule 209 (expr -> exit_or_die .)
    QUESTION        reduce using rule 209 (expr -> exit_or_die .)
    RPAREN          reduce using rule 209 (expr -> exit_or_die .)
    COMMA           reduce using rule 209 (expr -> exit_or_die .)
    DOUBLE_ARROW    reduce using rule 209 (expr -> exit_or_die .)
    RBRACKET        reduce using rule 209 (expr -> exit_or_die .)
    RBRACE          reduce using rule 209 (expr -> exit_or_die .)
    COLON           reduce using rule 209 (expr -> exit_or_die .)
    LPAREN          shift and go to state 194


state 55

    (212) expr -> PRINT . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 195
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 56

    (213) expr -> AT . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 196
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 57

    (99) variable -> base_variable_with_function_calls .

    EQUALS          reduce using rule 99 (variable -> base_variable_with_function_calls .)
    PLUS_EQUAL      reduce using rule 99 (variable -> base_variable_with_function_calls .)
    MINUS_EQUAL     reduce using rule 99 (variable -> base_variable_with_function_calls .)
    MUL_EQUAL       reduce using rule 99 (variable -> base_variable_with_function_calls .)
    DIV_EQUAL       reduce using rule 99 (variable -> base_variable_with_function_calls .)
    CONCAT_EQUAL    reduce using rule 99 (variable -> base_variable_with_function_calls .)
    MOD_EQUAL       reduce using rule 99 (variable -> base_variable_with_function_calls .)
    AND_EQUAL       reduce using rule 99 (variable -> base_variable_with_function_calls .)
    OR_EQUAL        reduce using rule 99 (variable -> base_variable_with_function_calls .)
    XOR_EQUAL       reduce using rule 99 (variable -> base_variable_with_function_calls .)
    SL_EQUAL        reduce using rule 99 (variable -> base_variable_with_function_calls .)
    SR_EQUAL        reduce using rule 99 (variable -> base_variable_with_function_calls .)
    INC             reduce using rule 99 (variable -> base_variable_with_function_calls .)
    DEC             reduce using rule 99 (variable -> base_variable_with_function_calls .)
    LBRACKET        reduce using rule 99 (variable -> base_variable_with_function_calls .)
    SEMI_COLON      reduce using rule 99 (variable -> base_variable_with_function_calls .)
    LBRACE          reduce using rule 99 (variable -> base_variable_with_function_calls .)
    BOOLEAN_AND     reduce using rule 99 (variable -> base_variable_with_function_calls .)
    BOOLEAN_OR      reduce using rule 99 (variable -> base_variable_with_function_calls .)
    LOGICAL_AND     reduce using rule 99 (variable -> base_variable_with_function_calls .)
    LOGICAL_OR      reduce using rule 99 (variable -> base_variable_with_function_calls .)
    LOGICAL_XOR     reduce using rule 99 (variable -> base_variable_with_function_calls .)
    AND             reduce using rule 99 (variable -> base_variable_with_function_calls .)
    OR              reduce using rule 99 (variable -> base_variable_with_function_calls .)
    XOR             reduce using rule 99 (variable -> base_variable_with_function_calls .)
    CONCAT          reduce using rule 99 (variable -> base_variable_with_function_calls .)
    PLUS            reduce using rule 99 (variable -> base_variable_with_function_calls .)
    MINUS           reduce using rule 99 (variable -> base_variable_with_function_calls .)
    MUL             reduce using rule 99 (variable -> base_variable_with_function_calls .)
    DIV             reduce using rule 99 (variable -> base_variable_with_function_calls .)
    SL              reduce using rule 99 (variable -> base_variable_with_function_calls .)
    SR              reduce using rule 99 (variable -> base_variable_with_function_calls .)
    MOD             reduce using rule 99 (variable -> base_variable_with_function_calls .)
    IS_IDENTICAL    reduce using rule 99 (variable -> base_variable_with_function_calls .)
    IS_NOT_IDENTICAL reduce using rule 99 (variable -> base_variable_with_function_calls .)
    IS_EQUAL_TO     reduce using rule 99 (variable -> base_variable_with_function_calls .)
    IS_NOT_EQUAL    reduce using rule 99 (variable -> base_variable_with_function_calls .)
    LESS_THAN       reduce using rule 99 (variable -> base_variable_with_function_calls .)
    LESS_THAN_OR_EQUAL reduce using rule 99 (variable -> base_variable_with_function_calls .)
    GREATER_THAN    reduce using rule 99 (variable -> base_variable_with_function_calls .)
    GRATER_THAN_OR_EQUAL reduce using rule 99 (variable -> base_variable_with_function_calls .)
    INSTANCEOF      reduce using rule 99 (variable -> base_variable_with_function_calls .)
    QUESTION        reduce using rule 99 (variable -> base_variable_with_function_calls .)
    RPAREN          reduce using rule 99 (variable -> base_variable_with_function_calls .)
    COMMA           reduce using rule 99 (variable -> base_variable_with_function_calls .)
    DOUBLE_ARROW    reduce using rule 99 (variable -> base_variable_with_function_calls .)
    RBRACKET        reduce using rule 99 (variable -> base_variable_with_function_calls .)
    RBRACE          reduce using rule 99 (variable -> base_variable_with_function_calls .)
    COLON           reduce using rule 99 (variable -> base_variable_with_function_calls .)


state 58

    (216) scalar -> common_scalar .

    SEMI_COLON      reduce using rule 216 (scalar -> common_scalar .)
    LBRACE          reduce using rule 216 (scalar -> common_scalar .)
    BOOLEAN_AND     reduce using rule 216 (scalar -> common_scalar .)
    BOOLEAN_OR      reduce using rule 216 (scalar -> common_scalar .)
    LOGICAL_AND     reduce using rule 216 (scalar -> common_scalar .)
    LOGICAL_OR      reduce using rule 216 (scalar -> common_scalar .)
    LOGICAL_XOR     reduce using rule 216 (scalar -> common_scalar .)
    AND             reduce using rule 216 (scalar -> common_scalar .)
    OR              reduce using rule 216 (scalar -> common_scalar .)
    XOR             reduce using rule 216 (scalar -> common_scalar .)
    CONCAT          reduce using rule 216 (scalar -> common_scalar .)
    PLUS            reduce using rule 216 (scalar -> common_scalar .)
    MINUS           reduce using rule 216 (scalar -> common_scalar .)
    MUL             reduce using rule 216 (scalar -> common_scalar .)
    DIV             reduce using rule 216 (scalar -> common_scalar .)
    SL              reduce using rule 216 (scalar -> common_scalar .)
    SR              reduce using rule 216 (scalar -> common_scalar .)
    MOD             reduce using rule 216 (scalar -> common_scalar .)
    IS_IDENTICAL    reduce using rule 216 (scalar -> common_scalar .)
    IS_NOT_IDENTICAL reduce using rule 216 (scalar -> common_scalar .)
    IS_EQUAL_TO     reduce using rule 216 (scalar -> common_scalar .)
    IS_NOT_EQUAL    reduce using rule 216 (scalar -> common_scalar .)
    LESS_THAN       reduce using rule 216 (scalar -> common_scalar .)
    LESS_THAN_OR_EQUAL reduce using rule 216 (scalar -> common_scalar .)
    GREATER_THAN    reduce using rule 216 (scalar -> common_scalar .)
    GRATER_THAN_OR_EQUAL reduce using rule 216 (scalar -> common_scalar .)
    INSTANCEOF      reduce using rule 216 (scalar -> common_scalar .)
    QUESTION        reduce using rule 216 (scalar -> common_scalar .)
    RPAREN          reduce using rule 216 (scalar -> common_scalar .)
    COMMA           reduce using rule 216 (scalar -> common_scalar .)
    DOUBLE_ARROW    reduce using rule 216 (scalar -> common_scalar .)
    RBRACKET        reduce using rule 216 (scalar -> common_scalar .)
    RBRACE          reduce using rule 216 (scalar -> common_scalar .)
    COLON           reduce using rule 216 (scalar -> common_scalar .)


state 59

    (217) scalar -> DOUBLE_QUOTE . encaps_list DOUBLE_QUOTE
    (279) encaps_list -> . encaps_list encaps_var
    (280) encaps_list -> . empty
    (289) empty -> .

    DOUBLE_QUOTE    reduce using rule 289 (empty -> .)
    VARIABLE        reduce using rule 289 (empty -> .)
    DOLLAR_OPEN_CURLY_BRACES reduce using rule 289 (empty -> .)
    CURLY_OPEN      reduce using rule 289 (empty -> .)

    encaps_list                    shift and go to state 197
    empty                          shift and go to state 198

state 60

    (219) scalar -> scalar_heredoc .

    SEMI_COLON      reduce using rule 219 (scalar -> scalar_heredoc .)
    LBRACE          reduce using rule 219 (scalar -> scalar_heredoc .)
    BOOLEAN_AND     reduce using rule 219 (scalar -> scalar_heredoc .)
    BOOLEAN_OR      reduce using rule 219 (scalar -> scalar_heredoc .)
    LOGICAL_AND     reduce using rule 219 (scalar -> scalar_heredoc .)
    LOGICAL_OR      reduce using rule 219 (scalar -> scalar_heredoc .)
    LOGICAL_XOR     reduce using rule 219 (scalar -> scalar_heredoc .)
    AND             reduce using rule 219 (scalar -> scalar_heredoc .)
    OR              reduce using rule 219 (scalar -> scalar_heredoc .)
    XOR             reduce using rule 219 (scalar -> scalar_heredoc .)
    CONCAT          reduce using rule 219 (scalar -> scalar_heredoc .)
    PLUS            reduce using rule 219 (scalar -> scalar_heredoc .)
    MINUS           reduce using rule 219 (scalar -> scalar_heredoc .)
    MUL             reduce using rule 219 (scalar -> scalar_heredoc .)
    DIV             reduce using rule 219 (scalar -> scalar_heredoc .)
    SL              reduce using rule 219 (scalar -> scalar_heredoc .)
    SR              reduce using rule 219 (scalar -> scalar_heredoc .)
    MOD             reduce using rule 219 (scalar -> scalar_heredoc .)
    IS_IDENTICAL    reduce using rule 219 (scalar -> scalar_heredoc .)
    IS_NOT_IDENTICAL reduce using rule 219 (scalar -> scalar_heredoc .)
    IS_EQUAL_TO     reduce using rule 219 (scalar -> scalar_heredoc .)
    IS_NOT_EQUAL    reduce using rule 219 (scalar -> scalar_heredoc .)
    LESS_THAN       reduce using rule 219 (scalar -> scalar_heredoc .)
    LESS_THAN_OR_EQUAL reduce using rule 219 (scalar -> scalar_heredoc .)
    GREATER_THAN    reduce using rule 219 (scalar -> scalar_heredoc .)
    GRATER_THAN_OR_EQUAL reduce using rule 219 (scalar -> scalar_heredoc .)
    INSTANCEOF      reduce using rule 219 (scalar -> scalar_heredoc .)
    QUESTION        reduce using rule 219 (scalar -> scalar_heredoc .)
    RPAREN          reduce using rule 219 (scalar -> scalar_heredoc .)
    COMMA           reduce using rule 219 (scalar -> scalar_heredoc .)
    DOUBLE_ARROW    reduce using rule 219 (scalar -> scalar_heredoc .)
    RBRACKET        reduce using rule 219 (scalar -> scalar_heredoc .)
    RBRACE          reduce using rule 219 (scalar -> scalar_heredoc .)
    COLON           reduce using rule 219 (scalar -> scalar_heredoc .)


state 61

    (220) scalar -> nowdoc .

    SEMI_COLON      reduce using rule 220 (scalar -> nowdoc .)
    LBRACE          reduce using rule 220 (scalar -> nowdoc .)
    BOOLEAN_AND     reduce using rule 220 (scalar -> nowdoc .)
    BOOLEAN_OR      reduce using rule 220 (scalar -> nowdoc .)
    LOGICAL_AND     reduce using rule 220 (scalar -> nowdoc .)
    LOGICAL_OR      reduce using rule 220 (scalar -> nowdoc .)
    LOGICAL_XOR     reduce using rule 220 (scalar -> nowdoc .)
    AND             reduce using rule 220 (scalar -> nowdoc .)
    OR              reduce using rule 220 (scalar -> nowdoc .)
    XOR             reduce using rule 220 (scalar -> nowdoc .)
    CONCAT          reduce using rule 220 (scalar -> nowdoc .)
    PLUS            reduce using rule 220 (scalar -> nowdoc .)
    MINUS           reduce using rule 220 (scalar -> nowdoc .)
    MUL             reduce using rule 220 (scalar -> nowdoc .)
    DIV             reduce using rule 220 (scalar -> nowdoc .)
    SL              reduce using rule 220 (scalar -> nowdoc .)
    SR              reduce using rule 220 (scalar -> nowdoc .)
    MOD             reduce using rule 220 (scalar -> nowdoc .)
    IS_IDENTICAL    reduce using rule 220 (scalar -> nowdoc .)
    IS_NOT_IDENTICAL reduce using rule 220 (scalar -> nowdoc .)
    IS_EQUAL_TO     reduce using rule 220 (scalar -> nowdoc .)
    IS_NOT_EQUAL    reduce using rule 220 (scalar -> nowdoc .)
    LESS_THAN       reduce using rule 220 (scalar -> nowdoc .)
    LESS_THAN_OR_EQUAL reduce using rule 220 (scalar -> nowdoc .)
    GREATER_THAN    reduce using rule 220 (scalar -> nowdoc .)
    GRATER_THAN_OR_EQUAL reduce using rule 220 (scalar -> nowdoc .)
    INSTANCEOF      reduce using rule 220 (scalar -> nowdoc .)
    QUESTION        reduce using rule 220 (scalar -> nowdoc .)
    RPAREN          reduce using rule 220 (scalar -> nowdoc .)
    COMMA           reduce using rule 220 (scalar -> nowdoc .)
    DOUBLE_ARROW    reduce using rule 220 (scalar -> nowdoc .)
    RBRACKET        reduce using rule 220 (scalar -> nowdoc .)
    RBRACE          reduce using rule 220 (scalar -> nowdoc .)
    COLON           reduce using rule 220 (scalar -> nowdoc .)


state 62

    (207) exit_or_die -> EXIT .

    LPAREN          reduce using rule 207 (exit_or_die -> EXIT .)
    SEMI_COLON      reduce using rule 207 (exit_or_die -> EXIT .)
    LBRACE          reduce using rule 207 (exit_or_die -> EXIT .)
    BOOLEAN_AND     reduce using rule 207 (exit_or_die -> EXIT .)
    BOOLEAN_OR      reduce using rule 207 (exit_or_die -> EXIT .)
    LOGICAL_AND     reduce using rule 207 (exit_or_die -> EXIT .)
    LOGICAL_OR      reduce using rule 207 (exit_or_die -> EXIT .)
    LOGICAL_XOR     reduce using rule 207 (exit_or_die -> EXIT .)
    AND             reduce using rule 207 (exit_or_die -> EXIT .)
    OR              reduce using rule 207 (exit_or_die -> EXIT .)
    XOR             reduce using rule 207 (exit_or_die -> EXIT .)
    CONCAT          reduce using rule 207 (exit_or_die -> EXIT .)
    PLUS            reduce using rule 207 (exit_or_die -> EXIT .)
    MINUS           reduce using rule 207 (exit_or_die -> EXIT .)
    MUL             reduce using rule 207 (exit_or_die -> EXIT .)
    DIV             reduce using rule 207 (exit_or_die -> EXIT .)
    SL              reduce using rule 207 (exit_or_die -> EXIT .)
    SR              reduce using rule 207 (exit_or_die -> EXIT .)
    MOD             reduce using rule 207 (exit_or_die -> EXIT .)
    IS_IDENTICAL    reduce using rule 207 (exit_or_die -> EXIT .)
    IS_NOT_IDENTICAL reduce using rule 207 (exit_or_die -> EXIT .)
    IS_EQUAL_TO     reduce using rule 207 (exit_or_die -> EXIT .)
    IS_NOT_EQUAL    reduce using rule 207 (exit_or_die -> EXIT .)
    LESS_THAN       reduce using rule 207 (exit_or_die -> EXIT .)
    LESS_THAN_OR_EQUAL reduce using rule 207 (exit_or_die -> EXIT .)
    GREATER_THAN    reduce using rule 207 (exit_or_die -> EXIT .)
    GRATER_THAN_OR_EQUAL reduce using rule 207 (exit_or_die -> EXIT .)
    INSTANCEOF      reduce using rule 207 (exit_or_die -> EXIT .)
    QUESTION        reduce using rule 207 (exit_or_die -> EXIT .)
    RPAREN          reduce using rule 207 (exit_or_die -> EXIT .)
    COMMA           reduce using rule 207 (exit_or_die -> EXIT .)
    DOUBLE_ARROW    reduce using rule 207 (exit_or_die -> EXIT .)
    RBRACKET        reduce using rule 207 (exit_or_die -> EXIT .)
    RBRACE          reduce using rule 207 (exit_or_die -> EXIT .)
    COLON           reduce using rule 207 (exit_or_die -> EXIT .)


state 63

    (208) exit_or_die -> DIE .

    LPAREN          reduce using rule 208 (exit_or_die -> DIE .)
    SEMI_COLON      reduce using rule 208 (exit_or_die -> DIE .)
    LBRACE          reduce using rule 208 (exit_or_die -> DIE .)
    BOOLEAN_AND     reduce using rule 208 (exit_or_die -> DIE .)
    BOOLEAN_OR      reduce using rule 208 (exit_or_die -> DIE .)
    LOGICAL_AND     reduce using rule 208 (exit_or_die -> DIE .)
    LOGICAL_OR      reduce using rule 208 (exit_or_die -> DIE .)
    LOGICAL_XOR     reduce using rule 208 (exit_or_die -> DIE .)
    AND             reduce using rule 208 (exit_or_die -> DIE .)
    OR              reduce using rule 208 (exit_or_die -> DIE .)
    XOR             reduce using rule 208 (exit_or_die -> DIE .)
    CONCAT          reduce using rule 208 (exit_or_die -> DIE .)
    PLUS            reduce using rule 208 (exit_or_die -> DIE .)
    MINUS           reduce using rule 208 (exit_or_die -> DIE .)
    MUL             reduce using rule 208 (exit_or_die -> DIE .)
    DIV             reduce using rule 208 (exit_or_die -> DIE .)
    SL              reduce using rule 208 (exit_or_die -> DIE .)
    SR              reduce using rule 208 (exit_or_die -> DIE .)
    MOD             reduce using rule 208 (exit_or_die -> DIE .)
    IS_IDENTICAL    reduce using rule 208 (exit_or_die -> DIE .)
    IS_NOT_IDENTICAL reduce using rule 208 (exit_or_die -> DIE .)
    IS_EQUAL_TO     reduce using rule 208 (exit_or_die -> DIE .)
    IS_NOT_EQUAL    reduce using rule 208 (exit_or_die -> DIE .)
    LESS_THAN       reduce using rule 208 (exit_or_die -> DIE .)
    LESS_THAN_OR_EQUAL reduce using rule 208 (exit_or_die -> DIE .)
    GREATER_THAN    reduce using rule 208 (exit_or_die -> DIE .)
    GRATER_THAN_OR_EQUAL reduce using rule 208 (exit_or_die -> DIE .)
    INSTANCEOF      reduce using rule 208 (exit_or_die -> DIE .)
    QUESTION        reduce using rule 208 (exit_or_die -> DIE .)
    RPAREN          reduce using rule 208 (exit_or_die -> DIE .)
    COMMA           reduce using rule 208 (exit_or_die -> DIE .)
    DOUBLE_ARROW    reduce using rule 208 (exit_or_die -> DIE .)
    RBRACKET        reduce using rule 208 (exit_or_die -> DIE .)
    RBRACE          reduce using rule 208 (exit_or_die -> DIE .)
    COLON           reduce using rule 208 (exit_or_die -> DIE .)


state 64

    (100) base_variable_with_function_calls -> base_variable .

    EQUALS          reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    PLUS_EQUAL      reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    MINUS_EQUAL     reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    MUL_EQUAL       reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    DIV_EQUAL       reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    CONCAT_EQUAL    reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    MOD_EQUAL       reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    AND_EQUAL       reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    OR_EQUAL        reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    XOR_EQUAL       reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    SL_EQUAL        reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    SR_EQUAL        reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    INC             reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    DEC             reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    LBRACKET        reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    SEMI_COLON      reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    LBRACE          reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    BOOLEAN_AND     reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    BOOLEAN_OR      reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    LOGICAL_AND     reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    LOGICAL_OR      reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    LOGICAL_XOR     reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    AND             reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    OR              reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    XOR             reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    CONCAT          reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    PLUS            reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    MINUS           reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    MUL             reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    DIV             reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    SL              reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    SR              reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    MOD             reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    IS_IDENTICAL    reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    IS_NOT_IDENTICAL reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    IS_EQUAL_TO     reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    IS_NOT_EQUAL    reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    LESS_THAN       reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    LESS_THAN_OR_EQUAL reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    GREATER_THAN    reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    GRATER_THAN_OR_EQUAL reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    INSTANCEOF      reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    QUESTION        reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    RPAREN          reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    COMMA           reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    DOUBLE_ARROW    reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    RBRACKET        reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    RBRACE          reduce using rule 100 (base_variable_with_function_calls -> base_variable .)
    COLON           reduce using rule 100 (base_variable_with_function_calls -> base_variable .)


state 65

    (101) base_variable_with_function_calls -> function_call .

    EQUALS          reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    PLUS_EQUAL      reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    MINUS_EQUAL     reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    MUL_EQUAL       reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    DIV_EQUAL       reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    CONCAT_EQUAL    reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    MOD_EQUAL       reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    AND_EQUAL       reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    OR_EQUAL        reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    XOR_EQUAL       reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    SL_EQUAL        reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    SR_EQUAL        reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    INC             reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    DEC             reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    LBRACKET        reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    SEMI_COLON      reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    LBRACE          reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    BOOLEAN_AND     reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    BOOLEAN_OR      reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    LOGICAL_AND     reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    LOGICAL_OR      reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    LOGICAL_XOR     reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    AND             reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    OR              reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    XOR             reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    CONCAT          reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    PLUS            reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    MINUS           reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    MUL             reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    DIV             reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    SL              reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    SR              reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    MOD             reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    IS_IDENTICAL    reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    IS_NOT_IDENTICAL reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    IS_EQUAL_TO     reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    IS_NOT_EQUAL    reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    LESS_THAN       reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    LESS_THAN_OR_EQUAL reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    GREATER_THAN    reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    GRATER_THAN_OR_EQUAL reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    INSTANCEOF      reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    QUESTION        reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    RPAREN          reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    COMMA           reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    DOUBLE_ARROW    reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    RBRACKET        reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    RBRACE          reduce using rule 101 (base_variable_with_function_calls -> function_call .)
    COLON           reduce using rule 101 (base_variable_with_function_calls -> function_call .)


state 66

    (225) common_scalar -> INT_NUMBER .

    SEMI_COLON      reduce using rule 225 (common_scalar -> INT_NUMBER .)
    LBRACE          reduce using rule 225 (common_scalar -> INT_NUMBER .)
    BOOLEAN_AND     reduce using rule 225 (common_scalar -> INT_NUMBER .)
    BOOLEAN_OR      reduce using rule 225 (common_scalar -> INT_NUMBER .)
    LOGICAL_AND     reduce using rule 225 (common_scalar -> INT_NUMBER .)
    LOGICAL_OR      reduce using rule 225 (common_scalar -> INT_NUMBER .)
    LOGICAL_XOR     reduce using rule 225 (common_scalar -> INT_NUMBER .)
    AND             reduce using rule 225 (common_scalar -> INT_NUMBER .)
    OR              reduce using rule 225 (common_scalar -> INT_NUMBER .)
    XOR             reduce using rule 225 (common_scalar -> INT_NUMBER .)
    CONCAT          reduce using rule 225 (common_scalar -> INT_NUMBER .)
    PLUS            reduce using rule 225 (common_scalar -> INT_NUMBER .)
    MINUS           reduce using rule 225 (common_scalar -> INT_NUMBER .)
    MUL             reduce using rule 225 (common_scalar -> INT_NUMBER .)
    DIV             reduce using rule 225 (common_scalar -> INT_NUMBER .)
    SL              reduce using rule 225 (common_scalar -> INT_NUMBER .)
    SR              reduce using rule 225 (common_scalar -> INT_NUMBER .)
    MOD             reduce using rule 225 (common_scalar -> INT_NUMBER .)
    IS_IDENTICAL    reduce using rule 225 (common_scalar -> INT_NUMBER .)
    IS_NOT_IDENTICAL reduce using rule 225 (common_scalar -> INT_NUMBER .)
    IS_EQUAL_TO     reduce using rule 225 (common_scalar -> INT_NUMBER .)
    IS_NOT_EQUAL    reduce using rule 225 (common_scalar -> INT_NUMBER .)
    LESS_THAN       reduce using rule 225 (common_scalar -> INT_NUMBER .)
    LESS_THAN_OR_EQUAL reduce using rule 225 (common_scalar -> INT_NUMBER .)
    GREATER_THAN    reduce using rule 225 (common_scalar -> INT_NUMBER .)
    GRATER_THAN_OR_EQUAL reduce using rule 225 (common_scalar -> INT_NUMBER .)
    INSTANCEOF      reduce using rule 225 (common_scalar -> INT_NUMBER .)
    QUESTION        reduce using rule 225 (common_scalar -> INT_NUMBER .)
    RPAREN          reduce using rule 225 (common_scalar -> INT_NUMBER .)
    COMMA           reduce using rule 225 (common_scalar -> INT_NUMBER .)
    DOUBLE_ARROW    reduce using rule 225 (common_scalar -> INT_NUMBER .)
    RBRACKET        reduce using rule 225 (common_scalar -> INT_NUMBER .)
    RBRACE          reduce using rule 225 (common_scalar -> INT_NUMBER .)
    COLON           reduce using rule 225 (common_scalar -> INT_NUMBER .)


state 67

    (226) common_scalar -> FLOAT_NUMBER .

    SEMI_COLON      reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    LBRACE          reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    BOOLEAN_AND     reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    BOOLEAN_OR      reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    LOGICAL_AND     reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    LOGICAL_OR      reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    LOGICAL_XOR     reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    AND             reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    OR              reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    XOR             reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    CONCAT          reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    PLUS            reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    MINUS           reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    MUL             reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    DIV             reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    SL              reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    SR              reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    MOD             reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    IS_IDENTICAL    reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    IS_NOT_IDENTICAL reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    IS_EQUAL_TO     reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    IS_NOT_EQUAL    reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    LESS_THAN       reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    LESS_THAN_OR_EQUAL reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    GREATER_THAN    reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    GRATER_THAN_OR_EQUAL reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    INSTANCEOF      reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    QUESTION        reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    RPAREN          reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    COMMA           reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    DOUBLE_ARROW    reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    RBRACKET        reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    RBRACE          reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)
    COLON           reduce using rule 226 (common_scalar -> FLOAT_NUMBER .)


state 68

    (227) common_scalar -> CONSTANT_ENCAPSED_STRING .

    SEMI_COLON      reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    LBRACE          reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    BOOLEAN_AND     reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    BOOLEAN_OR      reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    LOGICAL_AND     reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    LOGICAL_OR      reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    LOGICAL_XOR     reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    AND             reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    OR              reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    XOR             reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    CONCAT          reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    PLUS            reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    MINUS           reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    MUL             reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    DIV             reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    SL              reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    SR              reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    MOD             reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    IS_IDENTICAL    reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    IS_NOT_IDENTICAL reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    IS_EQUAL_TO     reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    IS_NOT_EQUAL    reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    LESS_THAN       reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    LESS_THAN_OR_EQUAL reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    GREATER_THAN    reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    GRATER_THAN_OR_EQUAL reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    INSTANCEOF      reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    QUESTION        reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    RPAREN          reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    COMMA           reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    DOUBLE_ARROW    reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    RBRACKET        reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    RBRACE          reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    COLON           reduce using rule 227 (common_scalar -> CONSTANT_ENCAPSED_STRING .)


state 69

    (229) common_scalar -> FUNC_C .

    SEMI_COLON      reduce using rule 229 (common_scalar -> FUNC_C .)
    LBRACE          reduce using rule 229 (common_scalar -> FUNC_C .)
    BOOLEAN_AND     reduce using rule 229 (common_scalar -> FUNC_C .)
    BOOLEAN_OR      reduce using rule 229 (common_scalar -> FUNC_C .)
    LOGICAL_AND     reduce using rule 229 (common_scalar -> FUNC_C .)
    LOGICAL_OR      reduce using rule 229 (common_scalar -> FUNC_C .)
    LOGICAL_XOR     reduce using rule 229 (common_scalar -> FUNC_C .)
    AND             reduce using rule 229 (common_scalar -> FUNC_C .)
    OR              reduce using rule 229 (common_scalar -> FUNC_C .)
    XOR             reduce using rule 229 (common_scalar -> FUNC_C .)
    CONCAT          reduce using rule 229 (common_scalar -> FUNC_C .)
    PLUS            reduce using rule 229 (common_scalar -> FUNC_C .)
    MINUS           reduce using rule 229 (common_scalar -> FUNC_C .)
    MUL             reduce using rule 229 (common_scalar -> FUNC_C .)
    DIV             reduce using rule 229 (common_scalar -> FUNC_C .)
    SL              reduce using rule 229 (common_scalar -> FUNC_C .)
    SR              reduce using rule 229 (common_scalar -> FUNC_C .)
    MOD             reduce using rule 229 (common_scalar -> FUNC_C .)
    IS_IDENTICAL    reduce using rule 229 (common_scalar -> FUNC_C .)
    IS_NOT_IDENTICAL reduce using rule 229 (common_scalar -> FUNC_C .)
    IS_EQUAL_TO     reduce using rule 229 (common_scalar -> FUNC_C .)
    IS_NOT_EQUAL    reduce using rule 229 (common_scalar -> FUNC_C .)
    LESS_THAN       reduce using rule 229 (common_scalar -> FUNC_C .)
    LESS_THAN_OR_EQUAL reduce using rule 229 (common_scalar -> FUNC_C .)
    GREATER_THAN    reduce using rule 229 (common_scalar -> FUNC_C .)
    GRATER_THAN_OR_EQUAL reduce using rule 229 (common_scalar -> FUNC_C .)
    INSTANCEOF      reduce using rule 229 (common_scalar -> FUNC_C .)
    QUESTION        reduce using rule 229 (common_scalar -> FUNC_C .)
    RPAREN          reduce using rule 229 (common_scalar -> FUNC_C .)
    COMMA           reduce using rule 229 (common_scalar -> FUNC_C .)
    DOUBLE_ARROW    reduce using rule 229 (common_scalar -> FUNC_C .)
    RBRACKET        reduce using rule 229 (common_scalar -> FUNC_C .)
    RBRACE          reduce using rule 229 (common_scalar -> FUNC_C .)
    COLON           reduce using rule 229 (common_scalar -> FUNC_C .)


state 70

    (230) common_scalar -> METHOD_C .

    SEMI_COLON      reduce using rule 230 (common_scalar -> METHOD_C .)
    LBRACE          reduce using rule 230 (common_scalar -> METHOD_C .)
    BOOLEAN_AND     reduce using rule 230 (common_scalar -> METHOD_C .)
    BOOLEAN_OR      reduce using rule 230 (common_scalar -> METHOD_C .)
    LOGICAL_AND     reduce using rule 230 (common_scalar -> METHOD_C .)
    LOGICAL_OR      reduce using rule 230 (common_scalar -> METHOD_C .)
    LOGICAL_XOR     reduce using rule 230 (common_scalar -> METHOD_C .)
    AND             reduce using rule 230 (common_scalar -> METHOD_C .)
    OR              reduce using rule 230 (common_scalar -> METHOD_C .)
    XOR             reduce using rule 230 (common_scalar -> METHOD_C .)
    CONCAT          reduce using rule 230 (common_scalar -> METHOD_C .)
    PLUS            reduce using rule 230 (common_scalar -> METHOD_C .)
    MINUS           reduce using rule 230 (common_scalar -> METHOD_C .)
    MUL             reduce using rule 230 (common_scalar -> METHOD_C .)
    DIV             reduce using rule 230 (common_scalar -> METHOD_C .)
    SL              reduce using rule 230 (common_scalar -> METHOD_C .)
    SR              reduce using rule 230 (common_scalar -> METHOD_C .)
    MOD             reduce using rule 230 (common_scalar -> METHOD_C .)
    IS_IDENTICAL    reduce using rule 230 (common_scalar -> METHOD_C .)
    IS_NOT_IDENTICAL reduce using rule 230 (common_scalar -> METHOD_C .)
    IS_EQUAL_TO     reduce using rule 230 (common_scalar -> METHOD_C .)
    IS_NOT_EQUAL    reduce using rule 230 (common_scalar -> METHOD_C .)
    LESS_THAN       reduce using rule 230 (common_scalar -> METHOD_C .)
    LESS_THAN_OR_EQUAL reduce using rule 230 (common_scalar -> METHOD_C .)
    GREATER_THAN    reduce using rule 230 (common_scalar -> METHOD_C .)
    GRATER_THAN_OR_EQUAL reduce using rule 230 (common_scalar -> METHOD_C .)
    INSTANCEOF      reduce using rule 230 (common_scalar -> METHOD_C .)
    QUESTION        reduce using rule 230 (common_scalar -> METHOD_C .)
    RPAREN          reduce using rule 230 (common_scalar -> METHOD_C .)
    COMMA           reduce using rule 230 (common_scalar -> METHOD_C .)
    DOUBLE_ARROW    reduce using rule 230 (common_scalar -> METHOD_C .)
    RBRACKET        reduce using rule 230 (common_scalar -> METHOD_C .)
    RBRACE          reduce using rule 230 (common_scalar -> METHOD_C .)
    COLON           reduce using rule 230 (common_scalar -> METHOD_C .)


state 71

    (231) common_scalar -> LINE .

    SEMI_COLON      reduce using rule 231 (common_scalar -> LINE .)
    LBRACE          reduce using rule 231 (common_scalar -> LINE .)
    BOOLEAN_AND     reduce using rule 231 (common_scalar -> LINE .)
    BOOLEAN_OR      reduce using rule 231 (common_scalar -> LINE .)
    LOGICAL_AND     reduce using rule 231 (common_scalar -> LINE .)
    LOGICAL_OR      reduce using rule 231 (common_scalar -> LINE .)
    LOGICAL_XOR     reduce using rule 231 (common_scalar -> LINE .)
    AND             reduce using rule 231 (common_scalar -> LINE .)
    OR              reduce using rule 231 (common_scalar -> LINE .)
    XOR             reduce using rule 231 (common_scalar -> LINE .)
    CONCAT          reduce using rule 231 (common_scalar -> LINE .)
    PLUS            reduce using rule 231 (common_scalar -> LINE .)
    MINUS           reduce using rule 231 (common_scalar -> LINE .)
    MUL             reduce using rule 231 (common_scalar -> LINE .)
    DIV             reduce using rule 231 (common_scalar -> LINE .)
    SL              reduce using rule 231 (common_scalar -> LINE .)
    SR              reduce using rule 231 (common_scalar -> LINE .)
    MOD             reduce using rule 231 (common_scalar -> LINE .)
    IS_IDENTICAL    reduce using rule 231 (common_scalar -> LINE .)
    IS_NOT_IDENTICAL reduce using rule 231 (common_scalar -> LINE .)
    IS_EQUAL_TO     reduce using rule 231 (common_scalar -> LINE .)
    IS_NOT_EQUAL    reduce using rule 231 (common_scalar -> LINE .)
    LESS_THAN       reduce using rule 231 (common_scalar -> LINE .)
    LESS_THAN_OR_EQUAL reduce using rule 231 (common_scalar -> LINE .)
    GREATER_THAN    reduce using rule 231 (common_scalar -> LINE .)
    GRATER_THAN_OR_EQUAL reduce using rule 231 (common_scalar -> LINE .)
    INSTANCEOF      reduce using rule 231 (common_scalar -> LINE .)
    QUESTION        reduce using rule 231 (common_scalar -> LINE .)
    RPAREN          reduce using rule 231 (common_scalar -> LINE .)
    COMMA           reduce using rule 231 (common_scalar -> LINE .)
    DOUBLE_ARROW    reduce using rule 231 (common_scalar -> LINE .)
    RBRACKET        reduce using rule 231 (common_scalar -> LINE .)
    RBRACE          reduce using rule 231 (common_scalar -> LINE .)
    COLON           reduce using rule 231 (common_scalar -> LINE .)


state 72

    (232) common_scalar -> FILE .

    SEMI_COLON      reduce using rule 232 (common_scalar -> FILE .)
    LBRACE          reduce using rule 232 (common_scalar -> FILE .)
    BOOLEAN_AND     reduce using rule 232 (common_scalar -> FILE .)
    BOOLEAN_OR      reduce using rule 232 (common_scalar -> FILE .)
    LOGICAL_AND     reduce using rule 232 (common_scalar -> FILE .)
    LOGICAL_OR      reduce using rule 232 (common_scalar -> FILE .)
    LOGICAL_XOR     reduce using rule 232 (common_scalar -> FILE .)
    AND             reduce using rule 232 (common_scalar -> FILE .)
    OR              reduce using rule 232 (common_scalar -> FILE .)
    XOR             reduce using rule 232 (common_scalar -> FILE .)
    CONCAT          reduce using rule 232 (common_scalar -> FILE .)
    PLUS            reduce using rule 232 (common_scalar -> FILE .)
    MINUS           reduce using rule 232 (common_scalar -> FILE .)
    MUL             reduce using rule 232 (common_scalar -> FILE .)
    DIV             reduce using rule 232 (common_scalar -> FILE .)
    SL              reduce using rule 232 (common_scalar -> FILE .)
    SR              reduce using rule 232 (common_scalar -> FILE .)
    MOD             reduce using rule 232 (common_scalar -> FILE .)
    IS_IDENTICAL    reduce using rule 232 (common_scalar -> FILE .)
    IS_NOT_IDENTICAL reduce using rule 232 (common_scalar -> FILE .)
    IS_EQUAL_TO     reduce using rule 232 (common_scalar -> FILE .)
    IS_NOT_EQUAL    reduce using rule 232 (common_scalar -> FILE .)
    LESS_THAN       reduce using rule 232 (common_scalar -> FILE .)
    LESS_THAN_OR_EQUAL reduce using rule 232 (common_scalar -> FILE .)
    GREATER_THAN    reduce using rule 232 (common_scalar -> FILE .)
    GRATER_THAN_OR_EQUAL reduce using rule 232 (common_scalar -> FILE .)
    INSTANCEOF      reduce using rule 232 (common_scalar -> FILE .)
    QUESTION        reduce using rule 232 (common_scalar -> FILE .)
    RPAREN          reduce using rule 232 (common_scalar -> FILE .)
    COMMA           reduce using rule 232 (common_scalar -> FILE .)
    DOUBLE_ARROW    reduce using rule 232 (common_scalar -> FILE .)
    RBRACKET        reduce using rule 232 (common_scalar -> FILE .)
    RBRACE          reduce using rule 232 (common_scalar -> FILE .)
    COLON           reduce using rule 232 (common_scalar -> FILE .)


state 73

    (233) common_scalar -> DIR .

    SEMI_COLON      reduce using rule 233 (common_scalar -> DIR .)
    LBRACE          reduce using rule 233 (common_scalar -> DIR .)
    BOOLEAN_AND     reduce using rule 233 (common_scalar -> DIR .)
    BOOLEAN_OR      reduce using rule 233 (common_scalar -> DIR .)
    LOGICAL_AND     reduce using rule 233 (common_scalar -> DIR .)
    LOGICAL_OR      reduce using rule 233 (common_scalar -> DIR .)
    LOGICAL_XOR     reduce using rule 233 (common_scalar -> DIR .)
    AND             reduce using rule 233 (common_scalar -> DIR .)
    OR              reduce using rule 233 (common_scalar -> DIR .)
    XOR             reduce using rule 233 (common_scalar -> DIR .)
    CONCAT          reduce using rule 233 (common_scalar -> DIR .)
    PLUS            reduce using rule 233 (common_scalar -> DIR .)
    MINUS           reduce using rule 233 (common_scalar -> DIR .)
    MUL             reduce using rule 233 (common_scalar -> DIR .)
    DIV             reduce using rule 233 (common_scalar -> DIR .)
    SL              reduce using rule 233 (common_scalar -> DIR .)
    SR              reduce using rule 233 (common_scalar -> DIR .)
    MOD             reduce using rule 233 (common_scalar -> DIR .)
    IS_IDENTICAL    reduce using rule 233 (common_scalar -> DIR .)
    IS_NOT_IDENTICAL reduce using rule 233 (common_scalar -> DIR .)
    IS_EQUAL_TO     reduce using rule 233 (common_scalar -> DIR .)
    IS_NOT_EQUAL    reduce using rule 233 (common_scalar -> DIR .)
    LESS_THAN       reduce using rule 233 (common_scalar -> DIR .)
    LESS_THAN_OR_EQUAL reduce using rule 233 (common_scalar -> DIR .)
    GREATER_THAN    reduce using rule 233 (common_scalar -> DIR .)
    GRATER_THAN_OR_EQUAL reduce using rule 233 (common_scalar -> DIR .)
    INSTANCEOF      reduce using rule 233 (common_scalar -> DIR .)
    QUESTION        reduce using rule 233 (common_scalar -> DIR .)
    RPAREN          reduce using rule 233 (common_scalar -> DIR .)
    COMMA           reduce using rule 233 (common_scalar -> DIR .)
    DOUBLE_ARROW    reduce using rule 233 (common_scalar -> DIR .)
    RBRACKET        reduce using rule 233 (common_scalar -> DIR .)
    RBRACE          reduce using rule 233 (common_scalar -> DIR .)
    COLON           reduce using rule 233 (common_scalar -> DIR .)


state 74

    (221) scalar_heredoc -> START_HEREDOC . encaps_list END_HEREDOC
    (279) encaps_list -> . encaps_list encaps_var
    (280) encaps_list -> . empty
    (289) empty -> .

    END_HEREDOC     reduce using rule 289 (empty -> .)
    VARIABLE        reduce using rule 289 (empty -> .)
    DOLLAR_OPEN_CURLY_BRACES reduce using rule 289 (empty -> .)
    CURLY_OPEN      reduce using rule 289 (empty -> .)

    encaps_list                    shift and go to state 199
    empty                          shift and go to state 198

state 75

    (215) nowdoc -> START_NOWDOC . nowdoc_text_content END_NOWDOC
    (222) nowdoc_text_content -> . nowdoc_text_content ENCAPSED_AND_WHITESPACE
    (223) nowdoc_text_content -> . empty
    (289) empty -> .

    END_NOWDOC      reduce using rule 289 (empty -> .)
    ENCAPSED_AND_WHITESPACE reduce using rule 289 (empty -> .)

    nowdoc_text_content            shift and go to state 200
    empty                          shift and go to state 201

state 76

    (108) base_variable -> simple_indirect_reference .
    (120) variable_without_objects -> simple_indirect_reference .

    EQUALS          reduce using rule 108 (base_variable -> simple_indirect_reference .)
    PLUS_EQUAL      reduce using rule 108 (base_variable -> simple_indirect_reference .)
    MINUS_EQUAL     reduce using rule 108 (base_variable -> simple_indirect_reference .)
    MUL_EQUAL       reduce using rule 108 (base_variable -> simple_indirect_reference .)
    DIV_EQUAL       reduce using rule 108 (base_variable -> simple_indirect_reference .)
    CONCAT_EQUAL    reduce using rule 108 (base_variable -> simple_indirect_reference .)
    MOD_EQUAL       reduce using rule 108 (base_variable -> simple_indirect_reference .)
    AND_EQUAL       reduce using rule 108 (base_variable -> simple_indirect_reference .)
    OR_EQUAL        reduce using rule 108 (base_variable -> simple_indirect_reference .)
    XOR_EQUAL       reduce using rule 108 (base_variable -> simple_indirect_reference .)
    SL_EQUAL        reduce using rule 108 (base_variable -> simple_indirect_reference .)
    SR_EQUAL        reduce using rule 108 (base_variable -> simple_indirect_reference .)
    INC             reduce using rule 108 (base_variable -> simple_indirect_reference .)
    DEC             reduce using rule 108 (base_variable -> simple_indirect_reference .)
    LBRACKET        reduce using rule 108 (base_variable -> simple_indirect_reference .)
    SEMI_COLON      reduce using rule 108 (base_variable -> simple_indirect_reference .)
    LBRACE          reduce using rule 108 (base_variable -> simple_indirect_reference .)
    BOOLEAN_AND     reduce using rule 108 (base_variable -> simple_indirect_reference .)
    BOOLEAN_OR      reduce using rule 108 (base_variable -> simple_indirect_reference .)
    LOGICAL_AND     reduce using rule 108 (base_variable -> simple_indirect_reference .)
    LOGICAL_OR      reduce using rule 108 (base_variable -> simple_indirect_reference .)
    LOGICAL_XOR     reduce using rule 108 (base_variable -> simple_indirect_reference .)
    AND             reduce using rule 108 (base_variable -> simple_indirect_reference .)
    OR              reduce using rule 108 (base_variable -> simple_indirect_reference .)
    XOR             reduce using rule 108 (base_variable -> simple_indirect_reference .)
    CONCAT          reduce using rule 108 (base_variable -> simple_indirect_reference .)
    PLUS            reduce using rule 108 (base_variable -> simple_indirect_reference .)
    MINUS           reduce using rule 108 (base_variable -> simple_indirect_reference .)
    MUL             reduce using rule 108 (base_variable -> simple_indirect_reference .)
    DIV             reduce using rule 108 (base_variable -> simple_indirect_reference .)
    SL              reduce using rule 108 (base_variable -> simple_indirect_reference .)
    SR              reduce using rule 108 (base_variable -> simple_indirect_reference .)
    MOD             reduce using rule 108 (base_variable -> simple_indirect_reference .)
    IS_IDENTICAL    reduce using rule 108 (base_variable -> simple_indirect_reference .)
    IS_NOT_IDENTICAL reduce using rule 108 (base_variable -> simple_indirect_reference .)
    IS_EQUAL_TO     reduce using rule 108 (base_variable -> simple_indirect_reference .)
    IS_NOT_EQUAL    reduce using rule 108 (base_variable -> simple_indirect_reference .)
    LESS_THAN       reduce using rule 108 (base_variable -> simple_indirect_reference .)
    LESS_THAN_OR_EQUAL reduce using rule 108 (base_variable -> simple_indirect_reference .)
    GREATER_THAN    reduce using rule 108 (base_variable -> simple_indirect_reference .)
    GRATER_THAN_OR_EQUAL reduce using rule 108 (base_variable -> simple_indirect_reference .)
    INSTANCEOF      reduce using rule 108 (base_variable -> simple_indirect_reference .)
    QUESTION        reduce using rule 108 (base_variable -> simple_indirect_reference .)
    RPAREN          reduce using rule 108 (base_variable -> simple_indirect_reference .)
    COMMA           reduce using rule 108 (base_variable -> simple_indirect_reference .)
    DOUBLE_ARROW    reduce using rule 108 (base_variable -> simple_indirect_reference .)
    RBRACKET        reduce using rule 108 (base_variable -> simple_indirect_reference .)
    RBRACE          reduce using rule 108 (base_variable -> simple_indirect_reference .)
    COLON           reduce using rule 108 (base_variable -> simple_indirect_reference .)
    LPAREN          reduce using rule 120 (variable_without_objects -> simple_indirect_reference .)


state 77

    (106) function_call -> variable_without_objects . LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> variable_without_objects . LPAREN empty RPAREN

    LPAREN          shift and go to state 202


state 78

    (109) simple_indirect_reference -> DOLLAR . simple_indirect_reference
    (117) compound_variable -> DOLLAR . LBRACE expr RBRACE
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    LBRACE          shift and go to state 204
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    simple_indirect_reference      shift and go to state 203
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 79

    (110) simple_indirect_reference -> reference_variable .
    (112) reference_variable -> reference_variable . LBRACKET dim_offset RBRACKET
    (113) reference_variable -> reference_variable . LBRACE expr RBRACE

  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
    EQUALS          reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    PLUS_EQUAL      reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    MINUS_EQUAL     reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    MUL_EQUAL       reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    DIV_EQUAL       reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    CONCAT_EQUAL    reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    MOD_EQUAL       reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    AND_EQUAL       reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    OR_EQUAL        reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    XOR_EQUAL       reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    SL_EQUAL        reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    SR_EQUAL        reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    INC             reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    DEC             reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    SEMI_COLON      reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    BOOLEAN_AND     reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    BOOLEAN_OR      reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    LOGICAL_AND     reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    LOGICAL_OR      reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    LOGICAL_XOR     reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    AND             reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    OR              reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    XOR             reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    CONCAT          reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    PLUS            reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    MINUS           reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    MUL             reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    DIV             reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    SL              reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    SR              reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    MOD             reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    IS_IDENTICAL    reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    IS_NOT_IDENTICAL reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    IS_EQUAL_TO     reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    IS_NOT_EQUAL    reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    LESS_THAN       reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    LESS_THAN_OR_EQUAL reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    GREATER_THAN    reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    GRATER_THAN_OR_EQUAL reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    INSTANCEOF      reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    QUESTION        reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    LPAREN          reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    RPAREN          reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    COMMA           reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    DOUBLE_ARROW    reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    RBRACKET        reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    RBRACE          reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    COLON           reduce using rule 110 (simple_indirect_reference -> reference_variable .)
    LBRACKET        shift and go to state 205
    LBRACE          shift and go to state 206

  ! LBRACKET        [ reduce using rule 110 (simple_indirect_reference -> reference_variable .) ]
  ! LBRACE          [ reduce using rule 110 (simple_indirect_reference -> reference_variable .) ]


state 80

    (114) reference_variable -> compound_variable .

    LBRACKET        reduce using rule 114 (reference_variable -> compound_variable .)
    LBRACE          reduce using rule 114 (reference_variable -> compound_variable .)
    EQUALS          reduce using rule 114 (reference_variable -> compound_variable .)
    PLUS_EQUAL      reduce using rule 114 (reference_variable -> compound_variable .)
    MINUS_EQUAL     reduce using rule 114 (reference_variable -> compound_variable .)
    MUL_EQUAL       reduce using rule 114 (reference_variable -> compound_variable .)
    DIV_EQUAL       reduce using rule 114 (reference_variable -> compound_variable .)
    CONCAT_EQUAL    reduce using rule 114 (reference_variable -> compound_variable .)
    MOD_EQUAL       reduce using rule 114 (reference_variable -> compound_variable .)
    AND_EQUAL       reduce using rule 114 (reference_variable -> compound_variable .)
    OR_EQUAL        reduce using rule 114 (reference_variable -> compound_variable .)
    XOR_EQUAL       reduce using rule 114 (reference_variable -> compound_variable .)
    SL_EQUAL        reduce using rule 114 (reference_variable -> compound_variable .)
    SR_EQUAL        reduce using rule 114 (reference_variable -> compound_variable .)
    INC             reduce using rule 114 (reference_variable -> compound_variable .)
    DEC             reduce using rule 114 (reference_variable -> compound_variable .)
    SEMI_COLON      reduce using rule 114 (reference_variable -> compound_variable .)
    BOOLEAN_AND     reduce using rule 114 (reference_variable -> compound_variable .)
    BOOLEAN_OR      reduce using rule 114 (reference_variable -> compound_variable .)
    LOGICAL_AND     reduce using rule 114 (reference_variable -> compound_variable .)
    LOGICAL_OR      reduce using rule 114 (reference_variable -> compound_variable .)
    LOGICAL_XOR     reduce using rule 114 (reference_variable -> compound_variable .)
    AND             reduce using rule 114 (reference_variable -> compound_variable .)
    OR              reduce using rule 114 (reference_variable -> compound_variable .)
    XOR             reduce using rule 114 (reference_variable -> compound_variable .)
    CONCAT          reduce using rule 114 (reference_variable -> compound_variable .)
    PLUS            reduce using rule 114 (reference_variable -> compound_variable .)
    MINUS           reduce using rule 114 (reference_variable -> compound_variable .)
    MUL             reduce using rule 114 (reference_variable -> compound_variable .)
    DIV             reduce using rule 114 (reference_variable -> compound_variable .)
    SL              reduce using rule 114 (reference_variable -> compound_variable .)
    SR              reduce using rule 114 (reference_variable -> compound_variable .)
    MOD             reduce using rule 114 (reference_variable -> compound_variable .)
    IS_IDENTICAL    reduce using rule 114 (reference_variable -> compound_variable .)
    IS_NOT_IDENTICAL reduce using rule 114 (reference_variable -> compound_variable .)
    IS_EQUAL_TO     reduce using rule 114 (reference_variable -> compound_variable .)
    IS_NOT_EQUAL    reduce using rule 114 (reference_variable -> compound_variable .)
    LESS_THAN       reduce using rule 114 (reference_variable -> compound_variable .)
    LESS_THAN_OR_EQUAL reduce using rule 114 (reference_variable -> compound_variable .)
    GREATER_THAN    reduce using rule 114 (reference_variable -> compound_variable .)
    GRATER_THAN_OR_EQUAL reduce using rule 114 (reference_variable -> compound_variable .)
    INSTANCEOF      reduce using rule 114 (reference_variable -> compound_variable .)
    QUESTION        reduce using rule 114 (reference_variable -> compound_variable .)
    LPAREN          reduce using rule 114 (reference_variable -> compound_variable .)
    RPAREN          reduce using rule 114 (reference_variable -> compound_variable .)
    COMMA           reduce using rule 114 (reference_variable -> compound_variable .)
    DOUBLE_ARROW    reduce using rule 114 (reference_variable -> compound_variable .)
    RBRACKET        reduce using rule 114 (reference_variable -> compound_variable .)
    RBRACE          reduce using rule 114 (reference_variable -> compound_variable .)
    COLON           reduce using rule 114 (reference_variable -> compound_variable .)


state 81

    (116) compound_variable -> VARIABLE .

    LBRACKET        reduce using rule 116 (compound_variable -> VARIABLE .)
    LBRACE          reduce using rule 116 (compound_variable -> VARIABLE .)
    EQUALS          reduce using rule 116 (compound_variable -> VARIABLE .)
    PLUS_EQUAL      reduce using rule 116 (compound_variable -> VARIABLE .)
    MINUS_EQUAL     reduce using rule 116 (compound_variable -> VARIABLE .)
    MUL_EQUAL       reduce using rule 116 (compound_variable -> VARIABLE .)
    DIV_EQUAL       reduce using rule 116 (compound_variable -> VARIABLE .)
    CONCAT_EQUAL    reduce using rule 116 (compound_variable -> VARIABLE .)
    MOD_EQUAL       reduce using rule 116 (compound_variable -> VARIABLE .)
    AND_EQUAL       reduce using rule 116 (compound_variable -> VARIABLE .)
    OR_EQUAL        reduce using rule 116 (compound_variable -> VARIABLE .)
    XOR_EQUAL       reduce using rule 116 (compound_variable -> VARIABLE .)
    SL_EQUAL        reduce using rule 116 (compound_variable -> VARIABLE .)
    SR_EQUAL        reduce using rule 116 (compound_variable -> VARIABLE .)
    INC             reduce using rule 116 (compound_variable -> VARIABLE .)
    DEC             reduce using rule 116 (compound_variable -> VARIABLE .)
    SEMI_COLON      reduce using rule 116 (compound_variable -> VARIABLE .)
    BOOLEAN_AND     reduce using rule 116 (compound_variable -> VARIABLE .)
    BOOLEAN_OR      reduce using rule 116 (compound_variable -> VARIABLE .)
    LOGICAL_AND     reduce using rule 116 (compound_variable -> VARIABLE .)
    LOGICAL_OR      reduce using rule 116 (compound_variable -> VARIABLE .)
    LOGICAL_XOR     reduce using rule 116 (compound_variable -> VARIABLE .)
    AND             reduce using rule 116 (compound_variable -> VARIABLE .)
    OR              reduce using rule 116 (compound_variable -> VARIABLE .)
    XOR             reduce using rule 116 (compound_variable -> VARIABLE .)
    CONCAT          reduce using rule 116 (compound_variable -> VARIABLE .)
    PLUS            reduce using rule 116 (compound_variable -> VARIABLE .)
    MINUS           reduce using rule 116 (compound_variable -> VARIABLE .)
    MUL             reduce using rule 116 (compound_variable -> VARIABLE .)
    DIV             reduce using rule 116 (compound_variable -> VARIABLE .)
    SL              reduce using rule 116 (compound_variable -> VARIABLE .)
    SR              reduce using rule 116 (compound_variable -> VARIABLE .)
    MOD             reduce using rule 116 (compound_variable -> VARIABLE .)
    IS_IDENTICAL    reduce using rule 116 (compound_variable -> VARIABLE .)
    IS_NOT_IDENTICAL reduce using rule 116 (compound_variable -> VARIABLE .)
    IS_EQUAL_TO     reduce using rule 116 (compound_variable -> VARIABLE .)
    IS_NOT_EQUAL    reduce using rule 116 (compound_variable -> VARIABLE .)
    LESS_THAN       reduce using rule 116 (compound_variable -> VARIABLE .)
    LESS_THAN_OR_EQUAL reduce using rule 116 (compound_variable -> VARIABLE .)
    GREATER_THAN    reduce using rule 116 (compound_variable -> VARIABLE .)
    GRATER_THAN_OR_EQUAL reduce using rule 116 (compound_variable -> VARIABLE .)
    INSTANCEOF      reduce using rule 116 (compound_variable -> VARIABLE .)
    QUESTION        reduce using rule 116 (compound_variable -> VARIABLE .)
    LPAREN          reduce using rule 116 (compound_variable -> VARIABLE .)
    RPAREN          reduce using rule 116 (compound_variable -> VARIABLE .)
    COMMA           reduce using rule 116 (compound_variable -> VARIABLE .)
    DOUBLE_ARROW    reduce using rule 116 (compound_variable -> VARIABLE .)
    RBRACKET        reduce using rule 116 (compound_variable -> VARIABLE .)
    RBRACE          reduce using rule 116 (compound_variable -> VARIABLE .)
    COLON           reduce using rule 116 (compound_variable -> VARIABLE .)


state 82

    (6) top_statement -> HALT_COMPILER LPAREN . RPAREN SEMI_COLON

    RPAREN          shift and go to state 207


state 83

    (214) expr -> LPAREN expr . RPAREN
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    RPAREN          shift and go to state 208
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 84

    (137) expr -> FUNCTION . is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (79) is_reference -> . AND
    (80) is_reference -> . empty
    (289) empty -> .

    AND             shift and go to state 140
    LPAREN          reduce using rule 289 (empty -> .)

    is_reference                   shift and go to state 209
    empty                          shift and go to state 141

state 85

    (7) top_statement -> CONST constant_declarations . SEMI_COLON
    (8) constant_declarations -> constant_declarations . COMMA constant_declaration

    SEMI_COLON      shift and go to state 210
    COMMA           shift and go to state 211


state 86

    (9) constant_declarations -> constant_declaration .

    SEMI_COLON      reduce using rule 9 (constant_declarations -> constant_declaration .)
    COMMA           reduce using rule 9 (constant_declarations -> constant_declaration .)


state 87

    (10) constant_declaration -> IDENTIFIER . EQUALS static_expr

    EQUALS          shift and go to state 212


state 88

    (17) statement -> LBRACE inner_statement_list . RBRACE
    (11) inner_statement_list -> inner_statement_list . inner_statement
    (13) inner_statement -> . statement
    (14) inner_statement -> . function_declaration_statement
    (15) inner_statement -> . YIELD SEMI_COLON
    (16) inner_statement -> . YIELD expr SEMI_COLON
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list else_single
    (19) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (20) statement -> . WHILE LPAREN expr RPAREN while_statement
    (21) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (22) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (23) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (24) statement -> . BREAK SEMI_COLON
    (25) statement -> . BREAK expr SEMI_COLON
    (26) statement -> . CONTINUE SEMI_COLON
    (27) statement -> . CONTINUE expr SEMI_COLON
    (28) statement -> . RETURN SEMI_COLON
    (29) statement -> . RETURN expr SEMI_COLON
    (30) statement -> . GLOBAL global_var_list SEMI_COLON
    (31) statement -> . STATIC static_var_list SEMI_COLON
    (32) statement -> . ECHO echo_expr_list SEMI_COLON
    (33) statement -> . INLINE_HTML
    (34) statement -> . expr SEMI_COLON
    (35) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (36) statement -> . SEMI_COLON
    (78) function_declaration_statement -> . FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    RBRACE          shift and go to state 213
    YIELD           shift and go to state 217
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    FUNCTION        shift and go to state 26
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    inner_statement                shift and go to state 214
    statement                      shift and go to state 215
    function_declaration_statement shift and go to state 216
    expr                           shift and go to state 13
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 89

    (12) inner_statement_list -> empty .

    RBRACE          reduce using rule 12 (inner_statement_list -> empty .)
    YIELD           reduce using rule 12 (inner_statement_list -> empty .)
    LBRACE          reduce using rule 12 (inner_statement_list -> empty .)
    IF              reduce using rule 12 (inner_statement_list -> empty .)
    WHILE           reduce using rule 12 (inner_statement_list -> empty .)
    DO              reduce using rule 12 (inner_statement_list -> empty .)
    FOR             reduce using rule 12 (inner_statement_list -> empty .)
    SWITCH          reduce using rule 12 (inner_statement_list -> empty .)
    BREAK           reduce using rule 12 (inner_statement_list -> empty .)
    CONTINUE        reduce using rule 12 (inner_statement_list -> empty .)
    RETURN          reduce using rule 12 (inner_statement_list -> empty .)
    GLOBAL          reduce using rule 12 (inner_statement_list -> empty .)
    STATIC          reduce using rule 12 (inner_statement_list -> empty .)
    ECHO            reduce using rule 12 (inner_statement_list -> empty .)
    INLINE_HTML     reduce using rule 12 (inner_statement_list -> empty .)
    UNSET           reduce using rule 12 (inner_statement_list -> empty .)
    SEMI_COLON      reduce using rule 12 (inner_statement_list -> empty .)
    FUNCTION        reduce using rule 12 (inner_statement_list -> empty .)
    CLONE           reduce using rule 12 (inner_statement_list -> empty .)
    LIST            reduce using rule 12 (inner_statement_list -> empty .)
    ARRAY           reduce using rule 12 (inner_statement_list -> empty .)
    LBRACKET        reduce using rule 12 (inner_statement_list -> empty .)
    PLUS            reduce using rule 12 (inner_statement_list -> empty .)
    MINUS           reduce using rule 12 (inner_statement_list -> empty .)
    NOT             reduce using rule 12 (inner_statement_list -> empty .)
    BOOLEAN_NOT     reduce using rule 12 (inner_statement_list -> empty .)
    INC             reduce using rule 12 (inner_statement_list -> empty .)
    DEC             reduce using rule 12 (inner_statement_list -> empty .)
    INT_CAST        reduce using rule 12 (inner_statement_list -> empty .)
    ARRAY_CAST      reduce using rule 12 (inner_statement_list -> empty .)
    STRING_CAST     reduce using rule 12 (inner_statement_list -> empty .)
    DOUBLE_CAST     reduce using rule 12 (inner_statement_list -> empty .)
    BOOL_CAST       reduce using rule 12 (inner_statement_list -> empty .)
    UNSET_CAST      reduce using rule 12 (inner_statement_list -> empty .)
    BINARY_CAST     reduce using rule 12 (inner_statement_list -> empty .)
    ISSET           reduce using rule 12 (inner_statement_list -> empty .)
    EMPTY           reduce using rule 12 (inner_statement_list -> empty .)
    EVAL            reduce using rule 12 (inner_statement_list -> empty .)
    INCLUDE         reduce using rule 12 (inner_statement_list -> empty .)
    INCLUDE_ONCE    reduce using rule 12 (inner_statement_list -> empty .)
    REQUIRE         reduce using rule 12 (inner_statement_list -> empty .)
    REQUIRE_ONCE    reduce using rule 12 (inner_statement_list -> empty .)
    PRINT           reduce using rule 12 (inner_statement_list -> empty .)
    AT              reduce using rule 12 (inner_statement_list -> empty .)
    LPAREN          reduce using rule 12 (inner_statement_list -> empty .)
    DOUBLE_QUOTE    reduce using rule 12 (inner_statement_list -> empty .)
    IDENTIFIER      reduce using rule 12 (inner_statement_list -> empty .)
    EXIT            reduce using rule 12 (inner_statement_list -> empty .)
    DIE             reduce using rule 12 (inner_statement_list -> empty .)
    INT_NUMBER      reduce using rule 12 (inner_statement_list -> empty .)
    FLOAT_NUMBER    reduce using rule 12 (inner_statement_list -> empty .)
    CONSTANT_ENCAPSED_STRING reduce using rule 12 (inner_statement_list -> empty .)
    FUNC_C          reduce using rule 12 (inner_statement_list -> empty .)
    METHOD_C        reduce using rule 12 (inner_statement_list -> empty .)
    LINE            reduce using rule 12 (inner_statement_list -> empty .)
    FILE            reduce using rule 12 (inner_statement_list -> empty .)
    DIR             reduce using rule 12 (inner_statement_list -> empty .)
    START_HEREDOC   reduce using rule 12 (inner_statement_list -> empty .)
    START_NOWDOC    reduce using rule 12 (inner_statement_list -> empty .)
    DOLLAR          reduce using rule 12 (inner_statement_list -> empty .)
    VARIABLE        reduce using rule 12 (inner_statement_list -> empty .)
    ELSEIF          reduce using rule 12 (inner_statement_list -> empty .)
    ELSE            reduce using rule 12 (inner_statement_list -> empty .)
    ENDIF           reduce using rule 12 (inner_statement_list -> empty .)
    ENDWHILE        reduce using rule 12 (inner_statement_list -> empty .)
    ENDSWITCH       reduce using rule 12 (inner_statement_list -> empty .)
    ENDFOR          reduce using rule 12 (inner_statement_list -> empty .)
    CASE            reduce using rule 12 (inner_statement_list -> empty .)
    DEFAULT         reduce using rule 12 (inner_statement_list -> empty .)


state 90

    (18) statement -> IF LPAREN . expr RPAREN statement elseif_list else_single
    (19) statement -> IF LPAREN . expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 218
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 91

    (34) statement -> expr SEMI_COLON .

    HALT_COMPILER   reduce using rule 34 (statement -> expr SEMI_COLON .)
    CONST           reduce using rule 34 (statement -> expr SEMI_COLON .)
    LBRACE          reduce using rule 34 (statement -> expr SEMI_COLON .)
    IF              reduce using rule 34 (statement -> expr SEMI_COLON .)
    WHILE           reduce using rule 34 (statement -> expr SEMI_COLON .)
    DO              reduce using rule 34 (statement -> expr SEMI_COLON .)
    FOR             reduce using rule 34 (statement -> expr SEMI_COLON .)
    SWITCH          reduce using rule 34 (statement -> expr SEMI_COLON .)
    BREAK           reduce using rule 34 (statement -> expr SEMI_COLON .)
    CONTINUE        reduce using rule 34 (statement -> expr SEMI_COLON .)
    RETURN          reduce using rule 34 (statement -> expr SEMI_COLON .)
    GLOBAL          reduce using rule 34 (statement -> expr SEMI_COLON .)
    STATIC          reduce using rule 34 (statement -> expr SEMI_COLON .)
    ECHO            reduce using rule 34 (statement -> expr SEMI_COLON .)
    INLINE_HTML     reduce using rule 34 (statement -> expr SEMI_COLON .)
    UNSET           reduce using rule 34 (statement -> expr SEMI_COLON .)
    SEMI_COLON      reduce using rule 34 (statement -> expr SEMI_COLON .)
    FUNCTION        reduce using rule 34 (statement -> expr SEMI_COLON .)
    CLONE           reduce using rule 34 (statement -> expr SEMI_COLON .)
    LIST            reduce using rule 34 (statement -> expr SEMI_COLON .)
    ARRAY           reduce using rule 34 (statement -> expr SEMI_COLON .)
    LBRACKET        reduce using rule 34 (statement -> expr SEMI_COLON .)
    PLUS            reduce using rule 34 (statement -> expr SEMI_COLON .)
    MINUS           reduce using rule 34 (statement -> expr SEMI_COLON .)
    NOT             reduce using rule 34 (statement -> expr SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 34 (statement -> expr SEMI_COLON .)
    INC             reduce using rule 34 (statement -> expr SEMI_COLON .)
    DEC             reduce using rule 34 (statement -> expr SEMI_COLON .)
    INT_CAST        reduce using rule 34 (statement -> expr SEMI_COLON .)
    ARRAY_CAST      reduce using rule 34 (statement -> expr SEMI_COLON .)
    STRING_CAST     reduce using rule 34 (statement -> expr SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 34 (statement -> expr SEMI_COLON .)
    BOOL_CAST       reduce using rule 34 (statement -> expr SEMI_COLON .)
    UNSET_CAST      reduce using rule 34 (statement -> expr SEMI_COLON .)
    BINARY_CAST     reduce using rule 34 (statement -> expr SEMI_COLON .)
    ISSET           reduce using rule 34 (statement -> expr SEMI_COLON .)
    EMPTY           reduce using rule 34 (statement -> expr SEMI_COLON .)
    EVAL            reduce using rule 34 (statement -> expr SEMI_COLON .)
    INCLUDE         reduce using rule 34 (statement -> expr SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 34 (statement -> expr SEMI_COLON .)
    REQUIRE         reduce using rule 34 (statement -> expr SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 34 (statement -> expr SEMI_COLON .)
    PRINT           reduce using rule 34 (statement -> expr SEMI_COLON .)
    AT              reduce using rule 34 (statement -> expr SEMI_COLON .)
    LPAREN          reduce using rule 34 (statement -> expr SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 34 (statement -> expr SEMI_COLON .)
    IDENTIFIER      reduce using rule 34 (statement -> expr SEMI_COLON .)
    EXIT            reduce using rule 34 (statement -> expr SEMI_COLON .)
    DIE             reduce using rule 34 (statement -> expr SEMI_COLON .)
    INT_NUMBER      reduce using rule 34 (statement -> expr SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 34 (statement -> expr SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 34 (statement -> expr SEMI_COLON .)
    FUNC_C          reduce using rule 34 (statement -> expr SEMI_COLON .)
    METHOD_C        reduce using rule 34 (statement -> expr SEMI_COLON .)
    LINE            reduce using rule 34 (statement -> expr SEMI_COLON .)
    FILE            reduce using rule 34 (statement -> expr SEMI_COLON .)
    DIR             reduce using rule 34 (statement -> expr SEMI_COLON .)
    START_HEREDOC   reduce using rule 34 (statement -> expr SEMI_COLON .)
    START_NOWDOC    reduce using rule 34 (statement -> expr SEMI_COLON .)
    DOLLAR          reduce using rule 34 (statement -> expr SEMI_COLON .)
    VARIABLE        reduce using rule 34 (statement -> expr SEMI_COLON .)
    $end            reduce using rule 34 (statement -> expr SEMI_COLON .)
    RBRACE          reduce using rule 34 (statement -> expr SEMI_COLON .)
    YIELD           reduce using rule 34 (statement -> expr SEMI_COLON .)
    ELSEIF          reduce using rule 34 (statement -> expr SEMI_COLON .)
    ELSE            reduce using rule 34 (statement -> expr SEMI_COLON .)
    ENDIF           reduce using rule 34 (statement -> expr SEMI_COLON .)
    ENDWHILE        reduce using rule 34 (statement -> expr SEMI_COLON .)
    ENDSWITCH       reduce using rule 34 (statement -> expr SEMI_COLON .)
    ENDFOR          reduce using rule 34 (statement -> expr SEMI_COLON .)
    CASE            reduce using rule 34 (statement -> expr SEMI_COLON .)
    DEFAULT         reduce using rule 34 (statement -> expr SEMI_COLON .)


state 92

    (115) expr -> expr LBRACE . dim_offset RBRACE
    (118) dim_offset -> . expr
    (119) dim_offset -> . empty
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (289) empty -> .
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    RBRACE          reduce using rule 289 (empty -> .)
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 219
    dim_offset                     shift and go to state 220
    empty                          shift and go to state 221
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 93

    (155) expr -> expr BOOLEAN_AND . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 222
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 94

    (156) expr -> expr BOOLEAN_OR . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 223
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 95

    (157) expr -> expr LOGICAL_AND . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 224
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 96

    (158) expr -> expr LOGICAL_OR . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 225
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 97

    (159) expr -> expr LOGICAL_XOR . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 226
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 98

    (160) expr -> expr AND . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 227
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 99

    (161) expr -> expr OR . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 228
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 100

    (162) expr -> expr XOR . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 229
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 101

    (163) expr -> expr CONCAT . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 230
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 102

    (164) expr -> expr PLUS . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 231
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 103

    (165) expr -> expr MINUS . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 232
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 104

    (166) expr -> expr MUL . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 233
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 105

    (167) expr -> expr DIV . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 234
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 106

    (168) expr -> expr SL . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 235
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 107

    (169) expr -> expr SR . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 236
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 108

    (170) expr -> expr MOD . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 237
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 109

    (171) expr -> expr IS_IDENTICAL . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 238
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 110

    (172) expr -> expr IS_NOT_IDENTICAL . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 239
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 111

    (173) expr -> expr IS_EQUAL_TO . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 240
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 112

    (174) expr -> expr IS_NOT_EQUAL . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 241
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 113

    (175) expr -> expr LESS_THAN . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 242
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 114

    (176) expr -> expr LESS_THAN_OR_EQUAL . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 243
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 115

    (177) expr -> expr GREATER_THAN . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 244
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 116

    (178) expr -> expr GRATER_THAN_OR_EQUAL . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 245
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 117

    (179) expr -> expr INSTANCEOF . expr
    (180) expr -> expr INSTANCEOF . STATIC
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    STATIC          shift and go to state 247
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 246
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 118

    (185) expr -> expr QUESTION . expr COLON expr
    (186) expr -> expr QUESTION . COLON expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    COLON           shift and go to state 249
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 248
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 119

    (20) statement -> WHILE LPAREN . expr RPAREN while_statement
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 250
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 120

    (21) statement -> DO statement . WHILE LPAREN expr RPAREN SEMI_COLON

    WHILE           shift and go to state 251


state 121

    (22) statement -> FOR LPAREN . for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (47) for_expr -> . empty
    (48) for_expr -> . non_empty_for_expr
    (289) empty -> .
    (49) non_empty_for_expr -> . non_empty_for_expr COMMA expr
    (50) non_empty_for_expr -> . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    SEMI_COLON      reduce using rule 289 (empty -> .)
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    for_expr                       shift and go to state 252
    empty                          shift and go to state 253
    non_empty_for_expr             shift and go to state 254
    expr                           shift and go to state 255
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 122

    (23) statement -> SWITCH LPAREN . expr RPAREN switch_case_list
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 256
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 123

    (24) statement -> BREAK SEMI_COLON .

    HALT_COMPILER   reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    CONST           reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    LBRACE          reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    IF              reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    WHILE           reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    DO              reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    FOR             reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    SWITCH          reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    BREAK           reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    CONTINUE        reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    RETURN          reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    GLOBAL          reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    STATIC          reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    ECHO            reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    INLINE_HTML     reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    UNSET           reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    SEMI_COLON      reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    FUNCTION        reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    CLONE           reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    LIST            reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    ARRAY           reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    LBRACKET        reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    PLUS            reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    MINUS           reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    NOT             reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    INC             reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    DEC             reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    INT_CAST        reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    ARRAY_CAST      reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    STRING_CAST     reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    BOOL_CAST       reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    UNSET_CAST      reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    BINARY_CAST     reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    ISSET           reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    EMPTY           reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    EVAL            reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    INCLUDE         reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    REQUIRE         reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    PRINT           reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    AT              reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    LPAREN          reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    IDENTIFIER      reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    EXIT            reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    DIE             reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    INT_NUMBER      reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    FUNC_C          reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    METHOD_C        reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    LINE            reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    FILE            reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    DIR             reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    START_HEREDOC   reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    START_NOWDOC    reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    DOLLAR          reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    VARIABLE        reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    $end            reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    RBRACE          reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    YIELD           reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    ELSEIF          reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    ELSE            reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    ENDIF           reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    ENDWHILE        reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    ENDSWITCH       reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    ENDFOR          reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    CASE            reduce using rule 24 (statement -> BREAK SEMI_COLON .)
    DEFAULT         reduce using rule 24 (statement -> BREAK SEMI_COLON .)


state 124

    (25) statement -> BREAK expr . SEMI_COLON
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      shift and go to state 257
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 125

    (26) statement -> CONTINUE SEMI_COLON .

    HALT_COMPILER   reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    CONST           reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    LBRACE          reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    IF              reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    WHILE           reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    DO              reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    FOR             reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    SWITCH          reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    BREAK           reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    CONTINUE        reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    RETURN          reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    GLOBAL          reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    STATIC          reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    ECHO            reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    INLINE_HTML     reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    UNSET           reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    SEMI_COLON      reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    FUNCTION        reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    CLONE           reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    LIST            reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    ARRAY           reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    LBRACKET        reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    PLUS            reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    MINUS           reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    NOT             reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    INC             reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    DEC             reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    INT_CAST        reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    ARRAY_CAST      reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    STRING_CAST     reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    BOOL_CAST       reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    UNSET_CAST      reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    BINARY_CAST     reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    ISSET           reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    EMPTY           reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    EVAL            reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    INCLUDE         reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    REQUIRE         reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    PRINT           reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    AT              reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    LPAREN          reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    IDENTIFIER      reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    EXIT            reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    DIE             reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    INT_NUMBER      reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    FUNC_C          reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    METHOD_C        reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    LINE            reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    FILE            reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    DIR             reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    START_HEREDOC   reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    START_NOWDOC    reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    DOLLAR          reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    VARIABLE        reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    $end            reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    RBRACE          reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    YIELD           reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    ELSEIF          reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    ELSE            reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    ENDIF           reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    ENDWHILE        reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    ENDSWITCH       reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    ENDFOR          reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    CASE            reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)
    DEFAULT         reduce using rule 26 (statement -> CONTINUE SEMI_COLON .)


state 126

    (27) statement -> CONTINUE expr . SEMI_COLON
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      shift and go to state 258
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 127

    (28) statement -> RETURN SEMI_COLON .

    HALT_COMPILER   reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    CONST           reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    LBRACE          reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    IF              reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    WHILE           reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    DO              reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    FOR             reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    SWITCH          reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    BREAK           reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    CONTINUE        reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    RETURN          reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    GLOBAL          reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    STATIC          reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    ECHO            reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    INLINE_HTML     reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    UNSET           reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    SEMI_COLON      reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    FUNCTION        reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    CLONE           reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    LIST            reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    ARRAY           reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    LBRACKET        reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    PLUS            reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    MINUS           reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    NOT             reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    INC             reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    DEC             reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    INT_CAST        reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    ARRAY_CAST      reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    STRING_CAST     reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    BOOL_CAST       reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    UNSET_CAST      reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    BINARY_CAST     reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    ISSET           reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    EMPTY           reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    EVAL            reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    INCLUDE         reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    REQUIRE         reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    PRINT           reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    AT              reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    LPAREN          reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    IDENTIFIER      reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    EXIT            reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    DIE             reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    INT_NUMBER      reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    FUNC_C          reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    METHOD_C        reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    LINE            reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    FILE            reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    DIR             reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    START_HEREDOC   reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    START_NOWDOC    reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    DOLLAR          reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    VARIABLE        reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    $end            reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    RBRACE          reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    YIELD           reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    ELSEIF          reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    ELSE            reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    ENDIF           reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    ENDWHILE        reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    ENDSWITCH       reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    ENDFOR          reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    CASE            reduce using rule 28 (statement -> RETURN SEMI_COLON .)
    DEFAULT         reduce using rule 28 (statement -> RETURN SEMI_COLON .)


state 128

    (29) statement -> RETURN expr . SEMI_COLON
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      shift and go to state 259
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 129

    (30) statement -> GLOBAL global_var_list . SEMI_COLON
    (64) global_var_list -> global_var_list . COMMA global_var

    SEMI_COLON      shift and go to state 260
    COMMA           shift and go to state 261


state 130

    (65) global_var_list -> global_var .

    SEMI_COLON      reduce using rule 65 (global_var_list -> global_var .)
    COMMA           reduce using rule 65 (global_var_list -> global_var .)


state 131

    (66) global_var -> VARIABLE .

    SEMI_COLON      reduce using rule 66 (global_var -> VARIABLE .)
    COMMA           reduce using rule 66 (global_var -> VARIABLE .)


state 132

    (67) global_var -> DOLLAR . variable
    (68) global_var -> DOLLAR . LBRACE expr RBRACE
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    LBRACE          shift and go to state 263
    IDENTIFIER      shift and go to state 177
    ARRAY           shift and go to state 178
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    variable                       shift and go to state 262
    base_variable_with_function_calls shift and go to state 57
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 133

    (31) statement -> STATIC static_var_list . SEMI_COLON
    (69) static_var_list -> static_var_list . COMMA static_var

    SEMI_COLON      shift and go to state 264
    COMMA           shift and go to state 265


state 134

    (70) static_var_list -> static_var .

    SEMI_COLON      reduce using rule 70 (static_var_list -> static_var .)
    COMMA           reduce using rule 70 (static_var_list -> static_var .)


state 135

    (71) static_var -> VARIABLE . EQUALS static_scalar
    (72) static_var -> VARIABLE .

    EQUALS          shift and go to state 266
    SEMI_COLON      reduce using rule 72 (static_var -> VARIABLE .)
    COMMA           reduce using rule 72 (static_var -> VARIABLE .)


state 136

    (32) statement -> ECHO echo_expr_list . SEMI_COLON
    (73) echo_expr_list -> echo_expr_list . COMMA expr

    SEMI_COLON      shift and go to state 267
    COMMA           shift and go to state 268


state 137

    (74) echo_expr_list -> expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 74 (echo_expr_list -> expr .)
    COMMA           reduce using rule 74 (echo_expr_list -> expr .)
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 138

    (35) statement -> UNSET LPAREN . unset_variables RPAREN SEMI_COLON
    (75) unset_variables -> . unset_variables COMMA unset_variable
    (76) unset_variables -> . unset_variable
    (77) unset_variable -> . variable
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    IDENTIFIER      shift and go to state 177
    ARRAY           shift and go to state 178
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    unset_variables                shift and go to state 269
    unset_variable                 shift and go to state 270
    variable                       shift and go to state 271
    base_variable_with_function_calls shift and go to state 57
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 139

    (78) function_declaration_statement -> FUNCTION is_reference . IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (137) expr -> FUNCTION is_reference . LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE

    IDENTIFIER      shift and go to state 272
    LPAREN          shift and go to state 273


state 140

    (79) is_reference -> AND .

    IDENTIFIER      reduce using rule 79 (is_reference -> AND .)
    LPAREN          reduce using rule 79 (is_reference -> AND .)


state 141

    (80) is_reference -> empty .

    IDENTIFIER      reduce using rule 80 (is_reference -> empty .)
    LPAREN          reduce using rule 80 (is_reference -> empty .)


state 142

    (218) scalar -> IDENTIFIER DOUBLE_QUOTE . encaps_list DOUBLE_QUOTE
    (279) encaps_list -> . encaps_list encaps_var
    (280) encaps_list -> . empty
    (289) empty -> .

    DOUBLE_QUOTE    reduce using rule 289 (empty -> .)
    VARIABLE        reduce using rule 289 (empty -> .)
    DOLLAR_OPEN_CURLY_BRACES reduce using rule 289 (empty -> .)
    CURLY_OPEN      reduce using rule 289 (empty -> .)

    encaps_list                    shift and go to state 274
    empty                          shift and go to state 198

state 143

    (228) common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .

    SEMI_COLON      reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    LBRACE          reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    BOOLEAN_AND     reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    BOOLEAN_OR      reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    LOGICAL_AND     reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    LOGICAL_OR      reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    LOGICAL_XOR     reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    AND             reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    OR              reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    XOR             reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    CONCAT          reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    PLUS            reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    MINUS           reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    MUL             reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    DIV             reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    SL              reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    SR              reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    MOD             reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    IS_IDENTICAL    reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    IS_NOT_IDENTICAL reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    IS_EQUAL_TO     reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    IS_NOT_EQUAL    reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    LESS_THAN       reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    LESS_THAN_OR_EQUAL reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    GREATER_THAN    reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    GRATER_THAN_OR_EQUAL reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    INSTANCEOF      reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    QUESTION        reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    RPAREN          reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    COMMA           reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    DOUBLE_ARROW    reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    RBRACKET        reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    RBRACE          reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)
    COLON           reduce using rule 228 (common_scalar -> IDENTIFIER CONSTANT_ENCAPSED_STRING .)


state 144

    (102) function_call -> IDENTIFIER fucntion_call_body .

    EQUALS          reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    PLUS_EQUAL      reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    MINUS_EQUAL     reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    MUL_EQUAL       reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    DIV_EQUAL       reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    CONCAT_EQUAL    reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    MOD_EQUAL       reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    AND_EQUAL       reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    OR_EQUAL        reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    XOR_EQUAL       reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    SL_EQUAL        reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    SR_EQUAL        reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    INC             reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    DEC             reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    LBRACKET        reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    SEMI_COLON      reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    LBRACE          reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    BOOLEAN_AND     reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    BOOLEAN_OR      reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    LOGICAL_AND     reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    LOGICAL_OR      reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    LOGICAL_XOR     reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    AND             reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    OR              reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    XOR             reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    CONCAT          reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    PLUS            reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    MINUS           reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    MUL             reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    DIV             reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    SL              reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    SR              reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    MOD             reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    IS_IDENTICAL    reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    IS_NOT_IDENTICAL reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    IS_EQUAL_TO     reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    IS_NOT_EQUAL    reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    LESS_THAN       reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    LESS_THAN_OR_EQUAL reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    GREATER_THAN    reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    GRATER_THAN_OR_EQUAL reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    INSTANCEOF      reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    QUESTION        reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    RPAREN          reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    COMMA           reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    DOUBLE_ARROW    reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    RBRACKET        reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    RBRACE          reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)
    COLON           reduce using rule 102 (function_call -> IDENTIFIER fucntion_call_body .)


state 145

    (104) fucntion_call_body -> LPAREN . nonempty_function_call_parameter_list RPAREN
    (105) fucntion_call_body -> LPAREN . empty RPAREN
    (133) nonempty_function_call_parameter_list -> . nonempty_function_call_parameter_list COMMA function_call_parameter
    (134) nonempty_function_call_parameter_list -> . function_call_parameter
    (289) empty -> .
    (135) function_call_parameter -> . expr
    (136) function_call_parameter -> . AND variable
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    RPAREN          reduce using rule 289 (empty -> .)
    AND             shift and go to state 170
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    nonempty_function_call_parameter_list shift and go to state 275
    empty                          shift and go to state 276
    function_call_parameter        shift and go to state 171
    expr                           shift and go to state 277
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 146

    (90) expr -> variable EQUALS . expr
    (91) expr -> variable EQUALS . AND expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    AND             shift and go to state 279
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    variable                       shift and go to state 28
    expr                           shift and go to state 278
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 147

    (144) expr -> variable PLUS_EQUAL . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    variable                       shift and go to state 28
    expr                           shift and go to state 280
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 148

    (145) expr -> variable MINUS_EQUAL . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    variable                       shift and go to state 28
    expr                           shift and go to state 281
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 149

    (146) expr -> variable MUL_EQUAL . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    variable                       shift and go to state 28
    expr                           shift and go to state 282
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 150

    (147) expr -> variable DIV_EQUAL . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    variable                       shift and go to state 28
    expr                           shift and go to state 283
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 151

    (148) expr -> variable CONCAT_EQUAL . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    variable                       shift and go to state 28
    expr                           shift and go to state 284
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 152

    (149) expr -> variable MOD_EQUAL . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    variable                       shift and go to state 28
    expr                           shift and go to state 285
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 153

    (150) expr -> variable AND_EQUAL . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    variable                       shift and go to state 28
    expr                           shift and go to state 286
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 154

    (151) expr -> variable OR_EQUAL . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    variable                       shift and go to state 28
    expr                           shift and go to state 287
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 155

    (152) expr -> variable XOR_EQUAL . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    variable                       shift and go to state 28
    expr                           shift and go to state 288
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 156

    (153) expr -> variable SL_EQUAL . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    variable                       shift and go to state 28
    expr                           shift and go to state 289
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 157

    (154) expr -> variable SR_EQUAL . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    variable                       shift and go to state 28
    expr                           shift and go to state 290
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 158

    (189) expr -> variable INC .

    SEMI_COLON      reduce using rule 189 (expr -> variable INC .)
    LBRACE          reduce using rule 189 (expr -> variable INC .)
    BOOLEAN_AND     reduce using rule 189 (expr -> variable INC .)
    BOOLEAN_OR      reduce using rule 189 (expr -> variable INC .)
    LOGICAL_AND     reduce using rule 189 (expr -> variable INC .)
    LOGICAL_OR      reduce using rule 189 (expr -> variable INC .)
    LOGICAL_XOR     reduce using rule 189 (expr -> variable INC .)
    AND             reduce using rule 189 (expr -> variable INC .)
    OR              reduce using rule 189 (expr -> variable INC .)
    XOR             reduce using rule 189 (expr -> variable INC .)
    CONCAT          reduce using rule 189 (expr -> variable INC .)
    PLUS            reduce using rule 189 (expr -> variable INC .)
    MINUS           reduce using rule 189 (expr -> variable INC .)
    MUL             reduce using rule 189 (expr -> variable INC .)
    DIV             reduce using rule 189 (expr -> variable INC .)
    SL              reduce using rule 189 (expr -> variable INC .)
    SR              reduce using rule 189 (expr -> variable INC .)
    MOD             reduce using rule 189 (expr -> variable INC .)
    IS_IDENTICAL    reduce using rule 189 (expr -> variable INC .)
    IS_NOT_IDENTICAL reduce using rule 189 (expr -> variable INC .)
    IS_EQUAL_TO     reduce using rule 189 (expr -> variable INC .)
    IS_NOT_EQUAL    reduce using rule 189 (expr -> variable INC .)
    LESS_THAN       reduce using rule 189 (expr -> variable INC .)
    LESS_THAN_OR_EQUAL reduce using rule 189 (expr -> variable INC .)
    GREATER_THAN    reduce using rule 189 (expr -> variable INC .)
    GRATER_THAN_OR_EQUAL reduce using rule 189 (expr -> variable INC .)
    INSTANCEOF      reduce using rule 189 (expr -> variable INC .)
    QUESTION        reduce using rule 189 (expr -> variable INC .)
    RPAREN          reduce using rule 189 (expr -> variable INC .)
    COMMA           reduce using rule 189 (expr -> variable INC .)
    DOUBLE_ARROW    reduce using rule 189 (expr -> variable INC .)
    RBRACKET        reduce using rule 189 (expr -> variable INC .)
    RBRACE          reduce using rule 189 (expr -> variable INC .)
    COLON           reduce using rule 189 (expr -> variable INC .)


state 159

    (190) expr -> variable DEC .

    SEMI_COLON      reduce using rule 190 (expr -> variable DEC .)
    LBRACE          reduce using rule 190 (expr -> variable DEC .)
    BOOLEAN_AND     reduce using rule 190 (expr -> variable DEC .)
    BOOLEAN_OR      reduce using rule 190 (expr -> variable DEC .)
    LOGICAL_AND     reduce using rule 190 (expr -> variable DEC .)
    LOGICAL_OR      reduce using rule 190 (expr -> variable DEC .)
    LOGICAL_XOR     reduce using rule 190 (expr -> variable DEC .)
    AND             reduce using rule 190 (expr -> variable DEC .)
    OR              reduce using rule 190 (expr -> variable DEC .)
    XOR             reduce using rule 190 (expr -> variable DEC .)
    CONCAT          reduce using rule 190 (expr -> variable DEC .)
    PLUS            reduce using rule 190 (expr -> variable DEC .)
    MINUS           reduce using rule 190 (expr -> variable DEC .)
    MUL             reduce using rule 190 (expr -> variable DEC .)
    DIV             reduce using rule 190 (expr -> variable DEC .)
    SL              reduce using rule 190 (expr -> variable DEC .)
    SR              reduce using rule 190 (expr -> variable DEC .)
    MOD             reduce using rule 190 (expr -> variable DEC .)
    IS_IDENTICAL    reduce using rule 190 (expr -> variable DEC .)
    IS_NOT_IDENTICAL reduce using rule 190 (expr -> variable DEC .)
    IS_EQUAL_TO     reduce using rule 190 (expr -> variable DEC .)
    IS_NOT_EQUAL    reduce using rule 190 (expr -> variable DEC .)
    LESS_THAN       reduce using rule 190 (expr -> variable DEC .)
    LESS_THAN_OR_EQUAL reduce using rule 190 (expr -> variable DEC .)
    GREATER_THAN    reduce using rule 190 (expr -> variable DEC .)
    GRATER_THAN_OR_EQUAL reduce using rule 190 (expr -> variable DEC .)
    INSTANCEOF      reduce using rule 190 (expr -> variable DEC .)
    QUESTION        reduce using rule 190 (expr -> variable DEC .)
    RPAREN          reduce using rule 190 (expr -> variable DEC .)
    COMMA           reduce using rule 190 (expr -> variable DEC .)
    DOUBLE_ARROW    reduce using rule 190 (expr -> variable DEC .)
    RBRACKET        reduce using rule 190 (expr -> variable DEC .)
    RBRACE          reduce using rule 190 (expr -> variable DEC .)
    COLON           reduce using rule 190 (expr -> variable DEC .)


state 160

    (111) variable -> variable LBRACKET . dim_offset RBRACKET
    (118) dim_offset -> . expr
    (119) dim_offset -> . empty
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (289) empty -> .
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    RBRACKET        reduce using rule 289 (empty -> .)
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    variable                       shift and go to state 28
    dim_offset                     shift and go to state 291
    expr                           shift and go to state 219
    empty                          shift and go to state 221
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 161

    (92) expr -> CLONE expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 92 (expr -> CLONE expr .)
    LBRACE          reduce using rule 92 (expr -> CLONE expr .)
    BOOLEAN_AND     reduce using rule 92 (expr -> CLONE expr .)
    BOOLEAN_OR      reduce using rule 92 (expr -> CLONE expr .)
    LOGICAL_AND     reduce using rule 92 (expr -> CLONE expr .)
    LOGICAL_OR      reduce using rule 92 (expr -> CLONE expr .)
    LOGICAL_XOR     reduce using rule 92 (expr -> CLONE expr .)
    AND             reduce using rule 92 (expr -> CLONE expr .)
    OR              reduce using rule 92 (expr -> CLONE expr .)
    XOR             reduce using rule 92 (expr -> CLONE expr .)
    CONCAT          reduce using rule 92 (expr -> CLONE expr .)
    PLUS            reduce using rule 92 (expr -> CLONE expr .)
    MINUS           reduce using rule 92 (expr -> CLONE expr .)
    MUL             reduce using rule 92 (expr -> CLONE expr .)
    DIV             reduce using rule 92 (expr -> CLONE expr .)
    SL              reduce using rule 92 (expr -> CLONE expr .)
    SR              reduce using rule 92 (expr -> CLONE expr .)
    MOD             reduce using rule 92 (expr -> CLONE expr .)
    IS_IDENTICAL    reduce using rule 92 (expr -> CLONE expr .)
    IS_NOT_IDENTICAL reduce using rule 92 (expr -> CLONE expr .)
    IS_EQUAL_TO     reduce using rule 92 (expr -> CLONE expr .)
    IS_NOT_EQUAL    reduce using rule 92 (expr -> CLONE expr .)
    LESS_THAN       reduce using rule 92 (expr -> CLONE expr .)
    LESS_THAN_OR_EQUAL reduce using rule 92 (expr -> CLONE expr .)
    GREATER_THAN    reduce using rule 92 (expr -> CLONE expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 92 (expr -> CLONE expr .)
    INSTANCEOF      reduce using rule 92 (expr -> CLONE expr .)
    QUESTION        reduce using rule 92 (expr -> CLONE expr .)
    RPAREN          reduce using rule 92 (expr -> CLONE expr .)
    COMMA           reduce using rule 92 (expr -> CLONE expr .)
    DOUBLE_ARROW    reduce using rule 92 (expr -> CLONE expr .)
    RBRACKET        reduce using rule 92 (expr -> CLONE expr .)
    RBRACE          reduce using rule 92 (expr -> CLONE expr .)
    COLON           reduce using rule 92 (expr -> CLONE expr .)

  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! CONCAT          [ shift and go to state 101 ]
  ! PLUS            [ shift and go to state 102 ]
  ! MINUS           [ shift and go to state 103 ]
  ! MUL             [ shift and go to state 104 ]
  ! DIV             [ shift and go to state 105 ]
  ! SL              [ shift and go to state 106 ]
  ! SR              [ shift and go to state 107 ]
  ! MOD             [ shift and go to state 108 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! LESS_THAN       [ shift and go to state 113 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! GREATER_THAN    [ shift and go to state 115 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 116 ]
  ! INSTANCEOF      [ shift and go to state 117 ]
  ! QUESTION        [ shift and go to state 118 ]


state 162

    (93) expr -> LIST LPAREN . assignment_list RPAREN EQUALS expr
    (94) assignment_list -> . assignment_list COMMA assignment_list_element
    (95) assignment_list -> . assignment_list_element
    (96) assignment_list_element -> . variable
    (97) assignment_list_element -> . empty
    (98) assignment_list_element -> . LIST LPAREN assignment_list RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (289) empty -> .
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    LIST            shift and go to state 292
    RPAREN          reduce using rule 289 (empty -> .)
    COMMA           reduce using rule 289 (empty -> .)
    IDENTIFIER      shift and go to state 177
    ARRAY           shift and go to state 178
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    assignment_list                shift and go to state 293
    assignment_list_element        shift and go to state 294
    variable                       shift and go to state 295
    empty                          shift and go to state 296
    base_variable_with_function_calls shift and go to state 57
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 163

    (122) expr -> ARRAY LPAREN . array_pair_list RPAREN
    (104) fucntion_call_body -> LPAREN . nonempty_function_call_parameter_list RPAREN
    (105) fucntion_call_body -> LPAREN . empty RPAREN
    (124) array_pair_list -> . empty
    (125) array_pair_list -> . non_empty_array_pair_list possible_comma
    (133) nonempty_function_call_parameter_list -> . nonempty_function_call_parameter_list COMMA function_call_parameter
    (134) nonempty_function_call_parameter_list -> . function_call_parameter
    (289) empty -> .
    (126) non_empty_array_pair_list -> . nonempty_function_call_parameter_list
    (127) non_empty_array_pair_list -> . non_empty_array_pair_list COMMA expr DOUBLE_ARROW AND variable
    (128) non_empty_array_pair_list -> . non_empty_array_pair_list COMMA expr DOUBLE_ARROW expr
    (129) non_empty_array_pair_list -> . expr DOUBLE_ARROW AND variable
    (130) non_empty_array_pair_list -> . expr DOUBLE_ARROW expr
    (135) function_call_parameter -> . expr
    (136) function_call_parameter -> . AND variable
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    RPAREN          reduce using rule 289 (empty -> .)
    AND             shift and go to state 170
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    array_pair_list                shift and go to state 297
    nonempty_function_call_parameter_list shift and go to state 298
    empty                          shift and go to state 299
    non_empty_array_pair_list      shift and go to state 167
    function_call_parameter        shift and go to state 171
    expr                           shift and go to state 300
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 164

    (103) function_call -> ARRAY fucntion_call_body .

    EQUALS          reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    PLUS_EQUAL      reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    MINUS_EQUAL     reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    MUL_EQUAL       reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    DIV_EQUAL       reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    CONCAT_EQUAL    reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    MOD_EQUAL       reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    AND_EQUAL       reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    OR_EQUAL        reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    XOR_EQUAL       reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    SL_EQUAL        reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    SR_EQUAL        reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    INC             reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    DEC             reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    LBRACKET        reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    SEMI_COLON      reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    LBRACE          reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    BOOLEAN_AND     reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    BOOLEAN_OR      reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    LOGICAL_AND     reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    LOGICAL_OR      reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    LOGICAL_XOR     reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    AND             reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    OR              reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    XOR             reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    CONCAT          reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    PLUS            reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    MINUS           reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    MUL             reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    DIV             reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    SL              reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    SR              reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    MOD             reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    IS_IDENTICAL    reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    IS_NOT_IDENTICAL reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    IS_EQUAL_TO     reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    IS_NOT_EQUAL    reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    LESS_THAN       reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    LESS_THAN_OR_EQUAL reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    GREATER_THAN    reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    GRATER_THAN_OR_EQUAL reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    INSTANCEOF      reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    QUESTION        reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    RPAREN          reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    COMMA           reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    DOUBLE_ARROW    reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    RBRACKET        reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    RBRACE          reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)
    COLON           reduce using rule 103 (function_call -> ARRAY fucntion_call_body .)


state 165

    (123) expr -> LBRACKET array_pair_list . RBRACKET

    RBRACKET        shift and go to state 301


state 166

    (124) array_pair_list -> empty .

    RBRACKET        reduce using rule 124 (array_pair_list -> empty .)


state 167

    (125) array_pair_list -> non_empty_array_pair_list . possible_comma
    (127) non_empty_array_pair_list -> non_empty_array_pair_list . COMMA expr DOUBLE_ARROW AND variable
    (128) non_empty_array_pair_list -> non_empty_array_pair_list . COMMA expr DOUBLE_ARROW expr
    (131) possible_comma -> . empty
    (132) possible_comma -> . COMMA
    (289) empty -> .

    COMMA           shift and go to state 303
    RBRACKET        reduce using rule 289 (empty -> .)
    RPAREN          reduce using rule 289 (empty -> .)

    possible_comma                 shift and go to state 302
    empty                          shift and go to state 304

state 168

    (126) non_empty_array_pair_list -> nonempty_function_call_parameter_list .
    (133) nonempty_function_call_parameter_list -> nonempty_function_call_parameter_list . COMMA function_call_parameter

  ! shift/reduce conflict for COMMA resolved as shift
    RBRACKET        reduce using rule 126 (non_empty_array_pair_list -> nonempty_function_call_parameter_list .)
    COMMA           shift and go to state 305

  ! COMMA           [ reduce using rule 126 (non_empty_array_pair_list -> nonempty_function_call_parameter_list .) ]


state 169

    (129) non_empty_array_pair_list -> expr . DOUBLE_ARROW AND variable
    (130) non_empty_array_pair_list -> expr . DOUBLE_ARROW expr
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr
    (135) function_call_parameter -> expr .

    DOUBLE_ARROW    shift and go to state 306
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118
    COMMA           reduce using rule 135 (function_call_parameter -> expr .)
    RBRACKET        reduce using rule 135 (function_call_parameter -> expr .)


state 170

    (136) function_call_parameter -> AND . variable
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    IDENTIFIER      shift and go to state 177
    ARRAY           shift and go to state 178
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    variable                       shift and go to state 307
    base_variable_with_function_calls shift and go to state 57
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 171

    (134) nonempty_function_call_parameter_list -> function_call_parameter .

    COMMA           reduce using rule 134 (nonempty_function_call_parameter_list -> function_call_parameter .)
    RBRACKET        reduce using rule 134 (nonempty_function_call_parameter_list -> function_call_parameter .)
    RPAREN          reduce using rule 134 (nonempty_function_call_parameter_list -> function_call_parameter .)


state 172

    (181) expr -> PLUS expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 181 (expr -> PLUS expr .)
    LBRACE          reduce using rule 181 (expr -> PLUS expr .)
    BOOLEAN_AND     reduce using rule 181 (expr -> PLUS expr .)
    BOOLEAN_OR      reduce using rule 181 (expr -> PLUS expr .)
    LOGICAL_AND     reduce using rule 181 (expr -> PLUS expr .)
    LOGICAL_OR      reduce using rule 181 (expr -> PLUS expr .)
    LOGICAL_XOR     reduce using rule 181 (expr -> PLUS expr .)
    AND             reduce using rule 181 (expr -> PLUS expr .)
    OR              reduce using rule 181 (expr -> PLUS expr .)
    XOR             reduce using rule 181 (expr -> PLUS expr .)
    CONCAT          reduce using rule 181 (expr -> PLUS expr .)
    PLUS            reduce using rule 181 (expr -> PLUS expr .)
    MINUS           reduce using rule 181 (expr -> PLUS expr .)
    SL              reduce using rule 181 (expr -> PLUS expr .)
    SR              reduce using rule 181 (expr -> PLUS expr .)
    IS_IDENTICAL    reduce using rule 181 (expr -> PLUS expr .)
    IS_NOT_IDENTICAL reduce using rule 181 (expr -> PLUS expr .)
    IS_EQUAL_TO     reduce using rule 181 (expr -> PLUS expr .)
    IS_NOT_EQUAL    reduce using rule 181 (expr -> PLUS expr .)
    LESS_THAN       reduce using rule 181 (expr -> PLUS expr .)
    LESS_THAN_OR_EQUAL reduce using rule 181 (expr -> PLUS expr .)
    GREATER_THAN    reduce using rule 181 (expr -> PLUS expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 181 (expr -> PLUS expr .)
    QUESTION        reduce using rule 181 (expr -> PLUS expr .)
    RPAREN          reduce using rule 181 (expr -> PLUS expr .)
    COMMA           reduce using rule 181 (expr -> PLUS expr .)
    DOUBLE_ARROW    reduce using rule 181 (expr -> PLUS expr .)
    RBRACKET        reduce using rule 181 (expr -> PLUS expr .)
    RBRACE          reduce using rule 181 (expr -> PLUS expr .)
    COLON           reduce using rule 181 (expr -> PLUS expr .)
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    MOD             shift and go to state 108
    INSTANCEOF      shift and go to state 117

  ! MUL             [ reduce using rule 181 (expr -> PLUS expr .) ]
  ! DIV             [ reduce using rule 181 (expr -> PLUS expr .) ]
  ! MOD             [ reduce using rule 181 (expr -> PLUS expr .) ]
  ! INSTANCEOF      [ reduce using rule 181 (expr -> PLUS expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! CONCAT          [ shift and go to state 101 ]
  ! PLUS            [ shift and go to state 102 ]
  ! MINUS           [ shift and go to state 103 ]
  ! SL              [ shift and go to state 106 ]
  ! SR              [ shift and go to state 107 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! LESS_THAN       [ shift and go to state 113 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! GREATER_THAN    [ shift and go to state 115 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 118 ]


state 173

    (182) expr -> MINUS expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 182 (expr -> MINUS expr .)
    LBRACE          reduce using rule 182 (expr -> MINUS expr .)
    BOOLEAN_AND     reduce using rule 182 (expr -> MINUS expr .)
    BOOLEAN_OR      reduce using rule 182 (expr -> MINUS expr .)
    LOGICAL_AND     reduce using rule 182 (expr -> MINUS expr .)
    LOGICAL_OR      reduce using rule 182 (expr -> MINUS expr .)
    LOGICAL_XOR     reduce using rule 182 (expr -> MINUS expr .)
    AND             reduce using rule 182 (expr -> MINUS expr .)
    OR              reduce using rule 182 (expr -> MINUS expr .)
    XOR             reduce using rule 182 (expr -> MINUS expr .)
    CONCAT          reduce using rule 182 (expr -> MINUS expr .)
    PLUS            reduce using rule 182 (expr -> MINUS expr .)
    MINUS           reduce using rule 182 (expr -> MINUS expr .)
    SL              reduce using rule 182 (expr -> MINUS expr .)
    SR              reduce using rule 182 (expr -> MINUS expr .)
    IS_IDENTICAL    reduce using rule 182 (expr -> MINUS expr .)
    IS_NOT_IDENTICAL reduce using rule 182 (expr -> MINUS expr .)
    IS_EQUAL_TO     reduce using rule 182 (expr -> MINUS expr .)
    IS_NOT_EQUAL    reduce using rule 182 (expr -> MINUS expr .)
    LESS_THAN       reduce using rule 182 (expr -> MINUS expr .)
    LESS_THAN_OR_EQUAL reduce using rule 182 (expr -> MINUS expr .)
    GREATER_THAN    reduce using rule 182 (expr -> MINUS expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 182 (expr -> MINUS expr .)
    QUESTION        reduce using rule 182 (expr -> MINUS expr .)
    RPAREN          reduce using rule 182 (expr -> MINUS expr .)
    COMMA           reduce using rule 182 (expr -> MINUS expr .)
    DOUBLE_ARROW    reduce using rule 182 (expr -> MINUS expr .)
    RBRACKET        reduce using rule 182 (expr -> MINUS expr .)
    RBRACE          reduce using rule 182 (expr -> MINUS expr .)
    COLON           reduce using rule 182 (expr -> MINUS expr .)
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    MOD             shift and go to state 108
    INSTANCEOF      shift and go to state 117

  ! MUL             [ reduce using rule 182 (expr -> MINUS expr .) ]
  ! DIV             [ reduce using rule 182 (expr -> MINUS expr .) ]
  ! MOD             [ reduce using rule 182 (expr -> MINUS expr .) ]
  ! INSTANCEOF      [ reduce using rule 182 (expr -> MINUS expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! CONCAT          [ shift and go to state 101 ]
  ! PLUS            [ shift and go to state 102 ]
  ! MINUS           [ shift and go to state 103 ]
  ! SL              [ shift and go to state 106 ]
  ! SR              [ shift and go to state 107 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! LESS_THAN       [ shift and go to state 113 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! GREATER_THAN    [ shift and go to state 115 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 118 ]


state 174

    (183) expr -> NOT expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 183 (expr -> NOT expr .)
    LBRACE          reduce using rule 183 (expr -> NOT expr .)
    BOOLEAN_AND     reduce using rule 183 (expr -> NOT expr .)
    BOOLEAN_OR      reduce using rule 183 (expr -> NOT expr .)
    LOGICAL_AND     reduce using rule 183 (expr -> NOT expr .)
    LOGICAL_OR      reduce using rule 183 (expr -> NOT expr .)
    LOGICAL_XOR     reduce using rule 183 (expr -> NOT expr .)
    AND             reduce using rule 183 (expr -> NOT expr .)
    OR              reduce using rule 183 (expr -> NOT expr .)
    XOR             reduce using rule 183 (expr -> NOT expr .)
    CONCAT          reduce using rule 183 (expr -> NOT expr .)
    PLUS            reduce using rule 183 (expr -> NOT expr .)
    MINUS           reduce using rule 183 (expr -> NOT expr .)
    MUL             reduce using rule 183 (expr -> NOT expr .)
    DIV             reduce using rule 183 (expr -> NOT expr .)
    SL              reduce using rule 183 (expr -> NOT expr .)
    SR              reduce using rule 183 (expr -> NOT expr .)
    MOD             reduce using rule 183 (expr -> NOT expr .)
    IS_IDENTICAL    reduce using rule 183 (expr -> NOT expr .)
    IS_NOT_IDENTICAL reduce using rule 183 (expr -> NOT expr .)
    IS_EQUAL_TO     reduce using rule 183 (expr -> NOT expr .)
    IS_NOT_EQUAL    reduce using rule 183 (expr -> NOT expr .)
    LESS_THAN       reduce using rule 183 (expr -> NOT expr .)
    LESS_THAN_OR_EQUAL reduce using rule 183 (expr -> NOT expr .)
    GREATER_THAN    reduce using rule 183 (expr -> NOT expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 183 (expr -> NOT expr .)
    INSTANCEOF      reduce using rule 183 (expr -> NOT expr .)
    QUESTION        reduce using rule 183 (expr -> NOT expr .)
    RPAREN          reduce using rule 183 (expr -> NOT expr .)
    COMMA           reduce using rule 183 (expr -> NOT expr .)
    DOUBLE_ARROW    reduce using rule 183 (expr -> NOT expr .)
    RBRACKET        reduce using rule 183 (expr -> NOT expr .)
    RBRACE          reduce using rule 183 (expr -> NOT expr .)
    COLON           reduce using rule 183 (expr -> NOT expr .)

  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! CONCAT          [ shift and go to state 101 ]
  ! PLUS            [ shift and go to state 102 ]
  ! MINUS           [ shift and go to state 103 ]
  ! MUL             [ shift and go to state 104 ]
  ! DIV             [ shift and go to state 105 ]
  ! SL              [ shift and go to state 106 ]
  ! SR              [ shift and go to state 107 ]
  ! MOD             [ shift and go to state 108 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! LESS_THAN       [ shift and go to state 113 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! GREATER_THAN    [ shift and go to state 115 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 116 ]
  ! INSTANCEOF      [ shift and go to state 117 ]
  ! QUESTION        [ shift and go to state 118 ]


state 175

    (184) expr -> BOOLEAN_NOT expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    LBRACE          reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    BOOLEAN_AND     reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    BOOLEAN_OR      reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    LOGICAL_AND     reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    LOGICAL_OR      reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    LOGICAL_XOR     reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    AND             reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    OR              reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    XOR             reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    CONCAT          reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    PLUS            reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    MINUS           reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    MUL             reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    DIV             reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    SL              reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    SR              reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    MOD             reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    IS_IDENTICAL    reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    IS_NOT_IDENTICAL reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    IS_EQUAL_TO     reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    IS_NOT_EQUAL    reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    LESS_THAN       reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    LESS_THAN_OR_EQUAL reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    GREATER_THAN    reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    QUESTION        reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    RPAREN          reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    COMMA           reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    DOUBLE_ARROW    reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    RBRACKET        reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    RBRACE          reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    COLON           reduce using rule 184 (expr -> BOOLEAN_NOT expr .)
    INSTANCEOF      shift and go to state 117

  ! INSTANCEOF      [ reduce using rule 184 (expr -> BOOLEAN_NOT expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! CONCAT          [ shift and go to state 101 ]
  ! PLUS            [ shift and go to state 102 ]
  ! MINUS           [ shift and go to state 103 ]
  ! MUL             [ shift and go to state 104 ]
  ! DIV             [ shift and go to state 105 ]
  ! SL              [ shift and go to state 106 ]
  ! SR              [ shift and go to state 107 ]
  ! MOD             [ shift and go to state 108 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! LESS_THAN       [ shift and go to state 113 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! GREATER_THAN    [ shift and go to state 115 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 118 ]


state 176

    (187) expr -> INC variable .
    (111) variable -> variable . LBRACKET dim_offset RBRACKET

    SEMI_COLON      reduce using rule 187 (expr -> INC variable .)
    LBRACE          reduce using rule 187 (expr -> INC variable .)
    BOOLEAN_AND     reduce using rule 187 (expr -> INC variable .)
    BOOLEAN_OR      reduce using rule 187 (expr -> INC variable .)
    LOGICAL_AND     reduce using rule 187 (expr -> INC variable .)
    LOGICAL_OR      reduce using rule 187 (expr -> INC variable .)
    LOGICAL_XOR     reduce using rule 187 (expr -> INC variable .)
    AND             reduce using rule 187 (expr -> INC variable .)
    OR              reduce using rule 187 (expr -> INC variable .)
    XOR             reduce using rule 187 (expr -> INC variable .)
    CONCAT          reduce using rule 187 (expr -> INC variable .)
    PLUS            reduce using rule 187 (expr -> INC variable .)
    MINUS           reduce using rule 187 (expr -> INC variable .)
    MUL             reduce using rule 187 (expr -> INC variable .)
    DIV             reduce using rule 187 (expr -> INC variable .)
    SL              reduce using rule 187 (expr -> INC variable .)
    SR              reduce using rule 187 (expr -> INC variable .)
    MOD             reduce using rule 187 (expr -> INC variable .)
    IS_IDENTICAL    reduce using rule 187 (expr -> INC variable .)
    IS_NOT_IDENTICAL reduce using rule 187 (expr -> INC variable .)
    IS_EQUAL_TO     reduce using rule 187 (expr -> INC variable .)
    IS_NOT_EQUAL    reduce using rule 187 (expr -> INC variable .)
    LESS_THAN       reduce using rule 187 (expr -> INC variable .)
    LESS_THAN_OR_EQUAL reduce using rule 187 (expr -> INC variable .)
    GREATER_THAN    reduce using rule 187 (expr -> INC variable .)
    GRATER_THAN_OR_EQUAL reduce using rule 187 (expr -> INC variable .)
    INSTANCEOF      reduce using rule 187 (expr -> INC variable .)
    QUESTION        reduce using rule 187 (expr -> INC variable .)
    RPAREN          reduce using rule 187 (expr -> INC variable .)
    COMMA           reduce using rule 187 (expr -> INC variable .)
    DOUBLE_ARROW    reduce using rule 187 (expr -> INC variable .)
    RBRACKET        reduce using rule 187 (expr -> INC variable .)
    RBRACE          reduce using rule 187 (expr -> INC variable .)
    COLON           reduce using rule 187 (expr -> INC variable .)
    LBRACKET        shift and go to state 160


state 177

    (102) function_call -> IDENTIFIER . fucntion_call_body
    (104) fucntion_call_body -> . LPAREN nonempty_function_call_parameter_list RPAREN
    (105) fucntion_call_body -> . LPAREN empty RPAREN

    LPAREN          shift and go to state 145

    fucntion_call_body             shift and go to state 144

state 178

    (103) function_call -> ARRAY . fucntion_call_body
    (104) fucntion_call_body -> . LPAREN nonempty_function_call_parameter_list RPAREN
    (105) fucntion_call_body -> . LPAREN empty RPAREN

    LPAREN          shift and go to state 145

    fucntion_call_body             shift and go to state 164

state 179

    (188) expr -> DEC variable .
    (111) variable -> variable . LBRACKET dim_offset RBRACKET

    SEMI_COLON      reduce using rule 188 (expr -> DEC variable .)
    LBRACE          reduce using rule 188 (expr -> DEC variable .)
    BOOLEAN_AND     reduce using rule 188 (expr -> DEC variable .)
    BOOLEAN_OR      reduce using rule 188 (expr -> DEC variable .)
    LOGICAL_AND     reduce using rule 188 (expr -> DEC variable .)
    LOGICAL_OR      reduce using rule 188 (expr -> DEC variable .)
    LOGICAL_XOR     reduce using rule 188 (expr -> DEC variable .)
    AND             reduce using rule 188 (expr -> DEC variable .)
    OR              reduce using rule 188 (expr -> DEC variable .)
    XOR             reduce using rule 188 (expr -> DEC variable .)
    CONCAT          reduce using rule 188 (expr -> DEC variable .)
    PLUS            reduce using rule 188 (expr -> DEC variable .)
    MINUS           reduce using rule 188 (expr -> DEC variable .)
    MUL             reduce using rule 188 (expr -> DEC variable .)
    DIV             reduce using rule 188 (expr -> DEC variable .)
    SL              reduce using rule 188 (expr -> DEC variable .)
    SR              reduce using rule 188 (expr -> DEC variable .)
    MOD             reduce using rule 188 (expr -> DEC variable .)
    IS_IDENTICAL    reduce using rule 188 (expr -> DEC variable .)
    IS_NOT_IDENTICAL reduce using rule 188 (expr -> DEC variable .)
    IS_EQUAL_TO     reduce using rule 188 (expr -> DEC variable .)
    IS_NOT_EQUAL    reduce using rule 188 (expr -> DEC variable .)
    LESS_THAN       reduce using rule 188 (expr -> DEC variable .)
    LESS_THAN_OR_EQUAL reduce using rule 188 (expr -> DEC variable .)
    GREATER_THAN    reduce using rule 188 (expr -> DEC variable .)
    GRATER_THAN_OR_EQUAL reduce using rule 188 (expr -> DEC variable .)
    INSTANCEOF      reduce using rule 188 (expr -> DEC variable .)
    QUESTION        reduce using rule 188 (expr -> DEC variable .)
    RPAREN          reduce using rule 188 (expr -> DEC variable .)
    COMMA           reduce using rule 188 (expr -> DEC variable .)
    DOUBLE_ARROW    reduce using rule 188 (expr -> DEC variable .)
    RBRACKET        reduce using rule 188 (expr -> DEC variable .)
    RBRACE          reduce using rule 188 (expr -> DEC variable .)
    COLON           reduce using rule 188 (expr -> DEC variable .)
    LBRACKET        shift and go to state 160


state 180

    (191) expr -> INT_CAST expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 191 (expr -> INT_CAST expr .)
    LBRACE          reduce using rule 191 (expr -> INT_CAST expr .)
    BOOLEAN_AND     reduce using rule 191 (expr -> INT_CAST expr .)
    BOOLEAN_OR      reduce using rule 191 (expr -> INT_CAST expr .)
    LOGICAL_AND     reduce using rule 191 (expr -> INT_CAST expr .)
    LOGICAL_OR      reduce using rule 191 (expr -> INT_CAST expr .)
    LOGICAL_XOR     reduce using rule 191 (expr -> INT_CAST expr .)
    AND             reduce using rule 191 (expr -> INT_CAST expr .)
    OR              reduce using rule 191 (expr -> INT_CAST expr .)
    XOR             reduce using rule 191 (expr -> INT_CAST expr .)
    CONCAT          reduce using rule 191 (expr -> INT_CAST expr .)
    PLUS            reduce using rule 191 (expr -> INT_CAST expr .)
    MINUS           reduce using rule 191 (expr -> INT_CAST expr .)
    MUL             reduce using rule 191 (expr -> INT_CAST expr .)
    DIV             reduce using rule 191 (expr -> INT_CAST expr .)
    SL              reduce using rule 191 (expr -> INT_CAST expr .)
    SR              reduce using rule 191 (expr -> INT_CAST expr .)
    MOD             reduce using rule 191 (expr -> INT_CAST expr .)
    IS_IDENTICAL    reduce using rule 191 (expr -> INT_CAST expr .)
    IS_NOT_IDENTICAL reduce using rule 191 (expr -> INT_CAST expr .)
    IS_EQUAL_TO     reduce using rule 191 (expr -> INT_CAST expr .)
    IS_NOT_EQUAL    reduce using rule 191 (expr -> INT_CAST expr .)
    LESS_THAN       reduce using rule 191 (expr -> INT_CAST expr .)
    LESS_THAN_OR_EQUAL reduce using rule 191 (expr -> INT_CAST expr .)
    GREATER_THAN    reduce using rule 191 (expr -> INT_CAST expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 191 (expr -> INT_CAST expr .)
    INSTANCEOF      reduce using rule 191 (expr -> INT_CAST expr .)
    QUESTION        reduce using rule 191 (expr -> INT_CAST expr .)
    RPAREN          reduce using rule 191 (expr -> INT_CAST expr .)
    COMMA           reduce using rule 191 (expr -> INT_CAST expr .)
    DOUBLE_ARROW    reduce using rule 191 (expr -> INT_CAST expr .)
    RBRACKET        reduce using rule 191 (expr -> INT_CAST expr .)
    RBRACE          reduce using rule 191 (expr -> INT_CAST expr .)
    COLON           reduce using rule 191 (expr -> INT_CAST expr .)

  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! CONCAT          [ shift and go to state 101 ]
  ! PLUS            [ shift and go to state 102 ]
  ! MINUS           [ shift and go to state 103 ]
  ! MUL             [ shift and go to state 104 ]
  ! DIV             [ shift and go to state 105 ]
  ! SL              [ shift and go to state 106 ]
  ! SR              [ shift and go to state 107 ]
  ! MOD             [ shift and go to state 108 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! LESS_THAN       [ shift and go to state 113 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! GREATER_THAN    [ shift and go to state 115 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 116 ]
  ! INSTANCEOF      [ shift and go to state 117 ]
  ! QUESTION        [ shift and go to state 118 ]


state 181

    (192) expr -> ARRAY_CAST expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 192 (expr -> ARRAY_CAST expr .)
    LBRACE          reduce using rule 192 (expr -> ARRAY_CAST expr .)
    BOOLEAN_AND     reduce using rule 192 (expr -> ARRAY_CAST expr .)
    BOOLEAN_OR      reduce using rule 192 (expr -> ARRAY_CAST expr .)
    LOGICAL_AND     reduce using rule 192 (expr -> ARRAY_CAST expr .)
    LOGICAL_OR      reduce using rule 192 (expr -> ARRAY_CAST expr .)
    LOGICAL_XOR     reduce using rule 192 (expr -> ARRAY_CAST expr .)
    AND             reduce using rule 192 (expr -> ARRAY_CAST expr .)
    OR              reduce using rule 192 (expr -> ARRAY_CAST expr .)
    XOR             reduce using rule 192 (expr -> ARRAY_CAST expr .)
    CONCAT          reduce using rule 192 (expr -> ARRAY_CAST expr .)
    PLUS            reduce using rule 192 (expr -> ARRAY_CAST expr .)
    MINUS           reduce using rule 192 (expr -> ARRAY_CAST expr .)
    MUL             reduce using rule 192 (expr -> ARRAY_CAST expr .)
    DIV             reduce using rule 192 (expr -> ARRAY_CAST expr .)
    SL              reduce using rule 192 (expr -> ARRAY_CAST expr .)
    SR              reduce using rule 192 (expr -> ARRAY_CAST expr .)
    MOD             reduce using rule 192 (expr -> ARRAY_CAST expr .)
    IS_IDENTICAL    reduce using rule 192 (expr -> ARRAY_CAST expr .)
    IS_NOT_IDENTICAL reduce using rule 192 (expr -> ARRAY_CAST expr .)
    IS_EQUAL_TO     reduce using rule 192 (expr -> ARRAY_CAST expr .)
    IS_NOT_EQUAL    reduce using rule 192 (expr -> ARRAY_CAST expr .)
    LESS_THAN       reduce using rule 192 (expr -> ARRAY_CAST expr .)
    LESS_THAN_OR_EQUAL reduce using rule 192 (expr -> ARRAY_CAST expr .)
    GREATER_THAN    reduce using rule 192 (expr -> ARRAY_CAST expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 192 (expr -> ARRAY_CAST expr .)
    INSTANCEOF      reduce using rule 192 (expr -> ARRAY_CAST expr .)
    QUESTION        reduce using rule 192 (expr -> ARRAY_CAST expr .)
    RPAREN          reduce using rule 192 (expr -> ARRAY_CAST expr .)
    COMMA           reduce using rule 192 (expr -> ARRAY_CAST expr .)
    DOUBLE_ARROW    reduce using rule 192 (expr -> ARRAY_CAST expr .)
    RBRACKET        reduce using rule 192 (expr -> ARRAY_CAST expr .)
    RBRACE          reduce using rule 192 (expr -> ARRAY_CAST expr .)
    COLON           reduce using rule 192 (expr -> ARRAY_CAST expr .)

  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! CONCAT          [ shift and go to state 101 ]
  ! PLUS            [ shift and go to state 102 ]
  ! MINUS           [ shift and go to state 103 ]
  ! MUL             [ shift and go to state 104 ]
  ! DIV             [ shift and go to state 105 ]
  ! SL              [ shift and go to state 106 ]
  ! SR              [ shift and go to state 107 ]
  ! MOD             [ shift and go to state 108 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! LESS_THAN       [ shift and go to state 113 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! GREATER_THAN    [ shift and go to state 115 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 116 ]
  ! INSTANCEOF      [ shift and go to state 117 ]
  ! QUESTION        [ shift and go to state 118 ]


state 182

    (193) expr -> STRING_CAST expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 193 (expr -> STRING_CAST expr .)
    LBRACE          reduce using rule 193 (expr -> STRING_CAST expr .)
    BOOLEAN_AND     reduce using rule 193 (expr -> STRING_CAST expr .)
    BOOLEAN_OR      reduce using rule 193 (expr -> STRING_CAST expr .)
    LOGICAL_AND     reduce using rule 193 (expr -> STRING_CAST expr .)
    LOGICAL_OR      reduce using rule 193 (expr -> STRING_CAST expr .)
    LOGICAL_XOR     reduce using rule 193 (expr -> STRING_CAST expr .)
    AND             reduce using rule 193 (expr -> STRING_CAST expr .)
    OR              reduce using rule 193 (expr -> STRING_CAST expr .)
    XOR             reduce using rule 193 (expr -> STRING_CAST expr .)
    CONCAT          reduce using rule 193 (expr -> STRING_CAST expr .)
    PLUS            reduce using rule 193 (expr -> STRING_CAST expr .)
    MINUS           reduce using rule 193 (expr -> STRING_CAST expr .)
    MUL             reduce using rule 193 (expr -> STRING_CAST expr .)
    DIV             reduce using rule 193 (expr -> STRING_CAST expr .)
    SL              reduce using rule 193 (expr -> STRING_CAST expr .)
    SR              reduce using rule 193 (expr -> STRING_CAST expr .)
    MOD             reduce using rule 193 (expr -> STRING_CAST expr .)
    IS_IDENTICAL    reduce using rule 193 (expr -> STRING_CAST expr .)
    IS_NOT_IDENTICAL reduce using rule 193 (expr -> STRING_CAST expr .)
    IS_EQUAL_TO     reduce using rule 193 (expr -> STRING_CAST expr .)
    IS_NOT_EQUAL    reduce using rule 193 (expr -> STRING_CAST expr .)
    LESS_THAN       reduce using rule 193 (expr -> STRING_CAST expr .)
    LESS_THAN_OR_EQUAL reduce using rule 193 (expr -> STRING_CAST expr .)
    GREATER_THAN    reduce using rule 193 (expr -> STRING_CAST expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 193 (expr -> STRING_CAST expr .)
    INSTANCEOF      reduce using rule 193 (expr -> STRING_CAST expr .)
    QUESTION        reduce using rule 193 (expr -> STRING_CAST expr .)
    RPAREN          reduce using rule 193 (expr -> STRING_CAST expr .)
    COMMA           reduce using rule 193 (expr -> STRING_CAST expr .)
    DOUBLE_ARROW    reduce using rule 193 (expr -> STRING_CAST expr .)
    RBRACKET        reduce using rule 193 (expr -> STRING_CAST expr .)
    RBRACE          reduce using rule 193 (expr -> STRING_CAST expr .)
    COLON           reduce using rule 193 (expr -> STRING_CAST expr .)

  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! CONCAT          [ shift and go to state 101 ]
  ! PLUS            [ shift and go to state 102 ]
  ! MINUS           [ shift and go to state 103 ]
  ! MUL             [ shift and go to state 104 ]
  ! DIV             [ shift and go to state 105 ]
  ! SL              [ shift and go to state 106 ]
  ! SR              [ shift and go to state 107 ]
  ! MOD             [ shift and go to state 108 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! LESS_THAN       [ shift and go to state 113 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! GREATER_THAN    [ shift and go to state 115 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 116 ]
  ! INSTANCEOF      [ shift and go to state 117 ]
  ! QUESTION        [ shift and go to state 118 ]


state 183

    (194) expr -> DOUBLE_CAST expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    LBRACE          reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    BOOLEAN_AND     reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    BOOLEAN_OR      reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    LOGICAL_AND     reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    LOGICAL_OR      reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    LOGICAL_XOR     reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    AND             reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    OR              reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    XOR             reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    CONCAT          reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    PLUS            reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    MINUS           reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    MUL             reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    DIV             reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    SL              reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    SR              reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    MOD             reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    IS_IDENTICAL    reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    IS_NOT_IDENTICAL reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    IS_EQUAL_TO     reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    IS_NOT_EQUAL    reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    LESS_THAN       reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    LESS_THAN_OR_EQUAL reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    GREATER_THAN    reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    INSTANCEOF      reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    QUESTION        reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    RPAREN          reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    COMMA           reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    DOUBLE_ARROW    reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    RBRACKET        reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    RBRACE          reduce using rule 194 (expr -> DOUBLE_CAST expr .)
    COLON           reduce using rule 194 (expr -> DOUBLE_CAST expr .)

  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! CONCAT          [ shift and go to state 101 ]
  ! PLUS            [ shift and go to state 102 ]
  ! MINUS           [ shift and go to state 103 ]
  ! MUL             [ shift and go to state 104 ]
  ! DIV             [ shift and go to state 105 ]
  ! SL              [ shift and go to state 106 ]
  ! SR              [ shift and go to state 107 ]
  ! MOD             [ shift and go to state 108 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! LESS_THAN       [ shift and go to state 113 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! GREATER_THAN    [ shift and go to state 115 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 116 ]
  ! INSTANCEOF      [ shift and go to state 117 ]
  ! QUESTION        [ shift and go to state 118 ]


state 184

    (195) expr -> BOOL_CAST expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 195 (expr -> BOOL_CAST expr .)
    LBRACE          reduce using rule 195 (expr -> BOOL_CAST expr .)
    BOOLEAN_AND     reduce using rule 195 (expr -> BOOL_CAST expr .)
    BOOLEAN_OR      reduce using rule 195 (expr -> BOOL_CAST expr .)
    LOGICAL_AND     reduce using rule 195 (expr -> BOOL_CAST expr .)
    LOGICAL_OR      reduce using rule 195 (expr -> BOOL_CAST expr .)
    LOGICAL_XOR     reduce using rule 195 (expr -> BOOL_CAST expr .)
    AND             reduce using rule 195 (expr -> BOOL_CAST expr .)
    OR              reduce using rule 195 (expr -> BOOL_CAST expr .)
    XOR             reduce using rule 195 (expr -> BOOL_CAST expr .)
    CONCAT          reduce using rule 195 (expr -> BOOL_CAST expr .)
    PLUS            reduce using rule 195 (expr -> BOOL_CAST expr .)
    MINUS           reduce using rule 195 (expr -> BOOL_CAST expr .)
    MUL             reduce using rule 195 (expr -> BOOL_CAST expr .)
    DIV             reduce using rule 195 (expr -> BOOL_CAST expr .)
    SL              reduce using rule 195 (expr -> BOOL_CAST expr .)
    SR              reduce using rule 195 (expr -> BOOL_CAST expr .)
    MOD             reduce using rule 195 (expr -> BOOL_CAST expr .)
    IS_IDENTICAL    reduce using rule 195 (expr -> BOOL_CAST expr .)
    IS_NOT_IDENTICAL reduce using rule 195 (expr -> BOOL_CAST expr .)
    IS_EQUAL_TO     reduce using rule 195 (expr -> BOOL_CAST expr .)
    IS_NOT_EQUAL    reduce using rule 195 (expr -> BOOL_CAST expr .)
    LESS_THAN       reduce using rule 195 (expr -> BOOL_CAST expr .)
    LESS_THAN_OR_EQUAL reduce using rule 195 (expr -> BOOL_CAST expr .)
    GREATER_THAN    reduce using rule 195 (expr -> BOOL_CAST expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 195 (expr -> BOOL_CAST expr .)
    INSTANCEOF      reduce using rule 195 (expr -> BOOL_CAST expr .)
    QUESTION        reduce using rule 195 (expr -> BOOL_CAST expr .)
    RPAREN          reduce using rule 195 (expr -> BOOL_CAST expr .)
    COMMA           reduce using rule 195 (expr -> BOOL_CAST expr .)
    DOUBLE_ARROW    reduce using rule 195 (expr -> BOOL_CAST expr .)
    RBRACKET        reduce using rule 195 (expr -> BOOL_CAST expr .)
    RBRACE          reduce using rule 195 (expr -> BOOL_CAST expr .)
    COLON           reduce using rule 195 (expr -> BOOL_CAST expr .)

  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! CONCAT          [ shift and go to state 101 ]
  ! PLUS            [ shift and go to state 102 ]
  ! MINUS           [ shift and go to state 103 ]
  ! MUL             [ shift and go to state 104 ]
  ! DIV             [ shift and go to state 105 ]
  ! SL              [ shift and go to state 106 ]
  ! SR              [ shift and go to state 107 ]
  ! MOD             [ shift and go to state 108 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! LESS_THAN       [ shift and go to state 113 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! GREATER_THAN    [ shift and go to state 115 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 116 ]
  ! INSTANCEOF      [ shift and go to state 117 ]
  ! QUESTION        [ shift and go to state 118 ]


state 185

    (196) expr -> UNSET_CAST expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 196 (expr -> UNSET_CAST expr .)
    LBRACE          reduce using rule 196 (expr -> UNSET_CAST expr .)
    BOOLEAN_AND     reduce using rule 196 (expr -> UNSET_CAST expr .)
    BOOLEAN_OR      reduce using rule 196 (expr -> UNSET_CAST expr .)
    LOGICAL_AND     reduce using rule 196 (expr -> UNSET_CAST expr .)
    LOGICAL_OR      reduce using rule 196 (expr -> UNSET_CAST expr .)
    LOGICAL_XOR     reduce using rule 196 (expr -> UNSET_CAST expr .)
    AND             reduce using rule 196 (expr -> UNSET_CAST expr .)
    OR              reduce using rule 196 (expr -> UNSET_CAST expr .)
    XOR             reduce using rule 196 (expr -> UNSET_CAST expr .)
    CONCAT          reduce using rule 196 (expr -> UNSET_CAST expr .)
    PLUS            reduce using rule 196 (expr -> UNSET_CAST expr .)
    MINUS           reduce using rule 196 (expr -> UNSET_CAST expr .)
    MUL             reduce using rule 196 (expr -> UNSET_CAST expr .)
    DIV             reduce using rule 196 (expr -> UNSET_CAST expr .)
    SL              reduce using rule 196 (expr -> UNSET_CAST expr .)
    SR              reduce using rule 196 (expr -> UNSET_CAST expr .)
    MOD             reduce using rule 196 (expr -> UNSET_CAST expr .)
    IS_IDENTICAL    reduce using rule 196 (expr -> UNSET_CAST expr .)
    IS_NOT_IDENTICAL reduce using rule 196 (expr -> UNSET_CAST expr .)
    IS_EQUAL_TO     reduce using rule 196 (expr -> UNSET_CAST expr .)
    IS_NOT_EQUAL    reduce using rule 196 (expr -> UNSET_CAST expr .)
    LESS_THAN       reduce using rule 196 (expr -> UNSET_CAST expr .)
    LESS_THAN_OR_EQUAL reduce using rule 196 (expr -> UNSET_CAST expr .)
    GREATER_THAN    reduce using rule 196 (expr -> UNSET_CAST expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 196 (expr -> UNSET_CAST expr .)
    INSTANCEOF      reduce using rule 196 (expr -> UNSET_CAST expr .)
    QUESTION        reduce using rule 196 (expr -> UNSET_CAST expr .)
    RPAREN          reduce using rule 196 (expr -> UNSET_CAST expr .)
    COMMA           reduce using rule 196 (expr -> UNSET_CAST expr .)
    DOUBLE_ARROW    reduce using rule 196 (expr -> UNSET_CAST expr .)
    RBRACKET        reduce using rule 196 (expr -> UNSET_CAST expr .)
    RBRACE          reduce using rule 196 (expr -> UNSET_CAST expr .)
    COLON           reduce using rule 196 (expr -> UNSET_CAST expr .)

  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! CONCAT          [ shift and go to state 101 ]
  ! PLUS            [ shift and go to state 102 ]
  ! MINUS           [ shift and go to state 103 ]
  ! MUL             [ shift and go to state 104 ]
  ! DIV             [ shift and go to state 105 ]
  ! SL              [ shift and go to state 106 ]
  ! SR              [ shift and go to state 107 ]
  ! MOD             [ shift and go to state 108 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! LESS_THAN       [ shift and go to state 113 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! GREATER_THAN    [ shift and go to state 115 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 116 ]
  ! INSTANCEOF      [ shift and go to state 117 ]
  ! QUESTION        [ shift and go to state 118 ]


state 186

    (197) expr -> BINARY_CAST expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 197 (expr -> BINARY_CAST expr .)
    LBRACE          reduce using rule 197 (expr -> BINARY_CAST expr .)
    BOOLEAN_AND     reduce using rule 197 (expr -> BINARY_CAST expr .)
    BOOLEAN_OR      reduce using rule 197 (expr -> BINARY_CAST expr .)
    LOGICAL_AND     reduce using rule 197 (expr -> BINARY_CAST expr .)
    LOGICAL_OR      reduce using rule 197 (expr -> BINARY_CAST expr .)
    LOGICAL_XOR     reduce using rule 197 (expr -> BINARY_CAST expr .)
    AND             reduce using rule 197 (expr -> BINARY_CAST expr .)
    OR              reduce using rule 197 (expr -> BINARY_CAST expr .)
    XOR             reduce using rule 197 (expr -> BINARY_CAST expr .)
    CONCAT          reduce using rule 197 (expr -> BINARY_CAST expr .)
    PLUS            reduce using rule 197 (expr -> BINARY_CAST expr .)
    MINUS           reduce using rule 197 (expr -> BINARY_CAST expr .)
    MUL             reduce using rule 197 (expr -> BINARY_CAST expr .)
    DIV             reduce using rule 197 (expr -> BINARY_CAST expr .)
    SL              reduce using rule 197 (expr -> BINARY_CAST expr .)
    SR              reduce using rule 197 (expr -> BINARY_CAST expr .)
    MOD             reduce using rule 197 (expr -> BINARY_CAST expr .)
    IS_IDENTICAL    reduce using rule 197 (expr -> BINARY_CAST expr .)
    IS_NOT_IDENTICAL reduce using rule 197 (expr -> BINARY_CAST expr .)
    IS_EQUAL_TO     reduce using rule 197 (expr -> BINARY_CAST expr .)
    IS_NOT_EQUAL    reduce using rule 197 (expr -> BINARY_CAST expr .)
    LESS_THAN       reduce using rule 197 (expr -> BINARY_CAST expr .)
    LESS_THAN_OR_EQUAL reduce using rule 197 (expr -> BINARY_CAST expr .)
    GREATER_THAN    reduce using rule 197 (expr -> BINARY_CAST expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 197 (expr -> BINARY_CAST expr .)
    INSTANCEOF      reduce using rule 197 (expr -> BINARY_CAST expr .)
    QUESTION        reduce using rule 197 (expr -> BINARY_CAST expr .)
    RPAREN          reduce using rule 197 (expr -> BINARY_CAST expr .)
    COMMA           reduce using rule 197 (expr -> BINARY_CAST expr .)
    DOUBLE_ARROW    reduce using rule 197 (expr -> BINARY_CAST expr .)
    RBRACKET        reduce using rule 197 (expr -> BINARY_CAST expr .)
    RBRACE          reduce using rule 197 (expr -> BINARY_CAST expr .)
    COLON           reduce using rule 197 (expr -> BINARY_CAST expr .)

  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! CONCAT          [ shift and go to state 101 ]
  ! PLUS            [ shift and go to state 102 ]
  ! MINUS           [ shift and go to state 103 ]
  ! MUL             [ shift and go to state 104 ]
  ! DIV             [ shift and go to state 105 ]
  ! SL              [ shift and go to state 106 ]
  ! SR              [ shift and go to state 107 ]
  ! MOD             [ shift and go to state 108 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! LESS_THAN       [ shift and go to state 113 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! GREATER_THAN    [ shift and go to state 115 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 116 ]
  ! INSTANCEOF      [ shift and go to state 117 ]
  ! QUESTION        [ shift and go to state 118 ]


state 187

    (198) expr -> ISSET LPAREN . isset_variables RPAREN
    (199) isset_variables -> . isset_variables COMMA variable
    (200) isset_variables -> . variable
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    IDENTIFIER      shift and go to state 177
    ARRAY           shift and go to state 178
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    isset_variables                shift and go to state 308
    variable                       shift and go to state 309
    base_variable_with_function_calls shift and go to state 57
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 188

    (201) expr -> EMPTY LPAREN . expr RPAREN
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 310
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 189

    (202) expr -> EVAL LPAREN . expr RPAREN
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 311
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 190

    (203) expr -> INCLUDE expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 203 (expr -> INCLUDE expr .)
    LBRACE          reduce using rule 203 (expr -> INCLUDE expr .)
    RPAREN          reduce using rule 203 (expr -> INCLUDE expr .)
    COMMA           reduce using rule 203 (expr -> INCLUDE expr .)
    DOUBLE_ARROW    reduce using rule 203 (expr -> INCLUDE expr .)
    RBRACKET        reduce using rule 203 (expr -> INCLUDE expr .)
    RBRACE          reduce using rule 203 (expr -> INCLUDE expr .)
    COLON           reduce using rule 203 (expr -> INCLUDE expr .)
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118

  ! BOOLEAN_AND     [ reduce using rule 203 (expr -> INCLUDE expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 203 (expr -> INCLUDE expr .) ]
  ! LOGICAL_AND     [ reduce using rule 203 (expr -> INCLUDE expr .) ]
  ! LOGICAL_OR      [ reduce using rule 203 (expr -> INCLUDE expr .) ]
  ! LOGICAL_XOR     [ reduce using rule 203 (expr -> INCLUDE expr .) ]
  ! AND             [ reduce using rule 203 (expr -> INCLUDE expr .) ]
  ! OR              [ reduce using rule 203 (expr -> INCLUDE expr .) ]
  ! XOR             [ reduce using rule 203 (expr -> INCLUDE expr .) ]
  ! CONCAT          [ reduce using rule 203 (expr -> INCLUDE expr .) ]
  ! PLUS            [ reduce using rule 203 (expr -> INCLUDE expr .) ]
  ! MINUS           [ reduce using rule 203 (expr -> INCLUDE expr .) ]
  ! MUL             [ reduce using rule 203 (expr -> INCLUDE expr .) ]
  ! DIV             [ reduce using rule 203 (expr -> INCLUDE expr .) ]
  ! SL              [ reduce using rule 203 (expr -> INCLUDE expr .) ]
  ! SR              [ reduce using rule 203 (expr -> INCLUDE expr .) ]
  ! MOD             [ reduce using rule 203 (expr -> INCLUDE expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 203 (expr -> INCLUDE expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 203 (expr -> INCLUDE expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 203 (expr -> INCLUDE expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 203 (expr -> INCLUDE expr .) ]
  ! LESS_THAN       [ reduce using rule 203 (expr -> INCLUDE expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 203 (expr -> INCLUDE expr .) ]
  ! GREATER_THAN    [ reduce using rule 203 (expr -> INCLUDE expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 203 (expr -> INCLUDE expr .) ]
  ! INSTANCEOF      [ reduce using rule 203 (expr -> INCLUDE expr .) ]
  ! QUESTION        [ reduce using rule 203 (expr -> INCLUDE expr .) ]
  ! LBRACE          [ shift and go to state 92 ]


state 191

    (204) expr -> INCLUDE_ONCE expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 204 (expr -> INCLUDE_ONCE expr .)
    LBRACE          reduce using rule 204 (expr -> INCLUDE_ONCE expr .)
    RPAREN          reduce using rule 204 (expr -> INCLUDE_ONCE expr .)
    COMMA           reduce using rule 204 (expr -> INCLUDE_ONCE expr .)
    DOUBLE_ARROW    reduce using rule 204 (expr -> INCLUDE_ONCE expr .)
    RBRACKET        reduce using rule 204 (expr -> INCLUDE_ONCE expr .)
    RBRACE          reduce using rule 204 (expr -> INCLUDE_ONCE expr .)
    COLON           reduce using rule 204 (expr -> INCLUDE_ONCE expr .)
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118

  ! BOOLEAN_AND     [ reduce using rule 204 (expr -> INCLUDE_ONCE expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 204 (expr -> INCLUDE_ONCE expr .) ]
  ! LOGICAL_AND     [ reduce using rule 204 (expr -> INCLUDE_ONCE expr .) ]
  ! LOGICAL_OR      [ reduce using rule 204 (expr -> INCLUDE_ONCE expr .) ]
  ! LOGICAL_XOR     [ reduce using rule 204 (expr -> INCLUDE_ONCE expr .) ]
  ! AND             [ reduce using rule 204 (expr -> INCLUDE_ONCE expr .) ]
  ! OR              [ reduce using rule 204 (expr -> INCLUDE_ONCE expr .) ]
  ! XOR             [ reduce using rule 204 (expr -> INCLUDE_ONCE expr .) ]
  ! CONCAT          [ reduce using rule 204 (expr -> INCLUDE_ONCE expr .) ]
  ! PLUS            [ reduce using rule 204 (expr -> INCLUDE_ONCE expr .) ]
  ! MINUS           [ reduce using rule 204 (expr -> INCLUDE_ONCE expr .) ]
  ! MUL             [ reduce using rule 204 (expr -> INCLUDE_ONCE expr .) ]
  ! DIV             [ reduce using rule 204 (expr -> INCLUDE_ONCE expr .) ]
  ! SL              [ reduce using rule 204 (expr -> INCLUDE_ONCE expr .) ]
  ! SR              [ reduce using rule 204 (expr -> INCLUDE_ONCE expr .) ]
  ! MOD             [ reduce using rule 204 (expr -> INCLUDE_ONCE expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 204 (expr -> INCLUDE_ONCE expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 204 (expr -> INCLUDE_ONCE expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 204 (expr -> INCLUDE_ONCE expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 204 (expr -> INCLUDE_ONCE expr .) ]
  ! LESS_THAN       [ reduce using rule 204 (expr -> INCLUDE_ONCE expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 204 (expr -> INCLUDE_ONCE expr .) ]
  ! GREATER_THAN    [ reduce using rule 204 (expr -> INCLUDE_ONCE expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 204 (expr -> INCLUDE_ONCE expr .) ]
  ! INSTANCEOF      [ reduce using rule 204 (expr -> INCLUDE_ONCE expr .) ]
  ! QUESTION        [ reduce using rule 204 (expr -> INCLUDE_ONCE expr .) ]
  ! LBRACE          [ shift and go to state 92 ]


state 192

    (205) expr -> REQUIRE expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 205 (expr -> REQUIRE expr .)
    LBRACE          reduce using rule 205 (expr -> REQUIRE expr .)
    RPAREN          reduce using rule 205 (expr -> REQUIRE expr .)
    COMMA           reduce using rule 205 (expr -> REQUIRE expr .)
    DOUBLE_ARROW    reduce using rule 205 (expr -> REQUIRE expr .)
    RBRACKET        reduce using rule 205 (expr -> REQUIRE expr .)
    RBRACE          reduce using rule 205 (expr -> REQUIRE expr .)
    COLON           reduce using rule 205 (expr -> REQUIRE expr .)
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118

  ! BOOLEAN_AND     [ reduce using rule 205 (expr -> REQUIRE expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 205 (expr -> REQUIRE expr .) ]
  ! LOGICAL_AND     [ reduce using rule 205 (expr -> REQUIRE expr .) ]
  ! LOGICAL_OR      [ reduce using rule 205 (expr -> REQUIRE expr .) ]
  ! LOGICAL_XOR     [ reduce using rule 205 (expr -> REQUIRE expr .) ]
  ! AND             [ reduce using rule 205 (expr -> REQUIRE expr .) ]
  ! OR              [ reduce using rule 205 (expr -> REQUIRE expr .) ]
  ! XOR             [ reduce using rule 205 (expr -> REQUIRE expr .) ]
  ! CONCAT          [ reduce using rule 205 (expr -> REQUIRE expr .) ]
  ! PLUS            [ reduce using rule 205 (expr -> REQUIRE expr .) ]
  ! MINUS           [ reduce using rule 205 (expr -> REQUIRE expr .) ]
  ! MUL             [ reduce using rule 205 (expr -> REQUIRE expr .) ]
  ! DIV             [ reduce using rule 205 (expr -> REQUIRE expr .) ]
  ! SL              [ reduce using rule 205 (expr -> REQUIRE expr .) ]
  ! SR              [ reduce using rule 205 (expr -> REQUIRE expr .) ]
  ! MOD             [ reduce using rule 205 (expr -> REQUIRE expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 205 (expr -> REQUIRE expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 205 (expr -> REQUIRE expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 205 (expr -> REQUIRE expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 205 (expr -> REQUIRE expr .) ]
  ! LESS_THAN       [ reduce using rule 205 (expr -> REQUIRE expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 205 (expr -> REQUIRE expr .) ]
  ! GREATER_THAN    [ reduce using rule 205 (expr -> REQUIRE expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 205 (expr -> REQUIRE expr .) ]
  ! INSTANCEOF      [ reduce using rule 205 (expr -> REQUIRE expr .) ]
  ! QUESTION        [ reduce using rule 205 (expr -> REQUIRE expr .) ]
  ! LBRACE          [ shift and go to state 92 ]


state 193

    (206) expr -> REQUIRE_ONCE expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 206 (expr -> REQUIRE_ONCE expr .)
    LBRACE          reduce using rule 206 (expr -> REQUIRE_ONCE expr .)
    RPAREN          reduce using rule 206 (expr -> REQUIRE_ONCE expr .)
    COMMA           reduce using rule 206 (expr -> REQUIRE_ONCE expr .)
    DOUBLE_ARROW    reduce using rule 206 (expr -> REQUIRE_ONCE expr .)
    RBRACKET        reduce using rule 206 (expr -> REQUIRE_ONCE expr .)
    RBRACE          reduce using rule 206 (expr -> REQUIRE_ONCE expr .)
    COLON           reduce using rule 206 (expr -> REQUIRE_ONCE expr .)
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118

  ! BOOLEAN_AND     [ reduce using rule 206 (expr -> REQUIRE_ONCE expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 206 (expr -> REQUIRE_ONCE expr .) ]
  ! LOGICAL_AND     [ reduce using rule 206 (expr -> REQUIRE_ONCE expr .) ]
  ! LOGICAL_OR      [ reduce using rule 206 (expr -> REQUIRE_ONCE expr .) ]
  ! LOGICAL_XOR     [ reduce using rule 206 (expr -> REQUIRE_ONCE expr .) ]
  ! AND             [ reduce using rule 206 (expr -> REQUIRE_ONCE expr .) ]
  ! OR              [ reduce using rule 206 (expr -> REQUIRE_ONCE expr .) ]
  ! XOR             [ reduce using rule 206 (expr -> REQUIRE_ONCE expr .) ]
  ! CONCAT          [ reduce using rule 206 (expr -> REQUIRE_ONCE expr .) ]
  ! PLUS            [ reduce using rule 206 (expr -> REQUIRE_ONCE expr .) ]
  ! MINUS           [ reduce using rule 206 (expr -> REQUIRE_ONCE expr .) ]
  ! MUL             [ reduce using rule 206 (expr -> REQUIRE_ONCE expr .) ]
  ! DIV             [ reduce using rule 206 (expr -> REQUIRE_ONCE expr .) ]
  ! SL              [ reduce using rule 206 (expr -> REQUIRE_ONCE expr .) ]
  ! SR              [ reduce using rule 206 (expr -> REQUIRE_ONCE expr .) ]
  ! MOD             [ reduce using rule 206 (expr -> REQUIRE_ONCE expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 206 (expr -> REQUIRE_ONCE expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 206 (expr -> REQUIRE_ONCE expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 206 (expr -> REQUIRE_ONCE expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 206 (expr -> REQUIRE_ONCE expr .) ]
  ! LESS_THAN       [ reduce using rule 206 (expr -> REQUIRE_ONCE expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 206 (expr -> REQUIRE_ONCE expr .) ]
  ! GREATER_THAN    [ reduce using rule 206 (expr -> REQUIRE_ONCE expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 206 (expr -> REQUIRE_ONCE expr .) ]
  ! INSTANCEOF      [ reduce using rule 206 (expr -> REQUIRE_ONCE expr .) ]
  ! QUESTION        [ reduce using rule 206 (expr -> REQUIRE_ONCE expr .) ]
  ! LBRACE          [ shift and go to state 92 ]


state 194

    (210) expr -> exit_or_die LPAREN . RPAREN
    (211) expr -> exit_or_die LPAREN . expr RPAREN
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    RPAREN          shift and go to state 312
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    exit_or_die                    shift and go to state 54
    expr                           shift and go to state 313
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 195

    (212) expr -> PRINT expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 212 (expr -> PRINT expr .)
    LBRACE          reduce using rule 212 (expr -> PRINT expr .)
    LOGICAL_AND     reduce using rule 212 (expr -> PRINT expr .)
    LOGICAL_OR      reduce using rule 212 (expr -> PRINT expr .)
    LOGICAL_XOR     reduce using rule 212 (expr -> PRINT expr .)
    RPAREN          reduce using rule 212 (expr -> PRINT expr .)
    COMMA           reduce using rule 212 (expr -> PRINT expr .)
    DOUBLE_ARROW    reduce using rule 212 (expr -> PRINT expr .)
    RBRACKET        reduce using rule 212 (expr -> PRINT expr .)
    RBRACE          reduce using rule 212 (expr -> PRINT expr .)
    COLON           reduce using rule 212 (expr -> PRINT expr .)
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118

  ! BOOLEAN_AND     [ reduce using rule 212 (expr -> PRINT expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 212 (expr -> PRINT expr .) ]
  ! AND             [ reduce using rule 212 (expr -> PRINT expr .) ]
  ! OR              [ reduce using rule 212 (expr -> PRINT expr .) ]
  ! XOR             [ reduce using rule 212 (expr -> PRINT expr .) ]
  ! CONCAT          [ reduce using rule 212 (expr -> PRINT expr .) ]
  ! PLUS            [ reduce using rule 212 (expr -> PRINT expr .) ]
  ! MINUS           [ reduce using rule 212 (expr -> PRINT expr .) ]
  ! MUL             [ reduce using rule 212 (expr -> PRINT expr .) ]
  ! DIV             [ reduce using rule 212 (expr -> PRINT expr .) ]
  ! SL              [ reduce using rule 212 (expr -> PRINT expr .) ]
  ! SR              [ reduce using rule 212 (expr -> PRINT expr .) ]
  ! MOD             [ reduce using rule 212 (expr -> PRINT expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 212 (expr -> PRINT expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 212 (expr -> PRINT expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 212 (expr -> PRINT expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 212 (expr -> PRINT expr .) ]
  ! LESS_THAN       [ reduce using rule 212 (expr -> PRINT expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 212 (expr -> PRINT expr .) ]
  ! GREATER_THAN    [ reduce using rule 212 (expr -> PRINT expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 212 (expr -> PRINT expr .) ]
  ! INSTANCEOF      [ reduce using rule 212 (expr -> PRINT expr .) ]
  ! QUESTION        [ reduce using rule 212 (expr -> PRINT expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]


state 196

    (213) expr -> AT expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 213 (expr -> AT expr .)
    LBRACE          reduce using rule 213 (expr -> AT expr .)
    BOOLEAN_AND     reduce using rule 213 (expr -> AT expr .)
    BOOLEAN_OR      reduce using rule 213 (expr -> AT expr .)
    LOGICAL_AND     reduce using rule 213 (expr -> AT expr .)
    LOGICAL_OR      reduce using rule 213 (expr -> AT expr .)
    LOGICAL_XOR     reduce using rule 213 (expr -> AT expr .)
    AND             reduce using rule 213 (expr -> AT expr .)
    OR              reduce using rule 213 (expr -> AT expr .)
    XOR             reduce using rule 213 (expr -> AT expr .)
    CONCAT          reduce using rule 213 (expr -> AT expr .)
    PLUS            reduce using rule 213 (expr -> AT expr .)
    MINUS           reduce using rule 213 (expr -> AT expr .)
    MUL             reduce using rule 213 (expr -> AT expr .)
    DIV             reduce using rule 213 (expr -> AT expr .)
    SL              reduce using rule 213 (expr -> AT expr .)
    SR              reduce using rule 213 (expr -> AT expr .)
    MOD             reduce using rule 213 (expr -> AT expr .)
    IS_IDENTICAL    reduce using rule 213 (expr -> AT expr .)
    IS_NOT_IDENTICAL reduce using rule 213 (expr -> AT expr .)
    IS_EQUAL_TO     reduce using rule 213 (expr -> AT expr .)
    IS_NOT_EQUAL    reduce using rule 213 (expr -> AT expr .)
    LESS_THAN       reduce using rule 213 (expr -> AT expr .)
    LESS_THAN_OR_EQUAL reduce using rule 213 (expr -> AT expr .)
    GREATER_THAN    reduce using rule 213 (expr -> AT expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 213 (expr -> AT expr .)
    INSTANCEOF      reduce using rule 213 (expr -> AT expr .)
    QUESTION        reduce using rule 213 (expr -> AT expr .)
    RPAREN          reduce using rule 213 (expr -> AT expr .)
    COMMA           reduce using rule 213 (expr -> AT expr .)
    DOUBLE_ARROW    reduce using rule 213 (expr -> AT expr .)
    RBRACKET        reduce using rule 213 (expr -> AT expr .)
    RBRACE          reduce using rule 213 (expr -> AT expr .)
    COLON           reduce using rule 213 (expr -> AT expr .)

  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! CONCAT          [ shift and go to state 101 ]
  ! PLUS            [ shift and go to state 102 ]
  ! MINUS           [ shift and go to state 103 ]
  ! MUL             [ shift and go to state 104 ]
  ! DIV             [ shift and go to state 105 ]
  ! SL              [ shift and go to state 106 ]
  ! SR              [ shift and go to state 107 ]
  ! MOD             [ shift and go to state 108 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! LESS_THAN       [ shift and go to state 113 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! GREATER_THAN    [ shift and go to state 115 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 116 ]
  ! INSTANCEOF      [ shift and go to state 117 ]
  ! QUESTION        [ shift and go to state 118 ]


state 197

    (217) scalar -> DOUBLE_QUOTE encaps_list . DOUBLE_QUOTE
    (279) encaps_list -> encaps_list . encaps_var
    (281) encaps_var -> . VARIABLE
    (282) encaps_var -> . VARIABLE LBRACKET encaps_var_offset RBRACKET
    (283) encaps_var -> . DOLLAR_OPEN_CURLY_BRACES expr RBRACE
    (284) encaps_var -> . DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME LBRACKET expr RBRACKET RBRACE
    (285) encaps_var -> . CURLY_OPEN variable RBRACE

    DOUBLE_QUOTE    shift and go to state 314
    VARIABLE        shift and go to state 316
    DOLLAR_OPEN_CURLY_BRACES shift and go to state 317
    CURLY_OPEN      shift and go to state 318

    encaps_var                     shift and go to state 315

state 198

    (280) encaps_list -> empty .

    DOUBLE_QUOTE    reduce using rule 280 (encaps_list -> empty .)
    VARIABLE        reduce using rule 280 (encaps_list -> empty .)
    DOLLAR_OPEN_CURLY_BRACES reduce using rule 280 (encaps_list -> empty .)
    CURLY_OPEN      reduce using rule 280 (encaps_list -> empty .)
    END_HEREDOC     reduce using rule 280 (encaps_list -> empty .)


state 199

    (221) scalar_heredoc -> START_HEREDOC encaps_list . END_HEREDOC
    (279) encaps_list -> encaps_list . encaps_var
    (281) encaps_var -> . VARIABLE
    (282) encaps_var -> . VARIABLE LBRACKET encaps_var_offset RBRACKET
    (283) encaps_var -> . DOLLAR_OPEN_CURLY_BRACES expr RBRACE
    (284) encaps_var -> . DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME LBRACKET expr RBRACKET RBRACE
    (285) encaps_var -> . CURLY_OPEN variable RBRACE

    END_HEREDOC     shift and go to state 319
    VARIABLE        shift and go to state 316
    DOLLAR_OPEN_CURLY_BRACES shift and go to state 317
    CURLY_OPEN      shift and go to state 318

    encaps_var                     shift and go to state 315

state 200

    (215) nowdoc -> START_NOWDOC nowdoc_text_content . END_NOWDOC
    (222) nowdoc_text_content -> nowdoc_text_content . ENCAPSED_AND_WHITESPACE

    END_NOWDOC      shift and go to state 320
    ENCAPSED_AND_WHITESPACE shift and go to state 321


state 201

    (223) nowdoc_text_content -> empty .

    END_NOWDOC      reduce using rule 223 (nowdoc_text_content -> empty .)
    ENCAPSED_AND_WHITESPACE reduce using rule 223 (nowdoc_text_content -> empty .)


state 202

    (106) function_call -> variable_without_objects LPAREN . nonempty_function_call_parameter_list RPAREN
    (107) function_call -> variable_without_objects LPAREN . empty RPAREN
    (133) nonempty_function_call_parameter_list -> . nonempty_function_call_parameter_list COMMA function_call_parameter
    (134) nonempty_function_call_parameter_list -> . function_call_parameter
    (289) empty -> .
    (135) function_call_parameter -> . expr
    (136) function_call_parameter -> . AND variable
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    RPAREN          reduce using rule 289 (empty -> .)
    AND             shift and go to state 170
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    variable_without_objects       shift and go to state 77
    nonempty_function_call_parameter_list shift and go to state 322
    empty                          shift and go to state 323
    function_call_parameter        shift and go to state 171
    expr                           shift and go to state 277
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 203

    (109) simple_indirect_reference -> DOLLAR simple_indirect_reference .

    EQUALS          reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    PLUS_EQUAL      reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    MINUS_EQUAL     reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    MUL_EQUAL       reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    DIV_EQUAL       reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    CONCAT_EQUAL    reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    MOD_EQUAL       reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    AND_EQUAL       reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    OR_EQUAL        reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    XOR_EQUAL       reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    SL_EQUAL        reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    SR_EQUAL        reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    INC             reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    DEC             reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    LBRACKET        reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    SEMI_COLON      reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    LBRACE          reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    BOOLEAN_AND     reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    BOOLEAN_OR      reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    LOGICAL_AND     reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    LOGICAL_OR      reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    LOGICAL_XOR     reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    AND             reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    OR              reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    XOR             reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    CONCAT          reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    PLUS            reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    MINUS           reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    MUL             reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    DIV             reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    SL              reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    SR              reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    MOD             reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    IS_IDENTICAL    reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    IS_NOT_IDENTICAL reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    IS_EQUAL_TO     reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    IS_NOT_EQUAL    reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    LESS_THAN       reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    LESS_THAN_OR_EQUAL reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    GREATER_THAN    reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    GRATER_THAN_OR_EQUAL reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    INSTANCEOF      reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    QUESTION        reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    LPAREN          reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    RPAREN          reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    COMMA           reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    DOUBLE_ARROW    reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    RBRACKET        reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    RBRACE          reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)
    COLON           reduce using rule 109 (simple_indirect_reference -> DOLLAR simple_indirect_reference .)


state 204

    (117) compound_variable -> DOLLAR LBRACE . expr RBRACE
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 324
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 205

    (112) reference_variable -> reference_variable LBRACKET . dim_offset RBRACKET
    (118) dim_offset -> . expr
    (119) dim_offset -> . empty
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (289) empty -> .
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    RBRACKET        reduce using rule 289 (empty -> .)
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    reference_variable             shift and go to state 79
    dim_offset                     shift and go to state 325
    expr                           shift and go to state 219
    empty                          shift and go to state 221
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    compound_variable              shift and go to state 80

state 206

    (113) reference_variable -> reference_variable LBRACE . expr RBRACE
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    reference_variable             shift and go to state 79
    expr                           shift and go to state 326
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    compound_variable              shift and go to state 80

state 207

    (6) top_statement -> HALT_COMPILER LPAREN RPAREN . SEMI_COLON

    SEMI_COLON      shift and go to state 327


state 208

    (214) expr -> LPAREN expr RPAREN .

    SEMI_COLON      reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    LBRACE          reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    BOOLEAN_AND     reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    BOOLEAN_OR      reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    LOGICAL_AND     reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    LOGICAL_OR      reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    LOGICAL_XOR     reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    AND             reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    OR              reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    XOR             reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    CONCAT          reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    MUL             reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    DIV             reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    SL              reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    SR              reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    MOD             reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    IS_IDENTICAL    reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    IS_EQUAL_TO     reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    IS_NOT_EQUAL    reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    LESS_THAN       reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    LESS_THAN_OR_EQUAL reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    GREATER_THAN    reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    GRATER_THAN_OR_EQUAL reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    INSTANCEOF      reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    QUESTION        reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    COMMA           reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    DOUBLE_ARROW    reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    RBRACE          reduce using rule 214 (expr -> LPAREN expr RPAREN .)
    COLON           reduce using rule 214 (expr -> LPAREN expr RPAREN .)


state 209

    (137) expr -> FUNCTION is_reference . LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE

    LPAREN          shift and go to state 273


state 210

    (7) top_statement -> CONST constant_declarations SEMI_COLON .

    HALT_COMPILER   reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    CONST           reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    LBRACE          reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    IF              reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    WHILE           reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    DO              reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    FOR             reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    SWITCH          reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    BREAK           reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    CONTINUE        reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    RETURN          reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    GLOBAL          reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    STATIC          reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    ECHO            reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    INLINE_HTML     reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    UNSET           reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    SEMI_COLON      reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    FUNCTION        reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    CLONE           reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    LIST            reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    ARRAY           reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    LBRACKET        reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    PLUS            reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    MINUS           reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    NOT             reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    INC             reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    DEC             reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    INT_CAST        reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    ARRAY_CAST      reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    STRING_CAST     reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    BOOL_CAST       reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    UNSET_CAST      reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    BINARY_CAST     reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    ISSET           reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    EMPTY           reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    EVAL            reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    INCLUDE         reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    REQUIRE         reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    PRINT           reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    AT              reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    LPAREN          reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    IDENTIFIER      reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    EXIT            reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    DIE             reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    INT_NUMBER      reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    FUNC_C          reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    METHOD_C        reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    LINE            reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    FILE            reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    DIR             reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    START_HEREDOC   reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    START_NOWDOC    reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    DOLLAR          reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    VARIABLE        reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)
    $end            reduce using rule 7 (top_statement -> CONST constant_declarations SEMI_COLON .)


state 211

    (8) constant_declarations -> constant_declarations COMMA . constant_declaration
    (10) constant_declaration -> . IDENTIFIER EQUALS static_expr

    IDENTIFIER      shift and go to state 87

    constant_declaration           shift and go to state 328

state 212

    (10) constant_declaration -> IDENTIFIER EQUALS . static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 330
    static_scalar                  shift and go to state 331
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 213

    (17) statement -> LBRACE inner_statement_list RBRACE .

    HALT_COMPILER   reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    CONST           reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    LBRACE          reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    IF              reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    WHILE           reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    DO              reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    FOR             reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    SWITCH          reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    BREAK           reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    CONTINUE        reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    RETURN          reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    GLOBAL          reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    STATIC          reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    ECHO            reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    INLINE_HTML     reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    UNSET           reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    SEMI_COLON      reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    FUNCTION        reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    CLONE           reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    LIST            reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    ARRAY           reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    LBRACKET        reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    PLUS            reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    MINUS           reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    NOT             reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    BOOLEAN_NOT     reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    INC             reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    DEC             reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    INT_CAST        reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    ARRAY_CAST      reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    STRING_CAST     reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    DOUBLE_CAST     reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    BOOL_CAST       reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    UNSET_CAST      reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    BINARY_CAST     reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    ISSET           reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    EMPTY           reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    EVAL            reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    INCLUDE         reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    INCLUDE_ONCE    reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    REQUIRE         reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    REQUIRE_ONCE    reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    PRINT           reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    AT              reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    LPAREN          reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    DOUBLE_QUOTE    reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    IDENTIFIER      reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    EXIT            reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    DIE             reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    INT_NUMBER      reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    FLOAT_NUMBER    reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    CONSTANT_ENCAPSED_STRING reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    FUNC_C          reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    METHOD_C        reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    LINE            reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    FILE            reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    DIR             reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    START_HEREDOC   reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    START_NOWDOC    reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    DOLLAR          reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    VARIABLE        reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    $end            reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    RBRACE          reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    YIELD           reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    ELSEIF          reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    ELSE            reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    ENDIF           reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    ENDWHILE        reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    ENDSWITCH       reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    ENDFOR          reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    CASE            reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)
    DEFAULT         reduce using rule 17 (statement -> LBRACE inner_statement_list RBRACE .)


state 214

    (11) inner_statement_list -> inner_statement_list inner_statement .

    RBRACE          reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    YIELD           reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    LBRACE          reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    IF              reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    WHILE           reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    DO              reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    FOR             reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    SWITCH          reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    BREAK           reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    CONTINUE        reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    RETURN          reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    GLOBAL          reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    STATIC          reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    ECHO            reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    INLINE_HTML     reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    UNSET           reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    SEMI_COLON      reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    FUNCTION        reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    CLONE           reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    LIST            reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    ARRAY           reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    LBRACKET        reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    PLUS            reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    MINUS           reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    NOT             reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    BOOLEAN_NOT     reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    INC             reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    DEC             reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    INT_CAST        reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    ARRAY_CAST      reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    STRING_CAST     reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    DOUBLE_CAST     reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    BOOL_CAST       reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    UNSET_CAST      reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    BINARY_CAST     reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    ISSET           reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    EMPTY           reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    EVAL            reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    INCLUDE         reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    INCLUDE_ONCE    reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    REQUIRE         reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    REQUIRE_ONCE    reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    PRINT           reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    AT              reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    LPAREN          reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    DOUBLE_QUOTE    reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    IDENTIFIER      reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    EXIT            reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    DIE             reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    INT_NUMBER      reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    FLOAT_NUMBER    reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    FUNC_C          reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    METHOD_C        reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    LINE            reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    FILE            reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    DIR             reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    START_HEREDOC   reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    START_NOWDOC    reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    DOLLAR          reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    VARIABLE        reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    ELSEIF          reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    ELSE            reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    ENDIF           reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    ENDWHILE        reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    ENDSWITCH       reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    ENDFOR          reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    CASE            reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)
    DEFAULT         reduce using rule 11 (inner_statement_list -> inner_statement_list inner_statement .)


state 215

    (13) inner_statement -> statement .

    RBRACE          reduce using rule 13 (inner_statement -> statement .)
    YIELD           reduce using rule 13 (inner_statement -> statement .)
    LBRACE          reduce using rule 13 (inner_statement -> statement .)
    IF              reduce using rule 13 (inner_statement -> statement .)
    WHILE           reduce using rule 13 (inner_statement -> statement .)
    DO              reduce using rule 13 (inner_statement -> statement .)
    FOR             reduce using rule 13 (inner_statement -> statement .)
    SWITCH          reduce using rule 13 (inner_statement -> statement .)
    BREAK           reduce using rule 13 (inner_statement -> statement .)
    CONTINUE        reduce using rule 13 (inner_statement -> statement .)
    RETURN          reduce using rule 13 (inner_statement -> statement .)
    GLOBAL          reduce using rule 13 (inner_statement -> statement .)
    STATIC          reduce using rule 13 (inner_statement -> statement .)
    ECHO            reduce using rule 13 (inner_statement -> statement .)
    INLINE_HTML     reduce using rule 13 (inner_statement -> statement .)
    UNSET           reduce using rule 13 (inner_statement -> statement .)
    SEMI_COLON      reduce using rule 13 (inner_statement -> statement .)
    FUNCTION        reduce using rule 13 (inner_statement -> statement .)
    CLONE           reduce using rule 13 (inner_statement -> statement .)
    LIST            reduce using rule 13 (inner_statement -> statement .)
    ARRAY           reduce using rule 13 (inner_statement -> statement .)
    LBRACKET        reduce using rule 13 (inner_statement -> statement .)
    PLUS            reduce using rule 13 (inner_statement -> statement .)
    MINUS           reduce using rule 13 (inner_statement -> statement .)
    NOT             reduce using rule 13 (inner_statement -> statement .)
    BOOLEAN_NOT     reduce using rule 13 (inner_statement -> statement .)
    INC             reduce using rule 13 (inner_statement -> statement .)
    DEC             reduce using rule 13 (inner_statement -> statement .)
    INT_CAST        reduce using rule 13 (inner_statement -> statement .)
    ARRAY_CAST      reduce using rule 13 (inner_statement -> statement .)
    STRING_CAST     reduce using rule 13 (inner_statement -> statement .)
    DOUBLE_CAST     reduce using rule 13 (inner_statement -> statement .)
    BOOL_CAST       reduce using rule 13 (inner_statement -> statement .)
    UNSET_CAST      reduce using rule 13 (inner_statement -> statement .)
    BINARY_CAST     reduce using rule 13 (inner_statement -> statement .)
    ISSET           reduce using rule 13 (inner_statement -> statement .)
    EMPTY           reduce using rule 13 (inner_statement -> statement .)
    EVAL            reduce using rule 13 (inner_statement -> statement .)
    INCLUDE         reduce using rule 13 (inner_statement -> statement .)
    INCLUDE_ONCE    reduce using rule 13 (inner_statement -> statement .)
    REQUIRE         reduce using rule 13 (inner_statement -> statement .)
    REQUIRE_ONCE    reduce using rule 13 (inner_statement -> statement .)
    PRINT           reduce using rule 13 (inner_statement -> statement .)
    AT              reduce using rule 13 (inner_statement -> statement .)
    LPAREN          reduce using rule 13 (inner_statement -> statement .)
    DOUBLE_QUOTE    reduce using rule 13 (inner_statement -> statement .)
    IDENTIFIER      reduce using rule 13 (inner_statement -> statement .)
    EXIT            reduce using rule 13 (inner_statement -> statement .)
    DIE             reduce using rule 13 (inner_statement -> statement .)
    INT_NUMBER      reduce using rule 13 (inner_statement -> statement .)
    FLOAT_NUMBER    reduce using rule 13 (inner_statement -> statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 13 (inner_statement -> statement .)
    FUNC_C          reduce using rule 13 (inner_statement -> statement .)
    METHOD_C        reduce using rule 13 (inner_statement -> statement .)
    LINE            reduce using rule 13 (inner_statement -> statement .)
    FILE            reduce using rule 13 (inner_statement -> statement .)
    DIR             reduce using rule 13 (inner_statement -> statement .)
    START_HEREDOC   reduce using rule 13 (inner_statement -> statement .)
    START_NOWDOC    reduce using rule 13 (inner_statement -> statement .)
    DOLLAR          reduce using rule 13 (inner_statement -> statement .)
    VARIABLE        reduce using rule 13 (inner_statement -> statement .)
    ELSEIF          reduce using rule 13 (inner_statement -> statement .)
    ELSE            reduce using rule 13 (inner_statement -> statement .)
    ENDIF           reduce using rule 13 (inner_statement -> statement .)
    ENDWHILE        reduce using rule 13 (inner_statement -> statement .)
    ENDSWITCH       reduce using rule 13 (inner_statement -> statement .)
    ENDFOR          reduce using rule 13 (inner_statement -> statement .)
    CASE            reduce using rule 13 (inner_statement -> statement .)
    DEFAULT         reduce using rule 13 (inner_statement -> statement .)


state 216

    (14) inner_statement -> function_declaration_statement .

    RBRACE          reduce using rule 14 (inner_statement -> function_declaration_statement .)
    YIELD           reduce using rule 14 (inner_statement -> function_declaration_statement .)
    LBRACE          reduce using rule 14 (inner_statement -> function_declaration_statement .)
    IF              reduce using rule 14 (inner_statement -> function_declaration_statement .)
    WHILE           reduce using rule 14 (inner_statement -> function_declaration_statement .)
    DO              reduce using rule 14 (inner_statement -> function_declaration_statement .)
    FOR             reduce using rule 14 (inner_statement -> function_declaration_statement .)
    SWITCH          reduce using rule 14 (inner_statement -> function_declaration_statement .)
    BREAK           reduce using rule 14 (inner_statement -> function_declaration_statement .)
    CONTINUE        reduce using rule 14 (inner_statement -> function_declaration_statement .)
    RETURN          reduce using rule 14 (inner_statement -> function_declaration_statement .)
    GLOBAL          reduce using rule 14 (inner_statement -> function_declaration_statement .)
    STATIC          reduce using rule 14 (inner_statement -> function_declaration_statement .)
    ECHO            reduce using rule 14 (inner_statement -> function_declaration_statement .)
    INLINE_HTML     reduce using rule 14 (inner_statement -> function_declaration_statement .)
    UNSET           reduce using rule 14 (inner_statement -> function_declaration_statement .)
    SEMI_COLON      reduce using rule 14 (inner_statement -> function_declaration_statement .)
    FUNCTION        reduce using rule 14 (inner_statement -> function_declaration_statement .)
    CLONE           reduce using rule 14 (inner_statement -> function_declaration_statement .)
    LIST            reduce using rule 14 (inner_statement -> function_declaration_statement .)
    ARRAY           reduce using rule 14 (inner_statement -> function_declaration_statement .)
    LBRACKET        reduce using rule 14 (inner_statement -> function_declaration_statement .)
    PLUS            reduce using rule 14 (inner_statement -> function_declaration_statement .)
    MINUS           reduce using rule 14 (inner_statement -> function_declaration_statement .)
    NOT             reduce using rule 14 (inner_statement -> function_declaration_statement .)
    BOOLEAN_NOT     reduce using rule 14 (inner_statement -> function_declaration_statement .)
    INC             reduce using rule 14 (inner_statement -> function_declaration_statement .)
    DEC             reduce using rule 14 (inner_statement -> function_declaration_statement .)
    INT_CAST        reduce using rule 14 (inner_statement -> function_declaration_statement .)
    ARRAY_CAST      reduce using rule 14 (inner_statement -> function_declaration_statement .)
    STRING_CAST     reduce using rule 14 (inner_statement -> function_declaration_statement .)
    DOUBLE_CAST     reduce using rule 14 (inner_statement -> function_declaration_statement .)
    BOOL_CAST       reduce using rule 14 (inner_statement -> function_declaration_statement .)
    UNSET_CAST      reduce using rule 14 (inner_statement -> function_declaration_statement .)
    BINARY_CAST     reduce using rule 14 (inner_statement -> function_declaration_statement .)
    ISSET           reduce using rule 14 (inner_statement -> function_declaration_statement .)
    EMPTY           reduce using rule 14 (inner_statement -> function_declaration_statement .)
    EVAL            reduce using rule 14 (inner_statement -> function_declaration_statement .)
    INCLUDE         reduce using rule 14 (inner_statement -> function_declaration_statement .)
    INCLUDE_ONCE    reduce using rule 14 (inner_statement -> function_declaration_statement .)
    REQUIRE         reduce using rule 14 (inner_statement -> function_declaration_statement .)
    REQUIRE_ONCE    reduce using rule 14 (inner_statement -> function_declaration_statement .)
    PRINT           reduce using rule 14 (inner_statement -> function_declaration_statement .)
    AT              reduce using rule 14 (inner_statement -> function_declaration_statement .)
    LPAREN          reduce using rule 14 (inner_statement -> function_declaration_statement .)
    DOUBLE_QUOTE    reduce using rule 14 (inner_statement -> function_declaration_statement .)
    IDENTIFIER      reduce using rule 14 (inner_statement -> function_declaration_statement .)
    EXIT            reduce using rule 14 (inner_statement -> function_declaration_statement .)
    DIE             reduce using rule 14 (inner_statement -> function_declaration_statement .)
    INT_NUMBER      reduce using rule 14 (inner_statement -> function_declaration_statement .)
    FLOAT_NUMBER    reduce using rule 14 (inner_statement -> function_declaration_statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 14 (inner_statement -> function_declaration_statement .)
    FUNC_C          reduce using rule 14 (inner_statement -> function_declaration_statement .)
    METHOD_C        reduce using rule 14 (inner_statement -> function_declaration_statement .)
    LINE            reduce using rule 14 (inner_statement -> function_declaration_statement .)
    FILE            reduce using rule 14 (inner_statement -> function_declaration_statement .)
    DIR             reduce using rule 14 (inner_statement -> function_declaration_statement .)
    START_HEREDOC   reduce using rule 14 (inner_statement -> function_declaration_statement .)
    START_NOWDOC    reduce using rule 14 (inner_statement -> function_declaration_statement .)
    DOLLAR          reduce using rule 14 (inner_statement -> function_declaration_statement .)
    VARIABLE        reduce using rule 14 (inner_statement -> function_declaration_statement .)
    ELSEIF          reduce using rule 14 (inner_statement -> function_declaration_statement .)
    ELSE            reduce using rule 14 (inner_statement -> function_declaration_statement .)
    ENDIF           reduce using rule 14 (inner_statement -> function_declaration_statement .)
    ENDWHILE        reduce using rule 14 (inner_statement -> function_declaration_statement .)
    ENDSWITCH       reduce using rule 14 (inner_statement -> function_declaration_statement .)
    ENDFOR          reduce using rule 14 (inner_statement -> function_declaration_statement .)
    CASE            reduce using rule 14 (inner_statement -> function_declaration_statement .)
    DEFAULT         reduce using rule 14 (inner_statement -> function_declaration_statement .)


state 217

    (15) inner_statement -> YIELD . SEMI_COLON
    (16) inner_statement -> YIELD . expr SEMI_COLON
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    SEMI_COLON      shift and go to state 342
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 343
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 218

    (18) statement -> IF LPAREN expr . RPAREN statement elseif_list else_single
    (19) statement -> IF LPAREN expr . RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    RPAREN          shift and go to state 344
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 219

    (118) dim_offset -> expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    RBRACE          reduce using rule 118 (dim_offset -> expr .)
    RBRACKET        reduce using rule 118 (dim_offset -> expr .)
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 220

    (115) expr -> expr LBRACE dim_offset . RBRACE

    RBRACE          shift and go to state 345


state 221

    (119) dim_offset -> empty .

    RBRACE          reduce using rule 119 (dim_offset -> empty .)
    RBRACKET        reduce using rule 119 (dim_offset -> empty .)


state 222

    (155) expr -> expr BOOLEAN_AND expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 155 (expr -> expr BOOLEAN_AND expr .)
    LBRACE          reduce using rule 155 (expr -> expr BOOLEAN_AND expr .)
    BOOLEAN_AND     reduce using rule 155 (expr -> expr BOOLEAN_AND expr .)
    BOOLEAN_OR      reduce using rule 155 (expr -> expr BOOLEAN_AND expr .)
    LOGICAL_AND     reduce using rule 155 (expr -> expr BOOLEAN_AND expr .)
    LOGICAL_OR      reduce using rule 155 (expr -> expr BOOLEAN_AND expr .)
    LOGICAL_XOR     reduce using rule 155 (expr -> expr BOOLEAN_AND expr .)
    QUESTION        reduce using rule 155 (expr -> expr BOOLEAN_AND expr .)
    RPAREN          reduce using rule 155 (expr -> expr BOOLEAN_AND expr .)
    COMMA           reduce using rule 155 (expr -> expr BOOLEAN_AND expr .)
    DOUBLE_ARROW    reduce using rule 155 (expr -> expr BOOLEAN_AND expr .)
    RBRACKET        reduce using rule 155 (expr -> expr BOOLEAN_AND expr .)
    RBRACE          reduce using rule 155 (expr -> expr BOOLEAN_AND expr .)
    COLON           reduce using rule 155 (expr -> expr BOOLEAN_AND expr .)
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117

  ! AND             [ reduce using rule 155 (expr -> expr BOOLEAN_AND expr .) ]
  ! OR              [ reduce using rule 155 (expr -> expr BOOLEAN_AND expr .) ]
  ! XOR             [ reduce using rule 155 (expr -> expr BOOLEAN_AND expr .) ]
  ! CONCAT          [ reduce using rule 155 (expr -> expr BOOLEAN_AND expr .) ]
  ! PLUS            [ reduce using rule 155 (expr -> expr BOOLEAN_AND expr .) ]
  ! MINUS           [ reduce using rule 155 (expr -> expr BOOLEAN_AND expr .) ]
  ! MUL             [ reduce using rule 155 (expr -> expr BOOLEAN_AND expr .) ]
  ! DIV             [ reduce using rule 155 (expr -> expr BOOLEAN_AND expr .) ]
  ! SL              [ reduce using rule 155 (expr -> expr BOOLEAN_AND expr .) ]
  ! SR              [ reduce using rule 155 (expr -> expr BOOLEAN_AND expr .) ]
  ! MOD             [ reduce using rule 155 (expr -> expr BOOLEAN_AND expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 155 (expr -> expr BOOLEAN_AND expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 155 (expr -> expr BOOLEAN_AND expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 155 (expr -> expr BOOLEAN_AND expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 155 (expr -> expr BOOLEAN_AND expr .) ]
  ! LESS_THAN       [ reduce using rule 155 (expr -> expr BOOLEAN_AND expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 155 (expr -> expr BOOLEAN_AND expr .) ]
  ! GREATER_THAN    [ reduce using rule 155 (expr -> expr BOOLEAN_AND expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 155 (expr -> expr BOOLEAN_AND expr .) ]
  ! INSTANCEOF      [ reduce using rule 155 (expr -> expr BOOLEAN_AND expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! QUESTION        [ shift and go to state 118 ]


state 223

    (156) expr -> expr BOOLEAN_OR expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 156 (expr -> expr BOOLEAN_OR expr .)
    LBRACE          reduce using rule 156 (expr -> expr BOOLEAN_OR expr .)
    BOOLEAN_OR      reduce using rule 156 (expr -> expr BOOLEAN_OR expr .)
    LOGICAL_AND     reduce using rule 156 (expr -> expr BOOLEAN_OR expr .)
    LOGICAL_OR      reduce using rule 156 (expr -> expr BOOLEAN_OR expr .)
    LOGICAL_XOR     reduce using rule 156 (expr -> expr BOOLEAN_OR expr .)
    QUESTION        reduce using rule 156 (expr -> expr BOOLEAN_OR expr .)
    RPAREN          reduce using rule 156 (expr -> expr BOOLEAN_OR expr .)
    COMMA           reduce using rule 156 (expr -> expr BOOLEAN_OR expr .)
    DOUBLE_ARROW    reduce using rule 156 (expr -> expr BOOLEAN_OR expr .)
    RBRACKET        reduce using rule 156 (expr -> expr BOOLEAN_OR expr .)
    RBRACE          reduce using rule 156 (expr -> expr BOOLEAN_OR expr .)
    COLON           reduce using rule 156 (expr -> expr BOOLEAN_OR expr .)
    BOOLEAN_AND     shift and go to state 93
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117

  ! BOOLEAN_AND     [ reduce using rule 156 (expr -> expr BOOLEAN_OR expr .) ]
  ! AND             [ reduce using rule 156 (expr -> expr BOOLEAN_OR expr .) ]
  ! OR              [ reduce using rule 156 (expr -> expr BOOLEAN_OR expr .) ]
  ! XOR             [ reduce using rule 156 (expr -> expr BOOLEAN_OR expr .) ]
  ! CONCAT          [ reduce using rule 156 (expr -> expr BOOLEAN_OR expr .) ]
  ! PLUS            [ reduce using rule 156 (expr -> expr BOOLEAN_OR expr .) ]
  ! MINUS           [ reduce using rule 156 (expr -> expr BOOLEAN_OR expr .) ]
  ! MUL             [ reduce using rule 156 (expr -> expr BOOLEAN_OR expr .) ]
  ! DIV             [ reduce using rule 156 (expr -> expr BOOLEAN_OR expr .) ]
  ! SL              [ reduce using rule 156 (expr -> expr BOOLEAN_OR expr .) ]
  ! SR              [ reduce using rule 156 (expr -> expr BOOLEAN_OR expr .) ]
  ! MOD             [ reduce using rule 156 (expr -> expr BOOLEAN_OR expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 156 (expr -> expr BOOLEAN_OR expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 156 (expr -> expr BOOLEAN_OR expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 156 (expr -> expr BOOLEAN_OR expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 156 (expr -> expr BOOLEAN_OR expr .) ]
  ! LESS_THAN       [ reduce using rule 156 (expr -> expr BOOLEAN_OR expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 156 (expr -> expr BOOLEAN_OR expr .) ]
  ! GREATER_THAN    [ reduce using rule 156 (expr -> expr BOOLEAN_OR expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 156 (expr -> expr BOOLEAN_OR expr .) ]
  ! INSTANCEOF      [ reduce using rule 156 (expr -> expr BOOLEAN_OR expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! QUESTION        [ shift and go to state 118 ]


state 224

    (157) expr -> expr LOGICAL_AND expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 157 (expr -> expr LOGICAL_AND expr .)
    LBRACE          reduce using rule 157 (expr -> expr LOGICAL_AND expr .)
    LOGICAL_AND     reduce using rule 157 (expr -> expr LOGICAL_AND expr .)
    LOGICAL_OR      reduce using rule 157 (expr -> expr LOGICAL_AND expr .)
    LOGICAL_XOR     reduce using rule 157 (expr -> expr LOGICAL_AND expr .)
    RPAREN          reduce using rule 157 (expr -> expr LOGICAL_AND expr .)
    COMMA           reduce using rule 157 (expr -> expr LOGICAL_AND expr .)
    DOUBLE_ARROW    reduce using rule 157 (expr -> expr LOGICAL_AND expr .)
    RBRACKET        reduce using rule 157 (expr -> expr LOGICAL_AND expr .)
    RBRACE          reduce using rule 157 (expr -> expr LOGICAL_AND expr .)
    COLON           reduce using rule 157 (expr -> expr LOGICAL_AND expr .)
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118

  ! BOOLEAN_AND     [ reduce using rule 157 (expr -> expr LOGICAL_AND expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 157 (expr -> expr LOGICAL_AND expr .) ]
  ! AND             [ reduce using rule 157 (expr -> expr LOGICAL_AND expr .) ]
  ! OR              [ reduce using rule 157 (expr -> expr LOGICAL_AND expr .) ]
  ! XOR             [ reduce using rule 157 (expr -> expr LOGICAL_AND expr .) ]
  ! CONCAT          [ reduce using rule 157 (expr -> expr LOGICAL_AND expr .) ]
  ! PLUS            [ reduce using rule 157 (expr -> expr LOGICAL_AND expr .) ]
  ! MINUS           [ reduce using rule 157 (expr -> expr LOGICAL_AND expr .) ]
  ! MUL             [ reduce using rule 157 (expr -> expr LOGICAL_AND expr .) ]
  ! DIV             [ reduce using rule 157 (expr -> expr LOGICAL_AND expr .) ]
  ! SL              [ reduce using rule 157 (expr -> expr LOGICAL_AND expr .) ]
  ! SR              [ reduce using rule 157 (expr -> expr LOGICAL_AND expr .) ]
  ! MOD             [ reduce using rule 157 (expr -> expr LOGICAL_AND expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 157 (expr -> expr LOGICAL_AND expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 157 (expr -> expr LOGICAL_AND expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 157 (expr -> expr LOGICAL_AND expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 157 (expr -> expr LOGICAL_AND expr .) ]
  ! LESS_THAN       [ reduce using rule 157 (expr -> expr LOGICAL_AND expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 157 (expr -> expr LOGICAL_AND expr .) ]
  ! GREATER_THAN    [ reduce using rule 157 (expr -> expr LOGICAL_AND expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 157 (expr -> expr LOGICAL_AND expr .) ]
  ! INSTANCEOF      [ reduce using rule 157 (expr -> expr LOGICAL_AND expr .) ]
  ! QUESTION        [ reduce using rule 157 (expr -> expr LOGICAL_AND expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]


state 225

    (158) expr -> expr LOGICAL_OR expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 158 (expr -> expr LOGICAL_OR expr .)
    LBRACE          reduce using rule 158 (expr -> expr LOGICAL_OR expr .)
    LOGICAL_OR      reduce using rule 158 (expr -> expr LOGICAL_OR expr .)
    RPAREN          reduce using rule 158 (expr -> expr LOGICAL_OR expr .)
    COMMA           reduce using rule 158 (expr -> expr LOGICAL_OR expr .)
    DOUBLE_ARROW    reduce using rule 158 (expr -> expr LOGICAL_OR expr .)
    RBRACKET        reduce using rule 158 (expr -> expr LOGICAL_OR expr .)
    RBRACE          reduce using rule 158 (expr -> expr LOGICAL_OR expr .)
    COLON           reduce using rule 158 (expr -> expr LOGICAL_OR expr .)
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118

  ! BOOLEAN_AND     [ reduce using rule 158 (expr -> expr LOGICAL_OR expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 158 (expr -> expr LOGICAL_OR expr .) ]
  ! LOGICAL_AND     [ reduce using rule 158 (expr -> expr LOGICAL_OR expr .) ]
  ! LOGICAL_XOR     [ reduce using rule 158 (expr -> expr LOGICAL_OR expr .) ]
  ! AND             [ reduce using rule 158 (expr -> expr LOGICAL_OR expr .) ]
  ! OR              [ reduce using rule 158 (expr -> expr LOGICAL_OR expr .) ]
  ! XOR             [ reduce using rule 158 (expr -> expr LOGICAL_OR expr .) ]
  ! CONCAT          [ reduce using rule 158 (expr -> expr LOGICAL_OR expr .) ]
  ! PLUS            [ reduce using rule 158 (expr -> expr LOGICAL_OR expr .) ]
  ! MINUS           [ reduce using rule 158 (expr -> expr LOGICAL_OR expr .) ]
  ! MUL             [ reduce using rule 158 (expr -> expr LOGICAL_OR expr .) ]
  ! DIV             [ reduce using rule 158 (expr -> expr LOGICAL_OR expr .) ]
  ! SL              [ reduce using rule 158 (expr -> expr LOGICAL_OR expr .) ]
  ! SR              [ reduce using rule 158 (expr -> expr LOGICAL_OR expr .) ]
  ! MOD             [ reduce using rule 158 (expr -> expr LOGICAL_OR expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 158 (expr -> expr LOGICAL_OR expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 158 (expr -> expr LOGICAL_OR expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 158 (expr -> expr LOGICAL_OR expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 158 (expr -> expr LOGICAL_OR expr .) ]
  ! LESS_THAN       [ reduce using rule 158 (expr -> expr LOGICAL_OR expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 158 (expr -> expr LOGICAL_OR expr .) ]
  ! GREATER_THAN    [ reduce using rule 158 (expr -> expr LOGICAL_OR expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 158 (expr -> expr LOGICAL_OR expr .) ]
  ! INSTANCEOF      [ reduce using rule 158 (expr -> expr LOGICAL_OR expr .) ]
  ! QUESTION        [ reduce using rule 158 (expr -> expr LOGICAL_OR expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]


state 226

    (159) expr -> expr LOGICAL_XOR expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 159 (expr -> expr LOGICAL_XOR expr .)
    LBRACE          reduce using rule 159 (expr -> expr LOGICAL_XOR expr .)
    LOGICAL_OR      reduce using rule 159 (expr -> expr LOGICAL_XOR expr .)
    LOGICAL_XOR     reduce using rule 159 (expr -> expr LOGICAL_XOR expr .)
    RPAREN          reduce using rule 159 (expr -> expr LOGICAL_XOR expr .)
    COMMA           reduce using rule 159 (expr -> expr LOGICAL_XOR expr .)
    DOUBLE_ARROW    reduce using rule 159 (expr -> expr LOGICAL_XOR expr .)
    RBRACKET        reduce using rule 159 (expr -> expr LOGICAL_XOR expr .)
    RBRACE          reduce using rule 159 (expr -> expr LOGICAL_XOR expr .)
    COLON           reduce using rule 159 (expr -> expr LOGICAL_XOR expr .)
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118

  ! BOOLEAN_AND     [ reduce using rule 159 (expr -> expr LOGICAL_XOR expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 159 (expr -> expr LOGICAL_XOR expr .) ]
  ! LOGICAL_AND     [ reduce using rule 159 (expr -> expr LOGICAL_XOR expr .) ]
  ! AND             [ reduce using rule 159 (expr -> expr LOGICAL_XOR expr .) ]
  ! OR              [ reduce using rule 159 (expr -> expr LOGICAL_XOR expr .) ]
  ! XOR             [ reduce using rule 159 (expr -> expr LOGICAL_XOR expr .) ]
  ! CONCAT          [ reduce using rule 159 (expr -> expr LOGICAL_XOR expr .) ]
  ! PLUS            [ reduce using rule 159 (expr -> expr LOGICAL_XOR expr .) ]
  ! MINUS           [ reduce using rule 159 (expr -> expr LOGICAL_XOR expr .) ]
  ! MUL             [ reduce using rule 159 (expr -> expr LOGICAL_XOR expr .) ]
  ! DIV             [ reduce using rule 159 (expr -> expr LOGICAL_XOR expr .) ]
  ! SL              [ reduce using rule 159 (expr -> expr LOGICAL_XOR expr .) ]
  ! SR              [ reduce using rule 159 (expr -> expr LOGICAL_XOR expr .) ]
  ! MOD             [ reduce using rule 159 (expr -> expr LOGICAL_XOR expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 159 (expr -> expr LOGICAL_XOR expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 159 (expr -> expr LOGICAL_XOR expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 159 (expr -> expr LOGICAL_XOR expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 159 (expr -> expr LOGICAL_XOR expr .) ]
  ! LESS_THAN       [ reduce using rule 159 (expr -> expr LOGICAL_XOR expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 159 (expr -> expr LOGICAL_XOR expr .) ]
  ! GREATER_THAN    [ reduce using rule 159 (expr -> expr LOGICAL_XOR expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 159 (expr -> expr LOGICAL_XOR expr .) ]
  ! INSTANCEOF      [ reduce using rule 159 (expr -> expr LOGICAL_XOR expr .) ]
  ! QUESTION        [ reduce using rule 159 (expr -> expr LOGICAL_XOR expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]


state 227

    (160) expr -> expr AND expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 160 (expr -> expr AND expr .)
    LBRACE          reduce using rule 160 (expr -> expr AND expr .)
    BOOLEAN_AND     reduce using rule 160 (expr -> expr AND expr .)
    BOOLEAN_OR      reduce using rule 160 (expr -> expr AND expr .)
    LOGICAL_AND     reduce using rule 160 (expr -> expr AND expr .)
    LOGICAL_OR      reduce using rule 160 (expr -> expr AND expr .)
    LOGICAL_XOR     reduce using rule 160 (expr -> expr AND expr .)
    AND             reduce using rule 160 (expr -> expr AND expr .)
    OR              reduce using rule 160 (expr -> expr AND expr .)
    XOR             reduce using rule 160 (expr -> expr AND expr .)
    QUESTION        reduce using rule 160 (expr -> expr AND expr .)
    RPAREN          reduce using rule 160 (expr -> expr AND expr .)
    COMMA           reduce using rule 160 (expr -> expr AND expr .)
    DOUBLE_ARROW    reduce using rule 160 (expr -> expr AND expr .)
    RBRACKET        reduce using rule 160 (expr -> expr AND expr .)
    RBRACE          reduce using rule 160 (expr -> expr AND expr .)
    COLON           reduce using rule 160 (expr -> expr AND expr .)
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117

  ! CONCAT          [ reduce using rule 160 (expr -> expr AND expr .) ]
  ! PLUS            [ reduce using rule 160 (expr -> expr AND expr .) ]
  ! MINUS           [ reduce using rule 160 (expr -> expr AND expr .) ]
  ! MUL             [ reduce using rule 160 (expr -> expr AND expr .) ]
  ! DIV             [ reduce using rule 160 (expr -> expr AND expr .) ]
  ! SL              [ reduce using rule 160 (expr -> expr AND expr .) ]
  ! SR              [ reduce using rule 160 (expr -> expr AND expr .) ]
  ! MOD             [ reduce using rule 160 (expr -> expr AND expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 160 (expr -> expr AND expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 160 (expr -> expr AND expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 160 (expr -> expr AND expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 160 (expr -> expr AND expr .) ]
  ! LESS_THAN       [ reduce using rule 160 (expr -> expr AND expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 160 (expr -> expr AND expr .) ]
  ! GREATER_THAN    [ reduce using rule 160 (expr -> expr AND expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 160 (expr -> expr AND expr .) ]
  ! INSTANCEOF      [ reduce using rule 160 (expr -> expr AND expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! QUESTION        [ shift and go to state 118 ]


state 228

    (161) expr -> expr OR expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 161 (expr -> expr OR expr .)
    LBRACE          reduce using rule 161 (expr -> expr OR expr .)
    BOOLEAN_AND     reduce using rule 161 (expr -> expr OR expr .)
    BOOLEAN_OR      reduce using rule 161 (expr -> expr OR expr .)
    LOGICAL_AND     reduce using rule 161 (expr -> expr OR expr .)
    LOGICAL_OR      reduce using rule 161 (expr -> expr OR expr .)
    LOGICAL_XOR     reduce using rule 161 (expr -> expr OR expr .)
    OR              reduce using rule 161 (expr -> expr OR expr .)
    QUESTION        reduce using rule 161 (expr -> expr OR expr .)
    RPAREN          reduce using rule 161 (expr -> expr OR expr .)
    COMMA           reduce using rule 161 (expr -> expr OR expr .)
    DOUBLE_ARROW    reduce using rule 161 (expr -> expr OR expr .)
    RBRACKET        reduce using rule 161 (expr -> expr OR expr .)
    RBRACE          reduce using rule 161 (expr -> expr OR expr .)
    COLON           reduce using rule 161 (expr -> expr OR expr .)
    AND             shift and go to state 98
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117

  ! AND             [ reduce using rule 161 (expr -> expr OR expr .) ]
  ! XOR             [ reduce using rule 161 (expr -> expr OR expr .) ]
  ! CONCAT          [ reduce using rule 161 (expr -> expr OR expr .) ]
  ! PLUS            [ reduce using rule 161 (expr -> expr OR expr .) ]
  ! MINUS           [ reduce using rule 161 (expr -> expr OR expr .) ]
  ! MUL             [ reduce using rule 161 (expr -> expr OR expr .) ]
  ! DIV             [ reduce using rule 161 (expr -> expr OR expr .) ]
  ! SL              [ reduce using rule 161 (expr -> expr OR expr .) ]
  ! SR              [ reduce using rule 161 (expr -> expr OR expr .) ]
  ! MOD             [ reduce using rule 161 (expr -> expr OR expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 161 (expr -> expr OR expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 161 (expr -> expr OR expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 161 (expr -> expr OR expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 161 (expr -> expr OR expr .) ]
  ! LESS_THAN       [ reduce using rule 161 (expr -> expr OR expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 161 (expr -> expr OR expr .) ]
  ! GREATER_THAN    [ reduce using rule 161 (expr -> expr OR expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 161 (expr -> expr OR expr .) ]
  ! INSTANCEOF      [ reduce using rule 161 (expr -> expr OR expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! OR              [ shift and go to state 99 ]
  ! QUESTION        [ shift and go to state 118 ]


state 229

    (162) expr -> expr XOR expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 162 (expr -> expr XOR expr .)
    LBRACE          reduce using rule 162 (expr -> expr XOR expr .)
    BOOLEAN_AND     reduce using rule 162 (expr -> expr XOR expr .)
    BOOLEAN_OR      reduce using rule 162 (expr -> expr XOR expr .)
    LOGICAL_AND     reduce using rule 162 (expr -> expr XOR expr .)
    LOGICAL_OR      reduce using rule 162 (expr -> expr XOR expr .)
    LOGICAL_XOR     reduce using rule 162 (expr -> expr XOR expr .)
    OR              reduce using rule 162 (expr -> expr XOR expr .)
    XOR             reduce using rule 162 (expr -> expr XOR expr .)
    QUESTION        reduce using rule 162 (expr -> expr XOR expr .)
    RPAREN          reduce using rule 162 (expr -> expr XOR expr .)
    COMMA           reduce using rule 162 (expr -> expr XOR expr .)
    DOUBLE_ARROW    reduce using rule 162 (expr -> expr XOR expr .)
    RBRACKET        reduce using rule 162 (expr -> expr XOR expr .)
    RBRACE          reduce using rule 162 (expr -> expr XOR expr .)
    COLON           reduce using rule 162 (expr -> expr XOR expr .)
    AND             shift and go to state 98
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117

  ! AND             [ reduce using rule 162 (expr -> expr XOR expr .) ]
  ! CONCAT          [ reduce using rule 162 (expr -> expr XOR expr .) ]
  ! PLUS            [ reduce using rule 162 (expr -> expr XOR expr .) ]
  ! MINUS           [ reduce using rule 162 (expr -> expr XOR expr .) ]
  ! MUL             [ reduce using rule 162 (expr -> expr XOR expr .) ]
  ! DIV             [ reduce using rule 162 (expr -> expr XOR expr .) ]
  ! SL              [ reduce using rule 162 (expr -> expr XOR expr .) ]
  ! SR              [ reduce using rule 162 (expr -> expr XOR expr .) ]
  ! MOD             [ reduce using rule 162 (expr -> expr XOR expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 162 (expr -> expr XOR expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 162 (expr -> expr XOR expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 162 (expr -> expr XOR expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 162 (expr -> expr XOR expr .) ]
  ! LESS_THAN       [ reduce using rule 162 (expr -> expr XOR expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 162 (expr -> expr XOR expr .) ]
  ! GREATER_THAN    [ reduce using rule 162 (expr -> expr XOR expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 162 (expr -> expr XOR expr .) ]
  ! INSTANCEOF      [ reduce using rule 162 (expr -> expr XOR expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! QUESTION        [ shift and go to state 118 ]


state 230

    (163) expr -> expr CONCAT expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 163 (expr -> expr CONCAT expr .)
    LBRACE          reduce using rule 163 (expr -> expr CONCAT expr .)
    BOOLEAN_AND     reduce using rule 163 (expr -> expr CONCAT expr .)
    BOOLEAN_OR      reduce using rule 163 (expr -> expr CONCAT expr .)
    LOGICAL_AND     reduce using rule 163 (expr -> expr CONCAT expr .)
    LOGICAL_OR      reduce using rule 163 (expr -> expr CONCAT expr .)
    LOGICAL_XOR     reduce using rule 163 (expr -> expr CONCAT expr .)
    AND             reduce using rule 163 (expr -> expr CONCAT expr .)
    OR              reduce using rule 163 (expr -> expr CONCAT expr .)
    XOR             reduce using rule 163 (expr -> expr CONCAT expr .)
    CONCAT          reduce using rule 163 (expr -> expr CONCAT expr .)
    PLUS            reduce using rule 163 (expr -> expr CONCAT expr .)
    MINUS           reduce using rule 163 (expr -> expr CONCAT expr .)
    SL              reduce using rule 163 (expr -> expr CONCAT expr .)
    SR              reduce using rule 163 (expr -> expr CONCAT expr .)
    IS_IDENTICAL    reduce using rule 163 (expr -> expr CONCAT expr .)
    IS_NOT_IDENTICAL reduce using rule 163 (expr -> expr CONCAT expr .)
    IS_EQUAL_TO     reduce using rule 163 (expr -> expr CONCAT expr .)
    IS_NOT_EQUAL    reduce using rule 163 (expr -> expr CONCAT expr .)
    LESS_THAN       reduce using rule 163 (expr -> expr CONCAT expr .)
    LESS_THAN_OR_EQUAL reduce using rule 163 (expr -> expr CONCAT expr .)
    GREATER_THAN    reduce using rule 163 (expr -> expr CONCAT expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 163 (expr -> expr CONCAT expr .)
    QUESTION        reduce using rule 163 (expr -> expr CONCAT expr .)
    RPAREN          reduce using rule 163 (expr -> expr CONCAT expr .)
    COMMA           reduce using rule 163 (expr -> expr CONCAT expr .)
    DOUBLE_ARROW    reduce using rule 163 (expr -> expr CONCAT expr .)
    RBRACKET        reduce using rule 163 (expr -> expr CONCAT expr .)
    RBRACE          reduce using rule 163 (expr -> expr CONCAT expr .)
    COLON           reduce using rule 163 (expr -> expr CONCAT expr .)
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    MOD             shift and go to state 108
    INSTANCEOF      shift and go to state 117

  ! MUL             [ reduce using rule 163 (expr -> expr CONCAT expr .) ]
  ! DIV             [ reduce using rule 163 (expr -> expr CONCAT expr .) ]
  ! MOD             [ reduce using rule 163 (expr -> expr CONCAT expr .) ]
  ! INSTANCEOF      [ reduce using rule 163 (expr -> expr CONCAT expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! CONCAT          [ shift and go to state 101 ]
  ! PLUS            [ shift and go to state 102 ]
  ! MINUS           [ shift and go to state 103 ]
  ! SL              [ shift and go to state 106 ]
  ! SR              [ shift and go to state 107 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! LESS_THAN       [ shift and go to state 113 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! GREATER_THAN    [ shift and go to state 115 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 118 ]


state 231

    (164) expr -> expr PLUS expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 164 (expr -> expr PLUS expr .)
    LBRACE          reduce using rule 164 (expr -> expr PLUS expr .)
    BOOLEAN_AND     reduce using rule 164 (expr -> expr PLUS expr .)
    BOOLEAN_OR      reduce using rule 164 (expr -> expr PLUS expr .)
    LOGICAL_AND     reduce using rule 164 (expr -> expr PLUS expr .)
    LOGICAL_OR      reduce using rule 164 (expr -> expr PLUS expr .)
    LOGICAL_XOR     reduce using rule 164 (expr -> expr PLUS expr .)
    AND             reduce using rule 164 (expr -> expr PLUS expr .)
    OR              reduce using rule 164 (expr -> expr PLUS expr .)
    XOR             reduce using rule 164 (expr -> expr PLUS expr .)
    CONCAT          reduce using rule 164 (expr -> expr PLUS expr .)
    PLUS            reduce using rule 164 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 164 (expr -> expr PLUS expr .)
    SL              reduce using rule 164 (expr -> expr PLUS expr .)
    SR              reduce using rule 164 (expr -> expr PLUS expr .)
    IS_IDENTICAL    reduce using rule 164 (expr -> expr PLUS expr .)
    IS_NOT_IDENTICAL reduce using rule 164 (expr -> expr PLUS expr .)
    IS_EQUAL_TO     reduce using rule 164 (expr -> expr PLUS expr .)
    IS_NOT_EQUAL    reduce using rule 164 (expr -> expr PLUS expr .)
    LESS_THAN       reduce using rule 164 (expr -> expr PLUS expr .)
    LESS_THAN_OR_EQUAL reduce using rule 164 (expr -> expr PLUS expr .)
    GREATER_THAN    reduce using rule 164 (expr -> expr PLUS expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 164 (expr -> expr PLUS expr .)
    QUESTION        reduce using rule 164 (expr -> expr PLUS expr .)
    RPAREN          reduce using rule 164 (expr -> expr PLUS expr .)
    COMMA           reduce using rule 164 (expr -> expr PLUS expr .)
    DOUBLE_ARROW    reduce using rule 164 (expr -> expr PLUS expr .)
    RBRACKET        reduce using rule 164 (expr -> expr PLUS expr .)
    RBRACE          reduce using rule 164 (expr -> expr PLUS expr .)
    COLON           reduce using rule 164 (expr -> expr PLUS expr .)
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    MOD             shift and go to state 108
    INSTANCEOF      shift and go to state 117

  ! MUL             [ reduce using rule 164 (expr -> expr PLUS expr .) ]
  ! DIV             [ reduce using rule 164 (expr -> expr PLUS expr .) ]
  ! MOD             [ reduce using rule 164 (expr -> expr PLUS expr .) ]
  ! INSTANCEOF      [ reduce using rule 164 (expr -> expr PLUS expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! CONCAT          [ shift and go to state 101 ]
  ! PLUS            [ shift and go to state 102 ]
  ! MINUS           [ shift and go to state 103 ]
  ! SL              [ shift and go to state 106 ]
  ! SR              [ shift and go to state 107 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! LESS_THAN       [ shift and go to state 113 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! GREATER_THAN    [ shift and go to state 115 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 118 ]


state 232

    (165) expr -> expr MINUS expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 165 (expr -> expr MINUS expr .)
    LBRACE          reduce using rule 165 (expr -> expr MINUS expr .)
    BOOLEAN_AND     reduce using rule 165 (expr -> expr MINUS expr .)
    BOOLEAN_OR      reduce using rule 165 (expr -> expr MINUS expr .)
    LOGICAL_AND     reduce using rule 165 (expr -> expr MINUS expr .)
    LOGICAL_OR      reduce using rule 165 (expr -> expr MINUS expr .)
    LOGICAL_XOR     reduce using rule 165 (expr -> expr MINUS expr .)
    AND             reduce using rule 165 (expr -> expr MINUS expr .)
    OR              reduce using rule 165 (expr -> expr MINUS expr .)
    XOR             reduce using rule 165 (expr -> expr MINUS expr .)
    CONCAT          reduce using rule 165 (expr -> expr MINUS expr .)
    PLUS            reduce using rule 165 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 165 (expr -> expr MINUS expr .)
    SL              reduce using rule 165 (expr -> expr MINUS expr .)
    SR              reduce using rule 165 (expr -> expr MINUS expr .)
    IS_IDENTICAL    reduce using rule 165 (expr -> expr MINUS expr .)
    IS_NOT_IDENTICAL reduce using rule 165 (expr -> expr MINUS expr .)
    IS_EQUAL_TO     reduce using rule 165 (expr -> expr MINUS expr .)
    IS_NOT_EQUAL    reduce using rule 165 (expr -> expr MINUS expr .)
    LESS_THAN       reduce using rule 165 (expr -> expr MINUS expr .)
    LESS_THAN_OR_EQUAL reduce using rule 165 (expr -> expr MINUS expr .)
    GREATER_THAN    reduce using rule 165 (expr -> expr MINUS expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 165 (expr -> expr MINUS expr .)
    QUESTION        reduce using rule 165 (expr -> expr MINUS expr .)
    RPAREN          reduce using rule 165 (expr -> expr MINUS expr .)
    COMMA           reduce using rule 165 (expr -> expr MINUS expr .)
    DOUBLE_ARROW    reduce using rule 165 (expr -> expr MINUS expr .)
    RBRACKET        reduce using rule 165 (expr -> expr MINUS expr .)
    RBRACE          reduce using rule 165 (expr -> expr MINUS expr .)
    COLON           reduce using rule 165 (expr -> expr MINUS expr .)
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    MOD             shift and go to state 108
    INSTANCEOF      shift and go to state 117

  ! MUL             [ reduce using rule 165 (expr -> expr MINUS expr .) ]
  ! DIV             [ reduce using rule 165 (expr -> expr MINUS expr .) ]
  ! MOD             [ reduce using rule 165 (expr -> expr MINUS expr .) ]
  ! INSTANCEOF      [ reduce using rule 165 (expr -> expr MINUS expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! CONCAT          [ shift and go to state 101 ]
  ! PLUS            [ shift and go to state 102 ]
  ! MINUS           [ shift and go to state 103 ]
  ! SL              [ shift and go to state 106 ]
  ! SR              [ shift and go to state 107 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! LESS_THAN       [ shift and go to state 113 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! GREATER_THAN    [ shift and go to state 115 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 118 ]


state 233

    (166) expr -> expr MUL expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 166 (expr -> expr MUL expr .)
    LBRACE          reduce using rule 166 (expr -> expr MUL expr .)
    BOOLEAN_AND     reduce using rule 166 (expr -> expr MUL expr .)
    BOOLEAN_OR      reduce using rule 166 (expr -> expr MUL expr .)
    LOGICAL_AND     reduce using rule 166 (expr -> expr MUL expr .)
    LOGICAL_OR      reduce using rule 166 (expr -> expr MUL expr .)
    LOGICAL_XOR     reduce using rule 166 (expr -> expr MUL expr .)
    AND             reduce using rule 166 (expr -> expr MUL expr .)
    OR              reduce using rule 166 (expr -> expr MUL expr .)
    XOR             reduce using rule 166 (expr -> expr MUL expr .)
    CONCAT          reduce using rule 166 (expr -> expr MUL expr .)
    PLUS            reduce using rule 166 (expr -> expr MUL expr .)
    MINUS           reduce using rule 166 (expr -> expr MUL expr .)
    MUL             reduce using rule 166 (expr -> expr MUL expr .)
    DIV             reduce using rule 166 (expr -> expr MUL expr .)
    SL              reduce using rule 166 (expr -> expr MUL expr .)
    SR              reduce using rule 166 (expr -> expr MUL expr .)
    MOD             reduce using rule 166 (expr -> expr MUL expr .)
    IS_IDENTICAL    reduce using rule 166 (expr -> expr MUL expr .)
    IS_NOT_IDENTICAL reduce using rule 166 (expr -> expr MUL expr .)
    IS_EQUAL_TO     reduce using rule 166 (expr -> expr MUL expr .)
    IS_NOT_EQUAL    reduce using rule 166 (expr -> expr MUL expr .)
    LESS_THAN       reduce using rule 166 (expr -> expr MUL expr .)
    LESS_THAN_OR_EQUAL reduce using rule 166 (expr -> expr MUL expr .)
    GREATER_THAN    reduce using rule 166 (expr -> expr MUL expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 166 (expr -> expr MUL expr .)
    QUESTION        reduce using rule 166 (expr -> expr MUL expr .)
    RPAREN          reduce using rule 166 (expr -> expr MUL expr .)
    COMMA           reduce using rule 166 (expr -> expr MUL expr .)
    DOUBLE_ARROW    reduce using rule 166 (expr -> expr MUL expr .)
    RBRACKET        reduce using rule 166 (expr -> expr MUL expr .)
    RBRACE          reduce using rule 166 (expr -> expr MUL expr .)
    COLON           reduce using rule 166 (expr -> expr MUL expr .)
    INSTANCEOF      shift and go to state 117

  ! INSTANCEOF      [ reduce using rule 166 (expr -> expr MUL expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! CONCAT          [ shift and go to state 101 ]
  ! PLUS            [ shift and go to state 102 ]
  ! MINUS           [ shift and go to state 103 ]
  ! MUL             [ shift and go to state 104 ]
  ! DIV             [ shift and go to state 105 ]
  ! SL              [ shift and go to state 106 ]
  ! SR              [ shift and go to state 107 ]
  ! MOD             [ shift and go to state 108 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! LESS_THAN       [ shift and go to state 113 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! GREATER_THAN    [ shift and go to state 115 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 118 ]


state 234

    (167) expr -> expr DIV expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 167 (expr -> expr DIV expr .)
    LBRACE          reduce using rule 167 (expr -> expr DIV expr .)
    BOOLEAN_AND     reduce using rule 167 (expr -> expr DIV expr .)
    BOOLEAN_OR      reduce using rule 167 (expr -> expr DIV expr .)
    LOGICAL_AND     reduce using rule 167 (expr -> expr DIV expr .)
    LOGICAL_OR      reduce using rule 167 (expr -> expr DIV expr .)
    LOGICAL_XOR     reduce using rule 167 (expr -> expr DIV expr .)
    AND             reduce using rule 167 (expr -> expr DIV expr .)
    OR              reduce using rule 167 (expr -> expr DIV expr .)
    XOR             reduce using rule 167 (expr -> expr DIV expr .)
    CONCAT          reduce using rule 167 (expr -> expr DIV expr .)
    PLUS            reduce using rule 167 (expr -> expr DIV expr .)
    MINUS           reduce using rule 167 (expr -> expr DIV expr .)
    MUL             reduce using rule 167 (expr -> expr DIV expr .)
    DIV             reduce using rule 167 (expr -> expr DIV expr .)
    SL              reduce using rule 167 (expr -> expr DIV expr .)
    SR              reduce using rule 167 (expr -> expr DIV expr .)
    MOD             reduce using rule 167 (expr -> expr DIV expr .)
    IS_IDENTICAL    reduce using rule 167 (expr -> expr DIV expr .)
    IS_NOT_IDENTICAL reduce using rule 167 (expr -> expr DIV expr .)
    IS_EQUAL_TO     reduce using rule 167 (expr -> expr DIV expr .)
    IS_NOT_EQUAL    reduce using rule 167 (expr -> expr DIV expr .)
    LESS_THAN       reduce using rule 167 (expr -> expr DIV expr .)
    LESS_THAN_OR_EQUAL reduce using rule 167 (expr -> expr DIV expr .)
    GREATER_THAN    reduce using rule 167 (expr -> expr DIV expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 167 (expr -> expr DIV expr .)
    QUESTION        reduce using rule 167 (expr -> expr DIV expr .)
    RPAREN          reduce using rule 167 (expr -> expr DIV expr .)
    COMMA           reduce using rule 167 (expr -> expr DIV expr .)
    DOUBLE_ARROW    reduce using rule 167 (expr -> expr DIV expr .)
    RBRACKET        reduce using rule 167 (expr -> expr DIV expr .)
    RBRACE          reduce using rule 167 (expr -> expr DIV expr .)
    COLON           reduce using rule 167 (expr -> expr DIV expr .)
    INSTANCEOF      shift and go to state 117

  ! INSTANCEOF      [ reduce using rule 167 (expr -> expr DIV expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! CONCAT          [ shift and go to state 101 ]
  ! PLUS            [ shift and go to state 102 ]
  ! MINUS           [ shift and go to state 103 ]
  ! MUL             [ shift and go to state 104 ]
  ! DIV             [ shift and go to state 105 ]
  ! SL              [ shift and go to state 106 ]
  ! SR              [ shift and go to state 107 ]
  ! MOD             [ shift and go to state 108 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! LESS_THAN       [ shift and go to state 113 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! GREATER_THAN    [ shift and go to state 115 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 118 ]


state 235

    (168) expr -> expr SL expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 168 (expr -> expr SL expr .)
    LBRACE          reduce using rule 168 (expr -> expr SL expr .)
    BOOLEAN_AND     reduce using rule 168 (expr -> expr SL expr .)
    BOOLEAN_OR      reduce using rule 168 (expr -> expr SL expr .)
    LOGICAL_AND     reduce using rule 168 (expr -> expr SL expr .)
    LOGICAL_OR      reduce using rule 168 (expr -> expr SL expr .)
    LOGICAL_XOR     reduce using rule 168 (expr -> expr SL expr .)
    AND             reduce using rule 168 (expr -> expr SL expr .)
    OR              reduce using rule 168 (expr -> expr SL expr .)
    XOR             reduce using rule 168 (expr -> expr SL expr .)
    SL              reduce using rule 168 (expr -> expr SL expr .)
    SR              reduce using rule 168 (expr -> expr SL expr .)
    IS_IDENTICAL    reduce using rule 168 (expr -> expr SL expr .)
    IS_NOT_IDENTICAL reduce using rule 168 (expr -> expr SL expr .)
    IS_EQUAL_TO     reduce using rule 168 (expr -> expr SL expr .)
    IS_NOT_EQUAL    reduce using rule 168 (expr -> expr SL expr .)
    LESS_THAN       reduce using rule 168 (expr -> expr SL expr .)
    LESS_THAN_OR_EQUAL reduce using rule 168 (expr -> expr SL expr .)
    GREATER_THAN    reduce using rule 168 (expr -> expr SL expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 168 (expr -> expr SL expr .)
    QUESTION        reduce using rule 168 (expr -> expr SL expr .)
    RPAREN          reduce using rule 168 (expr -> expr SL expr .)
    COMMA           reduce using rule 168 (expr -> expr SL expr .)
    DOUBLE_ARROW    reduce using rule 168 (expr -> expr SL expr .)
    RBRACKET        reduce using rule 168 (expr -> expr SL expr .)
    RBRACE          reduce using rule 168 (expr -> expr SL expr .)
    COLON           reduce using rule 168 (expr -> expr SL expr .)
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    MOD             shift and go to state 108
    INSTANCEOF      shift and go to state 117

  ! CONCAT          [ reduce using rule 168 (expr -> expr SL expr .) ]
  ! PLUS            [ reduce using rule 168 (expr -> expr SL expr .) ]
  ! MINUS           [ reduce using rule 168 (expr -> expr SL expr .) ]
  ! MUL             [ reduce using rule 168 (expr -> expr SL expr .) ]
  ! DIV             [ reduce using rule 168 (expr -> expr SL expr .) ]
  ! MOD             [ reduce using rule 168 (expr -> expr SL expr .) ]
  ! INSTANCEOF      [ reduce using rule 168 (expr -> expr SL expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! SL              [ shift and go to state 106 ]
  ! SR              [ shift and go to state 107 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! LESS_THAN       [ shift and go to state 113 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! GREATER_THAN    [ shift and go to state 115 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 118 ]


state 236

    (169) expr -> expr SR expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 169 (expr -> expr SR expr .)
    LBRACE          reduce using rule 169 (expr -> expr SR expr .)
    BOOLEAN_AND     reduce using rule 169 (expr -> expr SR expr .)
    BOOLEAN_OR      reduce using rule 169 (expr -> expr SR expr .)
    LOGICAL_AND     reduce using rule 169 (expr -> expr SR expr .)
    LOGICAL_OR      reduce using rule 169 (expr -> expr SR expr .)
    LOGICAL_XOR     reduce using rule 169 (expr -> expr SR expr .)
    AND             reduce using rule 169 (expr -> expr SR expr .)
    OR              reduce using rule 169 (expr -> expr SR expr .)
    XOR             reduce using rule 169 (expr -> expr SR expr .)
    SL              reduce using rule 169 (expr -> expr SR expr .)
    SR              reduce using rule 169 (expr -> expr SR expr .)
    IS_IDENTICAL    reduce using rule 169 (expr -> expr SR expr .)
    IS_NOT_IDENTICAL reduce using rule 169 (expr -> expr SR expr .)
    IS_EQUAL_TO     reduce using rule 169 (expr -> expr SR expr .)
    IS_NOT_EQUAL    reduce using rule 169 (expr -> expr SR expr .)
    LESS_THAN       reduce using rule 169 (expr -> expr SR expr .)
    LESS_THAN_OR_EQUAL reduce using rule 169 (expr -> expr SR expr .)
    GREATER_THAN    reduce using rule 169 (expr -> expr SR expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 169 (expr -> expr SR expr .)
    QUESTION        reduce using rule 169 (expr -> expr SR expr .)
    RPAREN          reduce using rule 169 (expr -> expr SR expr .)
    COMMA           reduce using rule 169 (expr -> expr SR expr .)
    DOUBLE_ARROW    reduce using rule 169 (expr -> expr SR expr .)
    RBRACKET        reduce using rule 169 (expr -> expr SR expr .)
    RBRACE          reduce using rule 169 (expr -> expr SR expr .)
    COLON           reduce using rule 169 (expr -> expr SR expr .)
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    MOD             shift and go to state 108
    INSTANCEOF      shift and go to state 117

  ! CONCAT          [ reduce using rule 169 (expr -> expr SR expr .) ]
  ! PLUS            [ reduce using rule 169 (expr -> expr SR expr .) ]
  ! MINUS           [ reduce using rule 169 (expr -> expr SR expr .) ]
  ! MUL             [ reduce using rule 169 (expr -> expr SR expr .) ]
  ! DIV             [ reduce using rule 169 (expr -> expr SR expr .) ]
  ! MOD             [ reduce using rule 169 (expr -> expr SR expr .) ]
  ! INSTANCEOF      [ reduce using rule 169 (expr -> expr SR expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! SL              [ shift and go to state 106 ]
  ! SR              [ shift and go to state 107 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! LESS_THAN       [ shift and go to state 113 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! GREATER_THAN    [ shift and go to state 115 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 118 ]


state 237

    (170) expr -> expr MOD expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 170 (expr -> expr MOD expr .)
    LBRACE          reduce using rule 170 (expr -> expr MOD expr .)
    BOOLEAN_AND     reduce using rule 170 (expr -> expr MOD expr .)
    BOOLEAN_OR      reduce using rule 170 (expr -> expr MOD expr .)
    LOGICAL_AND     reduce using rule 170 (expr -> expr MOD expr .)
    LOGICAL_OR      reduce using rule 170 (expr -> expr MOD expr .)
    LOGICAL_XOR     reduce using rule 170 (expr -> expr MOD expr .)
    AND             reduce using rule 170 (expr -> expr MOD expr .)
    OR              reduce using rule 170 (expr -> expr MOD expr .)
    XOR             reduce using rule 170 (expr -> expr MOD expr .)
    CONCAT          reduce using rule 170 (expr -> expr MOD expr .)
    PLUS            reduce using rule 170 (expr -> expr MOD expr .)
    MINUS           reduce using rule 170 (expr -> expr MOD expr .)
    MUL             reduce using rule 170 (expr -> expr MOD expr .)
    DIV             reduce using rule 170 (expr -> expr MOD expr .)
    SL              reduce using rule 170 (expr -> expr MOD expr .)
    SR              reduce using rule 170 (expr -> expr MOD expr .)
    MOD             reduce using rule 170 (expr -> expr MOD expr .)
    IS_IDENTICAL    reduce using rule 170 (expr -> expr MOD expr .)
    IS_NOT_IDENTICAL reduce using rule 170 (expr -> expr MOD expr .)
    IS_EQUAL_TO     reduce using rule 170 (expr -> expr MOD expr .)
    IS_NOT_EQUAL    reduce using rule 170 (expr -> expr MOD expr .)
    LESS_THAN       reduce using rule 170 (expr -> expr MOD expr .)
    LESS_THAN_OR_EQUAL reduce using rule 170 (expr -> expr MOD expr .)
    GREATER_THAN    reduce using rule 170 (expr -> expr MOD expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 170 (expr -> expr MOD expr .)
    QUESTION        reduce using rule 170 (expr -> expr MOD expr .)
    RPAREN          reduce using rule 170 (expr -> expr MOD expr .)
    COMMA           reduce using rule 170 (expr -> expr MOD expr .)
    DOUBLE_ARROW    reduce using rule 170 (expr -> expr MOD expr .)
    RBRACKET        reduce using rule 170 (expr -> expr MOD expr .)
    RBRACE          reduce using rule 170 (expr -> expr MOD expr .)
    COLON           reduce using rule 170 (expr -> expr MOD expr .)
    INSTANCEOF      shift and go to state 117

  ! INSTANCEOF      [ reduce using rule 170 (expr -> expr MOD expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! CONCAT          [ shift and go to state 101 ]
  ! PLUS            [ shift and go to state 102 ]
  ! MINUS           [ shift and go to state 103 ]
  ! MUL             [ shift and go to state 104 ]
  ! DIV             [ shift and go to state 105 ]
  ! SL              [ shift and go to state 106 ]
  ! SR              [ shift and go to state 107 ]
  ! MOD             [ shift and go to state 108 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! LESS_THAN       [ shift and go to state 113 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! GREATER_THAN    [ shift and go to state 115 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 118 ]


state 238

    (171) expr -> expr IS_IDENTICAL expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 171 (expr -> expr IS_IDENTICAL expr .)
    LBRACE          reduce using rule 171 (expr -> expr IS_IDENTICAL expr .)
    BOOLEAN_AND     reduce using rule 171 (expr -> expr IS_IDENTICAL expr .)
    BOOLEAN_OR      reduce using rule 171 (expr -> expr IS_IDENTICAL expr .)
    LOGICAL_AND     reduce using rule 171 (expr -> expr IS_IDENTICAL expr .)
    LOGICAL_OR      reduce using rule 171 (expr -> expr IS_IDENTICAL expr .)
    LOGICAL_XOR     reduce using rule 171 (expr -> expr IS_IDENTICAL expr .)
    AND             reduce using rule 171 (expr -> expr IS_IDENTICAL expr .)
    OR              reduce using rule 171 (expr -> expr IS_IDENTICAL expr .)
    XOR             reduce using rule 171 (expr -> expr IS_IDENTICAL expr .)
    IS_IDENTICAL    reduce using rule 171 (expr -> expr IS_IDENTICAL expr .)
    IS_NOT_IDENTICAL reduce using rule 171 (expr -> expr IS_IDENTICAL expr .)
    IS_EQUAL_TO     reduce using rule 171 (expr -> expr IS_IDENTICAL expr .)
    IS_NOT_EQUAL    reduce using rule 171 (expr -> expr IS_IDENTICAL expr .)
    QUESTION        reduce using rule 171 (expr -> expr IS_IDENTICAL expr .)
    RPAREN          reduce using rule 171 (expr -> expr IS_IDENTICAL expr .)
    COMMA           reduce using rule 171 (expr -> expr IS_IDENTICAL expr .)
    DOUBLE_ARROW    reduce using rule 171 (expr -> expr IS_IDENTICAL expr .)
    RBRACKET        reduce using rule 171 (expr -> expr IS_IDENTICAL expr .)
    RBRACE          reduce using rule 171 (expr -> expr IS_IDENTICAL expr .)
    COLON           reduce using rule 171 (expr -> expr IS_IDENTICAL expr .)
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117

  ! CONCAT          [ reduce using rule 171 (expr -> expr IS_IDENTICAL expr .) ]
  ! PLUS            [ reduce using rule 171 (expr -> expr IS_IDENTICAL expr .) ]
  ! MINUS           [ reduce using rule 171 (expr -> expr IS_IDENTICAL expr .) ]
  ! MUL             [ reduce using rule 171 (expr -> expr IS_IDENTICAL expr .) ]
  ! DIV             [ reduce using rule 171 (expr -> expr IS_IDENTICAL expr .) ]
  ! SL              [ reduce using rule 171 (expr -> expr IS_IDENTICAL expr .) ]
  ! SR              [ reduce using rule 171 (expr -> expr IS_IDENTICAL expr .) ]
  ! MOD             [ reduce using rule 171 (expr -> expr IS_IDENTICAL expr .) ]
  ! LESS_THAN       [ reduce using rule 171 (expr -> expr IS_IDENTICAL expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 171 (expr -> expr IS_IDENTICAL expr .) ]
  ! GREATER_THAN    [ reduce using rule 171 (expr -> expr IS_IDENTICAL expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 171 (expr -> expr IS_IDENTICAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 171 (expr -> expr IS_IDENTICAL expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! QUESTION        [ shift and go to state 118 ]


state 239

    (172) expr -> expr IS_NOT_IDENTICAL expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .)
    LBRACE          reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .)
    BOOLEAN_AND     reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .)
    BOOLEAN_OR      reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .)
    LOGICAL_AND     reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .)
    LOGICAL_OR      reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .)
    LOGICAL_XOR     reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .)
    AND             reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .)
    OR              reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .)
    XOR             reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .)
    IS_IDENTICAL    reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .)
    IS_NOT_IDENTICAL reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .)
    IS_EQUAL_TO     reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .)
    IS_NOT_EQUAL    reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .)
    QUESTION        reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .)
    RPAREN          reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .)
    COMMA           reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .)
    DOUBLE_ARROW    reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .)
    RBRACKET        reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .)
    RBRACE          reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .)
    COLON           reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .)
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117

  ! CONCAT          [ reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .) ]
  ! PLUS            [ reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .) ]
  ! MINUS           [ reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .) ]
  ! MUL             [ reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .) ]
  ! DIV             [ reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .) ]
  ! SL              [ reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .) ]
  ! SR              [ reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .) ]
  ! MOD             [ reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .) ]
  ! LESS_THAN       [ reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .) ]
  ! GREATER_THAN    [ reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 172 (expr -> expr IS_NOT_IDENTICAL expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! QUESTION        [ shift and go to state 118 ]


state 240

    (173) expr -> expr IS_EQUAL_TO expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .)
    LBRACE          reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .)
    BOOLEAN_AND     reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .)
    BOOLEAN_OR      reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .)
    LOGICAL_AND     reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .)
    LOGICAL_OR      reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .)
    LOGICAL_XOR     reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .)
    AND             reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .)
    OR              reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .)
    XOR             reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .)
    IS_IDENTICAL    reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .)
    IS_NOT_IDENTICAL reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .)
    IS_EQUAL_TO     reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .)
    IS_NOT_EQUAL    reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .)
    QUESTION        reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .)
    RPAREN          reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .)
    COMMA           reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .)
    DOUBLE_ARROW    reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .)
    RBRACKET        reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .)
    RBRACE          reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .)
    COLON           reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .)
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117

  ! CONCAT          [ reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .) ]
  ! PLUS            [ reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .) ]
  ! MINUS           [ reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .) ]
  ! MUL             [ reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .) ]
  ! DIV             [ reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .) ]
  ! SL              [ reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .) ]
  ! SR              [ reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .) ]
  ! MOD             [ reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .) ]
  ! LESS_THAN       [ reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .) ]
  ! GREATER_THAN    [ reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .) ]
  ! INSTANCEOF      [ reduce using rule 173 (expr -> expr IS_EQUAL_TO expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! QUESTION        [ shift and go to state 118 ]


state 241

    (174) expr -> expr IS_NOT_EQUAL expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .)
    LBRACE          reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .)
    BOOLEAN_AND     reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .)
    BOOLEAN_OR      reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .)
    LOGICAL_AND     reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .)
    LOGICAL_OR      reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .)
    LOGICAL_XOR     reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .)
    AND             reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .)
    OR              reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .)
    XOR             reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .)
    IS_IDENTICAL    reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .)
    IS_NOT_IDENTICAL reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .)
    IS_EQUAL_TO     reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .)
    IS_NOT_EQUAL    reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .)
    QUESTION        reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .)
    RPAREN          reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .)
    COMMA           reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .)
    DOUBLE_ARROW    reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .)
    RBRACKET        reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .)
    RBRACE          reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .)
    COLON           reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .)
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117

  ! CONCAT          [ reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .) ]
  ! MUL             [ reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .) ]
  ! DIV             [ reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .) ]
  ! SL              [ reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .) ]
  ! SR              [ reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .) ]
  ! MOD             [ reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .) ]
  ! LESS_THAN       [ reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .) ]
  ! GREATER_THAN    [ reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 174 (expr -> expr IS_NOT_EQUAL expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! QUESTION        [ shift and go to state 118 ]


state 242

    (175) expr -> expr LESS_THAN expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 175 (expr -> expr LESS_THAN expr .)
    LBRACE          reduce using rule 175 (expr -> expr LESS_THAN expr .)
    BOOLEAN_AND     reduce using rule 175 (expr -> expr LESS_THAN expr .)
    BOOLEAN_OR      reduce using rule 175 (expr -> expr LESS_THAN expr .)
    LOGICAL_AND     reduce using rule 175 (expr -> expr LESS_THAN expr .)
    LOGICAL_OR      reduce using rule 175 (expr -> expr LESS_THAN expr .)
    LOGICAL_XOR     reduce using rule 175 (expr -> expr LESS_THAN expr .)
    AND             reduce using rule 175 (expr -> expr LESS_THAN expr .)
    OR              reduce using rule 175 (expr -> expr LESS_THAN expr .)
    XOR             reduce using rule 175 (expr -> expr LESS_THAN expr .)
    IS_IDENTICAL    reduce using rule 175 (expr -> expr LESS_THAN expr .)
    IS_NOT_IDENTICAL reduce using rule 175 (expr -> expr LESS_THAN expr .)
    IS_EQUAL_TO     reduce using rule 175 (expr -> expr LESS_THAN expr .)
    IS_NOT_EQUAL    reduce using rule 175 (expr -> expr LESS_THAN expr .)
    LESS_THAN       reduce using rule 175 (expr -> expr LESS_THAN expr .)
    LESS_THAN_OR_EQUAL reduce using rule 175 (expr -> expr LESS_THAN expr .)
    GREATER_THAN    reduce using rule 175 (expr -> expr LESS_THAN expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 175 (expr -> expr LESS_THAN expr .)
    QUESTION        reduce using rule 175 (expr -> expr LESS_THAN expr .)
    RPAREN          reduce using rule 175 (expr -> expr LESS_THAN expr .)
    COMMA           reduce using rule 175 (expr -> expr LESS_THAN expr .)
    DOUBLE_ARROW    reduce using rule 175 (expr -> expr LESS_THAN expr .)
    RBRACKET        reduce using rule 175 (expr -> expr LESS_THAN expr .)
    RBRACE          reduce using rule 175 (expr -> expr LESS_THAN expr .)
    COLON           reduce using rule 175 (expr -> expr LESS_THAN expr .)
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    INSTANCEOF      shift and go to state 117

  ! CONCAT          [ reduce using rule 175 (expr -> expr LESS_THAN expr .) ]
  ! PLUS            [ reduce using rule 175 (expr -> expr LESS_THAN expr .) ]
  ! MINUS           [ reduce using rule 175 (expr -> expr LESS_THAN expr .) ]
  ! MUL             [ reduce using rule 175 (expr -> expr LESS_THAN expr .) ]
  ! DIV             [ reduce using rule 175 (expr -> expr LESS_THAN expr .) ]
  ! SL              [ reduce using rule 175 (expr -> expr LESS_THAN expr .) ]
  ! SR              [ reduce using rule 175 (expr -> expr LESS_THAN expr .) ]
  ! MOD             [ reduce using rule 175 (expr -> expr LESS_THAN expr .) ]
  ! INSTANCEOF      [ reduce using rule 175 (expr -> expr LESS_THAN expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! LESS_THAN       [ shift and go to state 113 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! GREATER_THAN    [ shift and go to state 115 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 118 ]


state 243

    (176) expr -> expr LESS_THAN_OR_EQUAL expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    LBRACE          reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    BOOLEAN_AND     reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    BOOLEAN_OR      reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    LOGICAL_AND     reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    LOGICAL_OR      reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    LOGICAL_XOR     reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    AND             reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    OR              reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    XOR             reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    IS_IDENTICAL    reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    IS_NOT_IDENTICAL reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    IS_EQUAL_TO     reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    IS_NOT_EQUAL    reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    LESS_THAN       reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    LESS_THAN_OR_EQUAL reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    GREATER_THAN    reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    QUESTION        reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    RPAREN          reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    COMMA           reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    DOUBLE_ARROW    reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    RBRACKET        reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    RBRACE          reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    COLON           reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .)
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    INSTANCEOF      shift and go to state 117

  ! CONCAT          [ reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .) ]
  ! MUL             [ reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .) ]
  ! DIV             [ reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .) ]
  ! SL              [ reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .) ]
  ! SR              [ reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .) ]
  ! MOD             [ reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 176 (expr -> expr LESS_THAN_OR_EQUAL expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! LESS_THAN       [ shift and go to state 113 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! GREATER_THAN    [ shift and go to state 115 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 118 ]


state 244

    (177) expr -> expr GREATER_THAN expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 177 (expr -> expr GREATER_THAN expr .)
    LBRACE          reduce using rule 177 (expr -> expr GREATER_THAN expr .)
    BOOLEAN_AND     reduce using rule 177 (expr -> expr GREATER_THAN expr .)
    BOOLEAN_OR      reduce using rule 177 (expr -> expr GREATER_THAN expr .)
    LOGICAL_AND     reduce using rule 177 (expr -> expr GREATER_THAN expr .)
    LOGICAL_OR      reduce using rule 177 (expr -> expr GREATER_THAN expr .)
    LOGICAL_XOR     reduce using rule 177 (expr -> expr GREATER_THAN expr .)
    AND             reduce using rule 177 (expr -> expr GREATER_THAN expr .)
    OR              reduce using rule 177 (expr -> expr GREATER_THAN expr .)
    XOR             reduce using rule 177 (expr -> expr GREATER_THAN expr .)
    IS_IDENTICAL    reduce using rule 177 (expr -> expr GREATER_THAN expr .)
    IS_NOT_IDENTICAL reduce using rule 177 (expr -> expr GREATER_THAN expr .)
    IS_EQUAL_TO     reduce using rule 177 (expr -> expr GREATER_THAN expr .)
    IS_NOT_EQUAL    reduce using rule 177 (expr -> expr GREATER_THAN expr .)
    LESS_THAN       reduce using rule 177 (expr -> expr GREATER_THAN expr .)
    LESS_THAN_OR_EQUAL reduce using rule 177 (expr -> expr GREATER_THAN expr .)
    GREATER_THAN    reduce using rule 177 (expr -> expr GREATER_THAN expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 177 (expr -> expr GREATER_THAN expr .)
    QUESTION        reduce using rule 177 (expr -> expr GREATER_THAN expr .)
    RPAREN          reduce using rule 177 (expr -> expr GREATER_THAN expr .)
    COMMA           reduce using rule 177 (expr -> expr GREATER_THAN expr .)
    DOUBLE_ARROW    reduce using rule 177 (expr -> expr GREATER_THAN expr .)
    RBRACKET        reduce using rule 177 (expr -> expr GREATER_THAN expr .)
    RBRACE          reduce using rule 177 (expr -> expr GREATER_THAN expr .)
    COLON           reduce using rule 177 (expr -> expr GREATER_THAN expr .)
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    INSTANCEOF      shift and go to state 117

  ! CONCAT          [ reduce using rule 177 (expr -> expr GREATER_THAN expr .) ]
  ! PLUS            [ reduce using rule 177 (expr -> expr GREATER_THAN expr .) ]
  ! MINUS           [ reduce using rule 177 (expr -> expr GREATER_THAN expr .) ]
  ! MUL             [ reduce using rule 177 (expr -> expr GREATER_THAN expr .) ]
  ! DIV             [ reduce using rule 177 (expr -> expr GREATER_THAN expr .) ]
  ! SL              [ reduce using rule 177 (expr -> expr GREATER_THAN expr .) ]
  ! SR              [ reduce using rule 177 (expr -> expr GREATER_THAN expr .) ]
  ! MOD             [ reduce using rule 177 (expr -> expr GREATER_THAN expr .) ]
  ! INSTANCEOF      [ reduce using rule 177 (expr -> expr GREATER_THAN expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! LESS_THAN       [ shift and go to state 113 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! GREATER_THAN    [ shift and go to state 115 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 118 ]


state 245

    (178) expr -> expr GRATER_THAN_OR_EQUAL expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    LBRACE          reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    BOOLEAN_AND     reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    BOOLEAN_OR      reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    LOGICAL_AND     reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    LOGICAL_OR      reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    LOGICAL_XOR     reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    AND             reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    OR              reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    XOR             reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    IS_IDENTICAL    reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    IS_NOT_IDENTICAL reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    IS_EQUAL_TO     reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    IS_NOT_EQUAL    reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    LESS_THAN       reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    LESS_THAN_OR_EQUAL reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    GREATER_THAN    reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    QUESTION        reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    RPAREN          reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    COMMA           reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    DOUBLE_ARROW    reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    RBRACKET        reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    RBRACE          reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    COLON           reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .)
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    INSTANCEOF      shift and go to state 117

  ! CONCAT          [ reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .) ]
  ! MUL             [ reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .) ]
  ! DIV             [ reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .) ]
  ! SL              [ reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .) ]
  ! SR              [ reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .) ]
  ! MOD             [ reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 178 (expr -> expr GRATER_THAN_OR_EQUAL expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! LESS_THAN       [ shift and go to state 113 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! GREATER_THAN    [ shift and go to state 115 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 118 ]


state 246

    (179) expr -> expr INSTANCEOF expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    LBRACE          reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    BOOLEAN_AND     reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    BOOLEAN_OR      reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    LOGICAL_AND     reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    LOGICAL_OR      reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    LOGICAL_XOR     reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    AND             reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    OR              reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    XOR             reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    CONCAT          reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    PLUS            reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    MINUS           reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    MUL             reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    DIV             reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    SL              reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    SR              reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    MOD             reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    IS_IDENTICAL    reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    IS_NOT_IDENTICAL reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    IS_EQUAL_TO     reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    IS_NOT_EQUAL    reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    LESS_THAN       reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    LESS_THAN_OR_EQUAL reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    GREATER_THAN    reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    QUESTION        reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    RPAREN          reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    COMMA           reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    DOUBLE_ARROW    reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    RBRACKET        reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    RBRACE          reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    COLON           reduce using rule 179 (expr -> expr INSTANCEOF expr .)
    INSTANCEOF      shift and go to state 117

  ! INSTANCEOF      [ reduce using rule 179 (expr -> expr INSTANCEOF expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! CONCAT          [ shift and go to state 101 ]
  ! PLUS            [ shift and go to state 102 ]
  ! MINUS           [ shift and go to state 103 ]
  ! MUL             [ shift and go to state 104 ]
  ! DIV             [ shift and go to state 105 ]
  ! SL              [ shift and go to state 106 ]
  ! SR              [ shift and go to state 107 ]
  ! MOD             [ shift and go to state 108 ]
  ! IS_IDENTICAL    [ shift and go to state 109 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 110 ]
  ! IS_EQUAL_TO     [ shift and go to state 111 ]
  ! IS_NOT_EQUAL    [ shift and go to state 112 ]
  ! LESS_THAN       [ shift and go to state 113 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 114 ]
  ! GREATER_THAN    [ shift and go to state 115 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 116 ]
  ! QUESTION        [ shift and go to state 118 ]


state 247

    (180) expr -> expr INSTANCEOF STATIC .

    SEMI_COLON      reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    LBRACE          reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    BOOLEAN_AND     reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    BOOLEAN_OR      reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    LOGICAL_AND     reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    LOGICAL_OR      reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    LOGICAL_XOR     reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    AND             reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    OR              reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    XOR             reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    CONCAT          reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    PLUS            reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    MINUS           reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    MUL             reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    DIV             reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    SL              reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    SR              reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    MOD             reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    IS_IDENTICAL    reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    IS_NOT_IDENTICAL reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    IS_EQUAL_TO     reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    IS_NOT_EQUAL    reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    LESS_THAN       reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    LESS_THAN_OR_EQUAL reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    GREATER_THAN    reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    GRATER_THAN_OR_EQUAL reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    INSTANCEOF      reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    QUESTION        reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    RPAREN          reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    COMMA           reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    DOUBLE_ARROW    reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    RBRACKET        reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    RBRACE          reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)
    COLON           reduce using rule 180 (expr -> expr INSTANCEOF STATIC .)


state 248

    (185) expr -> expr QUESTION expr . COLON expr
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    COLON           shift and go to state 346
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 249

    (186) expr -> expr QUESTION COLON . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 347
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 250

    (20) statement -> WHILE LPAREN expr . RPAREN while_statement
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    RPAREN          shift and go to state 348
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 251

    (21) statement -> DO statement WHILE . LPAREN expr RPAREN SEMI_COLON

    LPAREN          shift and go to state 349


state 252

    (22) statement -> FOR LPAREN for_expr . SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement

    SEMI_COLON      shift and go to state 350


state 253

    (47) for_expr -> empty .

    SEMI_COLON      reduce using rule 47 (for_expr -> empty .)
    RPAREN          reduce using rule 47 (for_expr -> empty .)


state 254

    (48) for_expr -> non_empty_for_expr .
    (49) non_empty_for_expr -> non_empty_for_expr . COMMA expr

    SEMI_COLON      reduce using rule 48 (for_expr -> non_empty_for_expr .)
    RPAREN          reduce using rule 48 (for_expr -> non_empty_for_expr .)
    COMMA           shift and go to state 351


state 255

    (50) non_empty_for_expr -> expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    COMMA           reduce using rule 50 (non_empty_for_expr -> expr .)
    SEMI_COLON      reduce using rule 50 (non_empty_for_expr -> expr .)
    RPAREN          reduce using rule 50 (non_empty_for_expr -> expr .)
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 256

    (23) statement -> SWITCH LPAREN expr . RPAREN switch_case_list
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    RPAREN          shift and go to state 352
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 257

    (25) statement -> BREAK expr SEMI_COLON .

    HALT_COMPILER   reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    CONST           reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    LBRACE          reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    IF              reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    WHILE           reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    DO              reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    FOR             reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    SWITCH          reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    BREAK           reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    CONTINUE        reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    RETURN          reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    GLOBAL          reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    STATIC          reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    ECHO            reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    INLINE_HTML     reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    UNSET           reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    SEMI_COLON      reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    FUNCTION        reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    CLONE           reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    LIST            reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    ARRAY           reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    LBRACKET        reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    PLUS            reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    MINUS           reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    NOT             reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    INC             reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    DEC             reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    INT_CAST        reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    ARRAY_CAST      reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    STRING_CAST     reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    BOOL_CAST       reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    UNSET_CAST      reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    BINARY_CAST     reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    ISSET           reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    EMPTY           reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    EVAL            reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    INCLUDE         reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    REQUIRE         reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    PRINT           reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    AT              reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    LPAREN          reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    IDENTIFIER      reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    EXIT            reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    DIE             reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    INT_NUMBER      reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    FUNC_C          reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    METHOD_C        reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    LINE            reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    FILE            reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    DIR             reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    START_HEREDOC   reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    START_NOWDOC    reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    DOLLAR          reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    VARIABLE        reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    $end            reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    RBRACE          reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    YIELD           reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    ELSEIF          reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    ELSE            reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    ENDIF           reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    ENDWHILE        reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    ENDSWITCH       reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    ENDFOR          reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    CASE            reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)
    DEFAULT         reduce using rule 25 (statement -> BREAK expr SEMI_COLON .)


state 258

    (27) statement -> CONTINUE expr SEMI_COLON .

    HALT_COMPILER   reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    CONST           reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    LBRACE          reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    IF              reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    WHILE           reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    DO              reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    FOR             reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    SWITCH          reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    BREAK           reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    CONTINUE        reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    RETURN          reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    GLOBAL          reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    STATIC          reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    ECHO            reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    INLINE_HTML     reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    UNSET           reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    SEMI_COLON      reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    FUNCTION        reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    CLONE           reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    LIST            reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    ARRAY           reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    LBRACKET        reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    PLUS            reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    MINUS           reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    NOT             reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    INC             reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    DEC             reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    INT_CAST        reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    ARRAY_CAST      reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    STRING_CAST     reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    BOOL_CAST       reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    UNSET_CAST      reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    BINARY_CAST     reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    ISSET           reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    EMPTY           reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    EVAL            reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    INCLUDE         reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    REQUIRE         reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    PRINT           reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    AT              reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    LPAREN          reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    IDENTIFIER      reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    EXIT            reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    DIE             reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    INT_NUMBER      reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    FUNC_C          reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    METHOD_C        reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    LINE            reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    FILE            reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    DIR             reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    START_HEREDOC   reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    START_NOWDOC    reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    DOLLAR          reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    VARIABLE        reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    $end            reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    RBRACE          reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    YIELD           reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    ELSEIF          reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    ELSE            reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    ENDIF           reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    ENDWHILE        reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    ENDSWITCH       reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    ENDFOR          reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    CASE            reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)
    DEFAULT         reduce using rule 27 (statement -> CONTINUE expr SEMI_COLON .)


state 259

    (29) statement -> RETURN expr SEMI_COLON .

    HALT_COMPILER   reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    CONST           reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    LBRACE          reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    IF              reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    WHILE           reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    DO              reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    FOR             reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    SWITCH          reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    BREAK           reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    CONTINUE        reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    RETURN          reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    GLOBAL          reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    STATIC          reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    ECHO            reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    INLINE_HTML     reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    UNSET           reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    SEMI_COLON      reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    FUNCTION        reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    CLONE           reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    LIST            reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    ARRAY           reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    LBRACKET        reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    PLUS            reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    MINUS           reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    NOT             reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    INC             reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    DEC             reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    INT_CAST        reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    ARRAY_CAST      reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    STRING_CAST     reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    BOOL_CAST       reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    UNSET_CAST      reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    BINARY_CAST     reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    ISSET           reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    EMPTY           reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    EVAL            reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    INCLUDE         reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    REQUIRE         reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    PRINT           reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    AT              reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    LPAREN          reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    IDENTIFIER      reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    EXIT            reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    DIE             reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    INT_NUMBER      reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    FUNC_C          reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    METHOD_C        reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    LINE            reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    FILE            reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    DIR             reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    START_HEREDOC   reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    START_NOWDOC    reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    DOLLAR          reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    VARIABLE        reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    $end            reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    RBRACE          reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    YIELD           reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    ELSEIF          reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    ELSE            reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    ENDIF           reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    ENDWHILE        reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    ENDSWITCH       reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    ENDFOR          reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    CASE            reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)
    DEFAULT         reduce using rule 29 (statement -> RETURN expr SEMI_COLON .)


state 260

    (30) statement -> GLOBAL global_var_list SEMI_COLON .

    HALT_COMPILER   reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    CONST           reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    LBRACE          reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    IF              reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    WHILE           reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    DO              reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    FOR             reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    SWITCH          reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    BREAK           reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    CONTINUE        reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    RETURN          reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    GLOBAL          reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    STATIC          reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    ECHO            reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    INLINE_HTML     reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    UNSET           reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    SEMI_COLON      reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    FUNCTION        reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    CLONE           reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    LIST            reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    ARRAY           reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    LBRACKET        reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    PLUS            reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    MINUS           reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    NOT             reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    INC             reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    DEC             reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    INT_CAST        reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    ARRAY_CAST      reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    STRING_CAST     reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    BOOL_CAST       reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    UNSET_CAST      reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    BINARY_CAST     reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    ISSET           reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    EMPTY           reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    EVAL            reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    INCLUDE         reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    REQUIRE         reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    PRINT           reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    AT              reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    LPAREN          reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    IDENTIFIER      reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    EXIT            reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    DIE             reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    INT_NUMBER      reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    FUNC_C          reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    METHOD_C        reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    LINE            reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    FILE            reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    DIR             reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    START_HEREDOC   reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    START_NOWDOC    reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    DOLLAR          reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    VARIABLE        reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    $end            reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    RBRACE          reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    YIELD           reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    ELSEIF          reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    ELSE            reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    ENDIF           reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    ENDWHILE        reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    ENDSWITCH       reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    ENDFOR          reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    CASE            reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)
    DEFAULT         reduce using rule 30 (statement -> GLOBAL global_var_list SEMI_COLON .)


state 261

    (64) global_var_list -> global_var_list COMMA . global_var
    (66) global_var -> . VARIABLE
    (67) global_var -> . DOLLAR variable
    (68) global_var -> . DOLLAR LBRACE expr RBRACE

    VARIABLE        shift and go to state 131
    DOLLAR          shift and go to state 132

    global_var                     shift and go to state 353

state 262

    (67) global_var -> DOLLAR variable .
    (111) variable -> variable . LBRACKET dim_offset RBRACKET

    SEMI_COLON      reduce using rule 67 (global_var -> DOLLAR variable .)
    COMMA           reduce using rule 67 (global_var -> DOLLAR variable .)
    LBRACKET        shift and go to state 160


state 263

    (68) global_var -> DOLLAR LBRACE . expr RBRACE
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 354
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 264

    (31) statement -> STATIC static_var_list SEMI_COLON .

    HALT_COMPILER   reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    CONST           reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    LBRACE          reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    IF              reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    WHILE           reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    DO              reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    FOR             reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    SWITCH          reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    BREAK           reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    CONTINUE        reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    RETURN          reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    GLOBAL          reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    STATIC          reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    ECHO            reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    INLINE_HTML     reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    UNSET           reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    SEMI_COLON      reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    FUNCTION        reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    CLONE           reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    LIST            reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    ARRAY           reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    LBRACKET        reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    PLUS            reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    MINUS           reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    NOT             reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    INC             reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    DEC             reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    INT_CAST        reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    ARRAY_CAST      reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    STRING_CAST     reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    BOOL_CAST       reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    UNSET_CAST      reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    BINARY_CAST     reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    ISSET           reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    EMPTY           reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    EVAL            reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    INCLUDE         reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    REQUIRE         reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    PRINT           reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    AT              reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    LPAREN          reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    IDENTIFIER      reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    EXIT            reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    DIE             reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    INT_NUMBER      reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    FUNC_C          reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    METHOD_C        reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    LINE            reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    FILE            reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    DIR             reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    START_HEREDOC   reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    START_NOWDOC    reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    DOLLAR          reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    VARIABLE        reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    $end            reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    RBRACE          reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    YIELD           reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    ELSEIF          reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    ELSE            reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    ENDIF           reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    ENDWHILE        reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    ENDSWITCH       reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    ENDFOR          reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    CASE            reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)
    DEFAULT         reduce using rule 31 (statement -> STATIC static_var_list SEMI_COLON .)


state 265

    (69) static_var_list -> static_var_list COMMA . static_var
    (71) static_var -> . VARIABLE EQUALS static_scalar
    (72) static_var -> . VARIABLE

    VARIABLE        shift and go to state 135

    static_var                     shift and go to state 355

state 266

    (71) static_var -> VARIABLE EQUALS . static_scalar
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_scalar                  shift and go to state 356
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 267

    (32) statement -> ECHO echo_expr_list SEMI_COLON .

    HALT_COMPILER   reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    CONST           reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    LBRACE          reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    IF              reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    WHILE           reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    DO              reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    FOR             reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    SWITCH          reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    BREAK           reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    CONTINUE        reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    RETURN          reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    GLOBAL          reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    STATIC          reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    ECHO            reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    INLINE_HTML     reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    UNSET           reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    SEMI_COLON      reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    FUNCTION        reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    CLONE           reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    LIST            reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    ARRAY           reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    LBRACKET        reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    PLUS            reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    MINUS           reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    NOT             reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    INC             reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    DEC             reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    INT_CAST        reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    ARRAY_CAST      reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    STRING_CAST     reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    BOOL_CAST       reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    UNSET_CAST      reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    BINARY_CAST     reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    ISSET           reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    EMPTY           reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    EVAL            reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    INCLUDE         reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    REQUIRE         reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    PRINT           reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    AT              reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    LPAREN          reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    IDENTIFIER      reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    EXIT            reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    DIE             reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    INT_NUMBER      reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    FUNC_C          reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    METHOD_C        reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    LINE            reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    FILE            reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    DIR             reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    START_HEREDOC   reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    START_NOWDOC    reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    DOLLAR          reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    VARIABLE        reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    $end            reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    RBRACE          reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    YIELD           reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    ELSEIF          reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    ELSE            reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    ENDIF           reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    ENDWHILE        reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    ENDSWITCH       reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    ENDFOR          reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    CASE            reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)
    DEFAULT         reduce using rule 32 (statement -> ECHO echo_expr_list SEMI_COLON .)


state 268

    (73) echo_expr_list -> echo_expr_list COMMA . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 357
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 269

    (35) statement -> UNSET LPAREN unset_variables . RPAREN SEMI_COLON
    (75) unset_variables -> unset_variables . COMMA unset_variable

    RPAREN          shift and go to state 358
    COMMA           shift and go to state 359


state 270

    (76) unset_variables -> unset_variable .

    RPAREN          reduce using rule 76 (unset_variables -> unset_variable .)
    COMMA           reduce using rule 76 (unset_variables -> unset_variable .)


state 271

    (77) unset_variable -> variable .
    (111) variable -> variable . LBRACKET dim_offset RBRACKET

    RPAREN          reduce using rule 77 (unset_variable -> variable .)
    COMMA           reduce using rule 77 (unset_variable -> variable .)
    LBRACKET        shift and go to state 160


state 272

    (78) function_declaration_statement -> FUNCTION is_reference IDENTIFIER . LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE

    LPAREN          shift and go to state 360


state 273

    (137) expr -> FUNCTION is_reference LPAREN . parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (81) parameter_list -> . non_empty_parameter_list
    (82) parameter_list -> . empty
    (83) non_empty_parameter_list -> . non_empty_parameter_list COMMA parameter
    (84) non_empty_parameter_list -> . parameter
    (289) empty -> .
    (85) parameter -> . VARIABLE
    (86) parameter -> . AND VARIABLE
    (87) parameter -> . VARIABLE EQUALS static_scalar
    (88) parameter -> . AND VARIABLE EQUALS static_scalar

    RPAREN          reduce using rule 289 (empty -> .)
    VARIABLE        shift and go to state 365
    AND             shift and go to state 366

    parameter_list                 shift and go to state 361
    non_empty_parameter_list       shift and go to state 362
    empty                          shift and go to state 363
    parameter                      shift and go to state 364

state 274

    (218) scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list . DOUBLE_QUOTE
    (279) encaps_list -> encaps_list . encaps_var
    (281) encaps_var -> . VARIABLE
    (282) encaps_var -> . VARIABLE LBRACKET encaps_var_offset RBRACKET
    (283) encaps_var -> . DOLLAR_OPEN_CURLY_BRACES expr RBRACE
    (284) encaps_var -> . DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME LBRACKET expr RBRACKET RBRACE
    (285) encaps_var -> . CURLY_OPEN variable RBRACE

    DOUBLE_QUOTE    shift and go to state 367
    VARIABLE        shift and go to state 316
    DOLLAR_OPEN_CURLY_BRACES shift and go to state 317
    CURLY_OPEN      shift and go to state 318

    encaps_var                     shift and go to state 315

state 275

    (104) fucntion_call_body -> LPAREN nonempty_function_call_parameter_list . RPAREN
    (133) nonempty_function_call_parameter_list -> nonempty_function_call_parameter_list . COMMA function_call_parameter

    RPAREN          shift and go to state 368
    COMMA           shift and go to state 305


state 276

    (105) fucntion_call_body -> LPAREN empty . RPAREN

    RPAREN          shift and go to state 369


state 277

    (135) function_call_parameter -> expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    RPAREN          reduce using rule 135 (function_call_parameter -> expr .)
    COMMA           reduce using rule 135 (function_call_parameter -> expr .)
    RBRACKET        reduce using rule 135 (function_call_parameter -> expr .)
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 278

    (90) expr -> variable EQUALS expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 90 (expr -> variable EQUALS expr .)
    LBRACE          reduce using rule 90 (expr -> variable EQUALS expr .)
    LOGICAL_AND     reduce using rule 90 (expr -> variable EQUALS expr .)
    LOGICAL_OR      reduce using rule 90 (expr -> variable EQUALS expr .)
    LOGICAL_XOR     reduce using rule 90 (expr -> variable EQUALS expr .)
    RPAREN          reduce using rule 90 (expr -> variable EQUALS expr .)
    COMMA           reduce using rule 90 (expr -> variable EQUALS expr .)
    DOUBLE_ARROW    reduce using rule 90 (expr -> variable EQUALS expr .)
    RBRACKET        reduce using rule 90 (expr -> variable EQUALS expr .)
    RBRACE          reduce using rule 90 (expr -> variable EQUALS expr .)
    COLON           reduce using rule 90 (expr -> variable EQUALS expr .)
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118

  ! BOOLEAN_AND     [ reduce using rule 90 (expr -> variable EQUALS expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 90 (expr -> variable EQUALS expr .) ]
  ! AND             [ reduce using rule 90 (expr -> variable EQUALS expr .) ]
  ! OR              [ reduce using rule 90 (expr -> variable EQUALS expr .) ]
  ! XOR             [ reduce using rule 90 (expr -> variable EQUALS expr .) ]
  ! CONCAT          [ reduce using rule 90 (expr -> variable EQUALS expr .) ]
  ! PLUS            [ reduce using rule 90 (expr -> variable EQUALS expr .) ]
  ! MINUS           [ reduce using rule 90 (expr -> variable EQUALS expr .) ]
  ! MUL             [ reduce using rule 90 (expr -> variable EQUALS expr .) ]
  ! DIV             [ reduce using rule 90 (expr -> variable EQUALS expr .) ]
  ! SL              [ reduce using rule 90 (expr -> variable EQUALS expr .) ]
  ! SR              [ reduce using rule 90 (expr -> variable EQUALS expr .) ]
  ! MOD             [ reduce using rule 90 (expr -> variable EQUALS expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 90 (expr -> variable EQUALS expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 90 (expr -> variable EQUALS expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 90 (expr -> variable EQUALS expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 90 (expr -> variable EQUALS expr .) ]
  ! LESS_THAN       [ reduce using rule 90 (expr -> variable EQUALS expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 90 (expr -> variable EQUALS expr .) ]
  ! GREATER_THAN    [ reduce using rule 90 (expr -> variable EQUALS expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 90 (expr -> variable EQUALS expr .) ]
  ! INSTANCEOF      [ reduce using rule 90 (expr -> variable EQUALS expr .) ]
  ! QUESTION        [ reduce using rule 90 (expr -> variable EQUALS expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]


state 279

    (91) expr -> variable EQUALS AND . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    variable                       shift and go to state 28
    expr                           shift and go to state 370
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 280

    (144) expr -> variable PLUS_EQUAL expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 144 (expr -> variable PLUS_EQUAL expr .)
    LBRACE          reduce using rule 144 (expr -> variable PLUS_EQUAL expr .)
    LOGICAL_AND     reduce using rule 144 (expr -> variable PLUS_EQUAL expr .)
    LOGICAL_OR      reduce using rule 144 (expr -> variable PLUS_EQUAL expr .)
    LOGICAL_XOR     reduce using rule 144 (expr -> variable PLUS_EQUAL expr .)
    RPAREN          reduce using rule 144 (expr -> variable PLUS_EQUAL expr .)
    COMMA           reduce using rule 144 (expr -> variable PLUS_EQUAL expr .)
    DOUBLE_ARROW    reduce using rule 144 (expr -> variable PLUS_EQUAL expr .)
    RBRACKET        reduce using rule 144 (expr -> variable PLUS_EQUAL expr .)
    RBRACE          reduce using rule 144 (expr -> variable PLUS_EQUAL expr .)
    COLON           reduce using rule 144 (expr -> variable PLUS_EQUAL expr .)
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118

  ! BOOLEAN_AND     [ reduce using rule 144 (expr -> variable PLUS_EQUAL expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 144 (expr -> variable PLUS_EQUAL expr .) ]
  ! AND             [ reduce using rule 144 (expr -> variable PLUS_EQUAL expr .) ]
  ! OR              [ reduce using rule 144 (expr -> variable PLUS_EQUAL expr .) ]
  ! XOR             [ reduce using rule 144 (expr -> variable PLUS_EQUAL expr .) ]
  ! CONCAT          [ reduce using rule 144 (expr -> variable PLUS_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 144 (expr -> variable PLUS_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 144 (expr -> variable PLUS_EQUAL expr .) ]
  ! MUL             [ reduce using rule 144 (expr -> variable PLUS_EQUAL expr .) ]
  ! DIV             [ reduce using rule 144 (expr -> variable PLUS_EQUAL expr .) ]
  ! SL              [ reduce using rule 144 (expr -> variable PLUS_EQUAL expr .) ]
  ! SR              [ reduce using rule 144 (expr -> variable PLUS_EQUAL expr .) ]
  ! MOD             [ reduce using rule 144 (expr -> variable PLUS_EQUAL expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 144 (expr -> variable PLUS_EQUAL expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 144 (expr -> variable PLUS_EQUAL expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 144 (expr -> variable PLUS_EQUAL expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 144 (expr -> variable PLUS_EQUAL expr .) ]
  ! LESS_THAN       [ reduce using rule 144 (expr -> variable PLUS_EQUAL expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 144 (expr -> variable PLUS_EQUAL expr .) ]
  ! GREATER_THAN    [ reduce using rule 144 (expr -> variable PLUS_EQUAL expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 144 (expr -> variable PLUS_EQUAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 144 (expr -> variable PLUS_EQUAL expr .) ]
  ! QUESTION        [ reduce using rule 144 (expr -> variable PLUS_EQUAL expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]


state 281

    (145) expr -> variable MINUS_EQUAL expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 145 (expr -> variable MINUS_EQUAL expr .)
    LBRACE          reduce using rule 145 (expr -> variable MINUS_EQUAL expr .)
    LOGICAL_AND     reduce using rule 145 (expr -> variable MINUS_EQUAL expr .)
    LOGICAL_OR      reduce using rule 145 (expr -> variable MINUS_EQUAL expr .)
    LOGICAL_XOR     reduce using rule 145 (expr -> variable MINUS_EQUAL expr .)
    RPAREN          reduce using rule 145 (expr -> variable MINUS_EQUAL expr .)
    COMMA           reduce using rule 145 (expr -> variable MINUS_EQUAL expr .)
    DOUBLE_ARROW    reduce using rule 145 (expr -> variable MINUS_EQUAL expr .)
    RBRACKET        reduce using rule 145 (expr -> variable MINUS_EQUAL expr .)
    RBRACE          reduce using rule 145 (expr -> variable MINUS_EQUAL expr .)
    COLON           reduce using rule 145 (expr -> variable MINUS_EQUAL expr .)
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118

  ! BOOLEAN_AND     [ reduce using rule 145 (expr -> variable MINUS_EQUAL expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 145 (expr -> variable MINUS_EQUAL expr .) ]
  ! AND             [ reduce using rule 145 (expr -> variable MINUS_EQUAL expr .) ]
  ! OR              [ reduce using rule 145 (expr -> variable MINUS_EQUAL expr .) ]
  ! XOR             [ reduce using rule 145 (expr -> variable MINUS_EQUAL expr .) ]
  ! CONCAT          [ reduce using rule 145 (expr -> variable MINUS_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 145 (expr -> variable MINUS_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 145 (expr -> variable MINUS_EQUAL expr .) ]
  ! MUL             [ reduce using rule 145 (expr -> variable MINUS_EQUAL expr .) ]
  ! DIV             [ reduce using rule 145 (expr -> variable MINUS_EQUAL expr .) ]
  ! SL              [ reduce using rule 145 (expr -> variable MINUS_EQUAL expr .) ]
  ! SR              [ reduce using rule 145 (expr -> variable MINUS_EQUAL expr .) ]
  ! MOD             [ reduce using rule 145 (expr -> variable MINUS_EQUAL expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 145 (expr -> variable MINUS_EQUAL expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 145 (expr -> variable MINUS_EQUAL expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 145 (expr -> variable MINUS_EQUAL expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 145 (expr -> variable MINUS_EQUAL expr .) ]
  ! LESS_THAN       [ reduce using rule 145 (expr -> variable MINUS_EQUAL expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 145 (expr -> variable MINUS_EQUAL expr .) ]
  ! GREATER_THAN    [ reduce using rule 145 (expr -> variable MINUS_EQUAL expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 145 (expr -> variable MINUS_EQUAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 145 (expr -> variable MINUS_EQUAL expr .) ]
  ! QUESTION        [ reduce using rule 145 (expr -> variable MINUS_EQUAL expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]


state 282

    (146) expr -> variable MUL_EQUAL expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 146 (expr -> variable MUL_EQUAL expr .)
    LBRACE          reduce using rule 146 (expr -> variable MUL_EQUAL expr .)
    LOGICAL_AND     reduce using rule 146 (expr -> variable MUL_EQUAL expr .)
    LOGICAL_OR      reduce using rule 146 (expr -> variable MUL_EQUAL expr .)
    LOGICAL_XOR     reduce using rule 146 (expr -> variable MUL_EQUAL expr .)
    RPAREN          reduce using rule 146 (expr -> variable MUL_EQUAL expr .)
    COMMA           reduce using rule 146 (expr -> variable MUL_EQUAL expr .)
    DOUBLE_ARROW    reduce using rule 146 (expr -> variable MUL_EQUAL expr .)
    RBRACKET        reduce using rule 146 (expr -> variable MUL_EQUAL expr .)
    RBRACE          reduce using rule 146 (expr -> variable MUL_EQUAL expr .)
    COLON           reduce using rule 146 (expr -> variable MUL_EQUAL expr .)
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118

  ! BOOLEAN_AND     [ reduce using rule 146 (expr -> variable MUL_EQUAL expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 146 (expr -> variable MUL_EQUAL expr .) ]
  ! AND             [ reduce using rule 146 (expr -> variable MUL_EQUAL expr .) ]
  ! OR              [ reduce using rule 146 (expr -> variable MUL_EQUAL expr .) ]
  ! XOR             [ reduce using rule 146 (expr -> variable MUL_EQUAL expr .) ]
  ! CONCAT          [ reduce using rule 146 (expr -> variable MUL_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 146 (expr -> variable MUL_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 146 (expr -> variable MUL_EQUAL expr .) ]
  ! MUL             [ reduce using rule 146 (expr -> variable MUL_EQUAL expr .) ]
  ! DIV             [ reduce using rule 146 (expr -> variable MUL_EQUAL expr .) ]
  ! SL              [ reduce using rule 146 (expr -> variable MUL_EQUAL expr .) ]
  ! SR              [ reduce using rule 146 (expr -> variable MUL_EQUAL expr .) ]
  ! MOD             [ reduce using rule 146 (expr -> variable MUL_EQUAL expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 146 (expr -> variable MUL_EQUAL expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 146 (expr -> variable MUL_EQUAL expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 146 (expr -> variable MUL_EQUAL expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 146 (expr -> variable MUL_EQUAL expr .) ]
  ! LESS_THAN       [ reduce using rule 146 (expr -> variable MUL_EQUAL expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 146 (expr -> variable MUL_EQUAL expr .) ]
  ! GREATER_THAN    [ reduce using rule 146 (expr -> variable MUL_EQUAL expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 146 (expr -> variable MUL_EQUAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 146 (expr -> variable MUL_EQUAL expr .) ]
  ! QUESTION        [ reduce using rule 146 (expr -> variable MUL_EQUAL expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]


state 283

    (147) expr -> variable DIV_EQUAL expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 147 (expr -> variable DIV_EQUAL expr .)
    LBRACE          reduce using rule 147 (expr -> variable DIV_EQUAL expr .)
    LOGICAL_AND     reduce using rule 147 (expr -> variable DIV_EQUAL expr .)
    LOGICAL_OR      reduce using rule 147 (expr -> variable DIV_EQUAL expr .)
    LOGICAL_XOR     reduce using rule 147 (expr -> variable DIV_EQUAL expr .)
    RPAREN          reduce using rule 147 (expr -> variable DIV_EQUAL expr .)
    COMMA           reduce using rule 147 (expr -> variable DIV_EQUAL expr .)
    DOUBLE_ARROW    reduce using rule 147 (expr -> variable DIV_EQUAL expr .)
    RBRACKET        reduce using rule 147 (expr -> variable DIV_EQUAL expr .)
    RBRACE          reduce using rule 147 (expr -> variable DIV_EQUAL expr .)
    COLON           reduce using rule 147 (expr -> variable DIV_EQUAL expr .)
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118

  ! BOOLEAN_AND     [ reduce using rule 147 (expr -> variable DIV_EQUAL expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 147 (expr -> variable DIV_EQUAL expr .) ]
  ! AND             [ reduce using rule 147 (expr -> variable DIV_EQUAL expr .) ]
  ! OR              [ reduce using rule 147 (expr -> variable DIV_EQUAL expr .) ]
  ! XOR             [ reduce using rule 147 (expr -> variable DIV_EQUAL expr .) ]
  ! CONCAT          [ reduce using rule 147 (expr -> variable DIV_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 147 (expr -> variable DIV_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 147 (expr -> variable DIV_EQUAL expr .) ]
  ! MUL             [ reduce using rule 147 (expr -> variable DIV_EQUAL expr .) ]
  ! DIV             [ reduce using rule 147 (expr -> variable DIV_EQUAL expr .) ]
  ! SL              [ reduce using rule 147 (expr -> variable DIV_EQUAL expr .) ]
  ! SR              [ reduce using rule 147 (expr -> variable DIV_EQUAL expr .) ]
  ! MOD             [ reduce using rule 147 (expr -> variable DIV_EQUAL expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 147 (expr -> variable DIV_EQUAL expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 147 (expr -> variable DIV_EQUAL expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 147 (expr -> variable DIV_EQUAL expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 147 (expr -> variable DIV_EQUAL expr .) ]
  ! LESS_THAN       [ reduce using rule 147 (expr -> variable DIV_EQUAL expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 147 (expr -> variable DIV_EQUAL expr .) ]
  ! GREATER_THAN    [ reduce using rule 147 (expr -> variable DIV_EQUAL expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 147 (expr -> variable DIV_EQUAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 147 (expr -> variable DIV_EQUAL expr .) ]
  ! QUESTION        [ reduce using rule 147 (expr -> variable DIV_EQUAL expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]


state 284

    (148) expr -> variable CONCAT_EQUAL expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .)
    LBRACE          reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .)
    LOGICAL_AND     reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .)
    LOGICAL_OR      reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .)
    LOGICAL_XOR     reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .)
    RPAREN          reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .)
    COMMA           reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .)
    DOUBLE_ARROW    reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .)
    RBRACKET        reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .)
    RBRACE          reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .)
    COLON           reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .)
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118

  ! BOOLEAN_AND     [ reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .) ]
  ! AND             [ reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .) ]
  ! OR              [ reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .) ]
  ! XOR             [ reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .) ]
  ! CONCAT          [ reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .) ]
  ! MUL             [ reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .) ]
  ! DIV             [ reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .) ]
  ! SL              [ reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .) ]
  ! SR              [ reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .) ]
  ! MOD             [ reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .) ]
  ! LESS_THAN       [ reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .) ]
  ! GREATER_THAN    [ reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .) ]
  ! QUESTION        [ reduce using rule 148 (expr -> variable CONCAT_EQUAL expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]


state 285

    (149) expr -> variable MOD_EQUAL expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 149 (expr -> variable MOD_EQUAL expr .)
    LBRACE          reduce using rule 149 (expr -> variable MOD_EQUAL expr .)
    LOGICAL_AND     reduce using rule 149 (expr -> variable MOD_EQUAL expr .)
    LOGICAL_OR      reduce using rule 149 (expr -> variable MOD_EQUAL expr .)
    LOGICAL_XOR     reduce using rule 149 (expr -> variable MOD_EQUAL expr .)
    RPAREN          reduce using rule 149 (expr -> variable MOD_EQUAL expr .)
    COMMA           reduce using rule 149 (expr -> variable MOD_EQUAL expr .)
    DOUBLE_ARROW    reduce using rule 149 (expr -> variable MOD_EQUAL expr .)
    RBRACKET        reduce using rule 149 (expr -> variable MOD_EQUAL expr .)
    RBRACE          reduce using rule 149 (expr -> variable MOD_EQUAL expr .)
    COLON           reduce using rule 149 (expr -> variable MOD_EQUAL expr .)
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118

  ! BOOLEAN_AND     [ reduce using rule 149 (expr -> variable MOD_EQUAL expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 149 (expr -> variable MOD_EQUAL expr .) ]
  ! AND             [ reduce using rule 149 (expr -> variable MOD_EQUAL expr .) ]
  ! OR              [ reduce using rule 149 (expr -> variable MOD_EQUAL expr .) ]
  ! XOR             [ reduce using rule 149 (expr -> variable MOD_EQUAL expr .) ]
  ! CONCAT          [ reduce using rule 149 (expr -> variable MOD_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 149 (expr -> variable MOD_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 149 (expr -> variable MOD_EQUAL expr .) ]
  ! MUL             [ reduce using rule 149 (expr -> variable MOD_EQUAL expr .) ]
  ! DIV             [ reduce using rule 149 (expr -> variable MOD_EQUAL expr .) ]
  ! SL              [ reduce using rule 149 (expr -> variable MOD_EQUAL expr .) ]
  ! SR              [ reduce using rule 149 (expr -> variable MOD_EQUAL expr .) ]
  ! MOD             [ reduce using rule 149 (expr -> variable MOD_EQUAL expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 149 (expr -> variable MOD_EQUAL expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 149 (expr -> variable MOD_EQUAL expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 149 (expr -> variable MOD_EQUAL expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 149 (expr -> variable MOD_EQUAL expr .) ]
  ! LESS_THAN       [ reduce using rule 149 (expr -> variable MOD_EQUAL expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 149 (expr -> variable MOD_EQUAL expr .) ]
  ! GREATER_THAN    [ reduce using rule 149 (expr -> variable MOD_EQUAL expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 149 (expr -> variable MOD_EQUAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 149 (expr -> variable MOD_EQUAL expr .) ]
  ! QUESTION        [ reduce using rule 149 (expr -> variable MOD_EQUAL expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]


state 286

    (150) expr -> variable AND_EQUAL expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 150 (expr -> variable AND_EQUAL expr .)
    LBRACE          reduce using rule 150 (expr -> variable AND_EQUAL expr .)
    LOGICAL_AND     reduce using rule 150 (expr -> variable AND_EQUAL expr .)
    LOGICAL_OR      reduce using rule 150 (expr -> variable AND_EQUAL expr .)
    LOGICAL_XOR     reduce using rule 150 (expr -> variable AND_EQUAL expr .)
    RPAREN          reduce using rule 150 (expr -> variable AND_EQUAL expr .)
    COMMA           reduce using rule 150 (expr -> variable AND_EQUAL expr .)
    DOUBLE_ARROW    reduce using rule 150 (expr -> variable AND_EQUAL expr .)
    RBRACKET        reduce using rule 150 (expr -> variable AND_EQUAL expr .)
    RBRACE          reduce using rule 150 (expr -> variable AND_EQUAL expr .)
    COLON           reduce using rule 150 (expr -> variable AND_EQUAL expr .)
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118

  ! BOOLEAN_AND     [ reduce using rule 150 (expr -> variable AND_EQUAL expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 150 (expr -> variable AND_EQUAL expr .) ]
  ! AND             [ reduce using rule 150 (expr -> variable AND_EQUAL expr .) ]
  ! OR              [ reduce using rule 150 (expr -> variable AND_EQUAL expr .) ]
  ! XOR             [ reduce using rule 150 (expr -> variable AND_EQUAL expr .) ]
  ! CONCAT          [ reduce using rule 150 (expr -> variable AND_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 150 (expr -> variable AND_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 150 (expr -> variable AND_EQUAL expr .) ]
  ! MUL             [ reduce using rule 150 (expr -> variable AND_EQUAL expr .) ]
  ! DIV             [ reduce using rule 150 (expr -> variable AND_EQUAL expr .) ]
  ! SL              [ reduce using rule 150 (expr -> variable AND_EQUAL expr .) ]
  ! SR              [ reduce using rule 150 (expr -> variable AND_EQUAL expr .) ]
  ! MOD             [ reduce using rule 150 (expr -> variable AND_EQUAL expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 150 (expr -> variable AND_EQUAL expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 150 (expr -> variable AND_EQUAL expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 150 (expr -> variable AND_EQUAL expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 150 (expr -> variable AND_EQUAL expr .) ]
  ! LESS_THAN       [ reduce using rule 150 (expr -> variable AND_EQUAL expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 150 (expr -> variable AND_EQUAL expr .) ]
  ! GREATER_THAN    [ reduce using rule 150 (expr -> variable AND_EQUAL expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 150 (expr -> variable AND_EQUAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 150 (expr -> variable AND_EQUAL expr .) ]
  ! QUESTION        [ reduce using rule 150 (expr -> variable AND_EQUAL expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]


state 287

    (151) expr -> variable OR_EQUAL expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 151 (expr -> variable OR_EQUAL expr .)
    LBRACE          reduce using rule 151 (expr -> variable OR_EQUAL expr .)
    LOGICAL_AND     reduce using rule 151 (expr -> variable OR_EQUAL expr .)
    LOGICAL_OR      reduce using rule 151 (expr -> variable OR_EQUAL expr .)
    LOGICAL_XOR     reduce using rule 151 (expr -> variable OR_EQUAL expr .)
    RPAREN          reduce using rule 151 (expr -> variable OR_EQUAL expr .)
    COMMA           reduce using rule 151 (expr -> variable OR_EQUAL expr .)
    DOUBLE_ARROW    reduce using rule 151 (expr -> variable OR_EQUAL expr .)
    RBRACKET        reduce using rule 151 (expr -> variable OR_EQUAL expr .)
    RBRACE          reduce using rule 151 (expr -> variable OR_EQUAL expr .)
    COLON           reduce using rule 151 (expr -> variable OR_EQUAL expr .)
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118

  ! BOOLEAN_AND     [ reduce using rule 151 (expr -> variable OR_EQUAL expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 151 (expr -> variable OR_EQUAL expr .) ]
  ! AND             [ reduce using rule 151 (expr -> variable OR_EQUAL expr .) ]
  ! OR              [ reduce using rule 151 (expr -> variable OR_EQUAL expr .) ]
  ! XOR             [ reduce using rule 151 (expr -> variable OR_EQUAL expr .) ]
  ! CONCAT          [ reduce using rule 151 (expr -> variable OR_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 151 (expr -> variable OR_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 151 (expr -> variable OR_EQUAL expr .) ]
  ! MUL             [ reduce using rule 151 (expr -> variable OR_EQUAL expr .) ]
  ! DIV             [ reduce using rule 151 (expr -> variable OR_EQUAL expr .) ]
  ! SL              [ reduce using rule 151 (expr -> variable OR_EQUAL expr .) ]
  ! SR              [ reduce using rule 151 (expr -> variable OR_EQUAL expr .) ]
  ! MOD             [ reduce using rule 151 (expr -> variable OR_EQUAL expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 151 (expr -> variable OR_EQUAL expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 151 (expr -> variable OR_EQUAL expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 151 (expr -> variable OR_EQUAL expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 151 (expr -> variable OR_EQUAL expr .) ]
  ! LESS_THAN       [ reduce using rule 151 (expr -> variable OR_EQUAL expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 151 (expr -> variable OR_EQUAL expr .) ]
  ! GREATER_THAN    [ reduce using rule 151 (expr -> variable OR_EQUAL expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 151 (expr -> variable OR_EQUAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 151 (expr -> variable OR_EQUAL expr .) ]
  ! QUESTION        [ reduce using rule 151 (expr -> variable OR_EQUAL expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]


state 288

    (152) expr -> variable XOR_EQUAL expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 152 (expr -> variable XOR_EQUAL expr .)
    LBRACE          reduce using rule 152 (expr -> variable XOR_EQUAL expr .)
    LOGICAL_AND     reduce using rule 152 (expr -> variable XOR_EQUAL expr .)
    LOGICAL_OR      reduce using rule 152 (expr -> variable XOR_EQUAL expr .)
    LOGICAL_XOR     reduce using rule 152 (expr -> variable XOR_EQUAL expr .)
    RPAREN          reduce using rule 152 (expr -> variable XOR_EQUAL expr .)
    COMMA           reduce using rule 152 (expr -> variable XOR_EQUAL expr .)
    DOUBLE_ARROW    reduce using rule 152 (expr -> variable XOR_EQUAL expr .)
    RBRACKET        reduce using rule 152 (expr -> variable XOR_EQUAL expr .)
    RBRACE          reduce using rule 152 (expr -> variable XOR_EQUAL expr .)
    COLON           reduce using rule 152 (expr -> variable XOR_EQUAL expr .)
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118

  ! BOOLEAN_AND     [ reduce using rule 152 (expr -> variable XOR_EQUAL expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 152 (expr -> variable XOR_EQUAL expr .) ]
  ! AND             [ reduce using rule 152 (expr -> variable XOR_EQUAL expr .) ]
  ! OR              [ reduce using rule 152 (expr -> variable XOR_EQUAL expr .) ]
  ! XOR             [ reduce using rule 152 (expr -> variable XOR_EQUAL expr .) ]
  ! CONCAT          [ reduce using rule 152 (expr -> variable XOR_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 152 (expr -> variable XOR_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 152 (expr -> variable XOR_EQUAL expr .) ]
  ! MUL             [ reduce using rule 152 (expr -> variable XOR_EQUAL expr .) ]
  ! DIV             [ reduce using rule 152 (expr -> variable XOR_EQUAL expr .) ]
  ! SL              [ reduce using rule 152 (expr -> variable XOR_EQUAL expr .) ]
  ! SR              [ reduce using rule 152 (expr -> variable XOR_EQUAL expr .) ]
  ! MOD             [ reduce using rule 152 (expr -> variable XOR_EQUAL expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 152 (expr -> variable XOR_EQUAL expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 152 (expr -> variable XOR_EQUAL expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 152 (expr -> variable XOR_EQUAL expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 152 (expr -> variable XOR_EQUAL expr .) ]
  ! LESS_THAN       [ reduce using rule 152 (expr -> variable XOR_EQUAL expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 152 (expr -> variable XOR_EQUAL expr .) ]
  ! GREATER_THAN    [ reduce using rule 152 (expr -> variable XOR_EQUAL expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 152 (expr -> variable XOR_EQUAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 152 (expr -> variable XOR_EQUAL expr .) ]
  ! QUESTION        [ reduce using rule 152 (expr -> variable XOR_EQUAL expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]


state 289

    (153) expr -> variable SL_EQUAL expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 153 (expr -> variable SL_EQUAL expr .)
    LBRACE          reduce using rule 153 (expr -> variable SL_EQUAL expr .)
    LOGICAL_AND     reduce using rule 153 (expr -> variable SL_EQUAL expr .)
    LOGICAL_OR      reduce using rule 153 (expr -> variable SL_EQUAL expr .)
    LOGICAL_XOR     reduce using rule 153 (expr -> variable SL_EQUAL expr .)
    RPAREN          reduce using rule 153 (expr -> variable SL_EQUAL expr .)
    COMMA           reduce using rule 153 (expr -> variable SL_EQUAL expr .)
    DOUBLE_ARROW    reduce using rule 153 (expr -> variable SL_EQUAL expr .)
    RBRACKET        reduce using rule 153 (expr -> variable SL_EQUAL expr .)
    RBRACE          reduce using rule 153 (expr -> variable SL_EQUAL expr .)
    COLON           reduce using rule 153 (expr -> variable SL_EQUAL expr .)
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118

  ! BOOLEAN_AND     [ reduce using rule 153 (expr -> variable SL_EQUAL expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 153 (expr -> variable SL_EQUAL expr .) ]
  ! AND             [ reduce using rule 153 (expr -> variable SL_EQUAL expr .) ]
  ! OR              [ reduce using rule 153 (expr -> variable SL_EQUAL expr .) ]
  ! XOR             [ reduce using rule 153 (expr -> variable SL_EQUAL expr .) ]
  ! CONCAT          [ reduce using rule 153 (expr -> variable SL_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 153 (expr -> variable SL_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 153 (expr -> variable SL_EQUAL expr .) ]
  ! MUL             [ reduce using rule 153 (expr -> variable SL_EQUAL expr .) ]
  ! DIV             [ reduce using rule 153 (expr -> variable SL_EQUAL expr .) ]
  ! SL              [ reduce using rule 153 (expr -> variable SL_EQUAL expr .) ]
  ! SR              [ reduce using rule 153 (expr -> variable SL_EQUAL expr .) ]
  ! MOD             [ reduce using rule 153 (expr -> variable SL_EQUAL expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 153 (expr -> variable SL_EQUAL expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 153 (expr -> variable SL_EQUAL expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 153 (expr -> variable SL_EQUAL expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 153 (expr -> variable SL_EQUAL expr .) ]
  ! LESS_THAN       [ reduce using rule 153 (expr -> variable SL_EQUAL expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 153 (expr -> variable SL_EQUAL expr .) ]
  ! GREATER_THAN    [ reduce using rule 153 (expr -> variable SL_EQUAL expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 153 (expr -> variable SL_EQUAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 153 (expr -> variable SL_EQUAL expr .) ]
  ! QUESTION        [ reduce using rule 153 (expr -> variable SL_EQUAL expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]


state 290

    (154) expr -> variable SR_EQUAL expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 154 (expr -> variable SR_EQUAL expr .)
    LBRACE          reduce using rule 154 (expr -> variable SR_EQUAL expr .)
    LOGICAL_AND     reduce using rule 154 (expr -> variable SR_EQUAL expr .)
    LOGICAL_OR      reduce using rule 154 (expr -> variable SR_EQUAL expr .)
    LOGICAL_XOR     reduce using rule 154 (expr -> variable SR_EQUAL expr .)
    RPAREN          reduce using rule 154 (expr -> variable SR_EQUAL expr .)
    COMMA           reduce using rule 154 (expr -> variable SR_EQUAL expr .)
    DOUBLE_ARROW    reduce using rule 154 (expr -> variable SR_EQUAL expr .)
    RBRACKET        reduce using rule 154 (expr -> variable SR_EQUAL expr .)
    RBRACE          reduce using rule 154 (expr -> variable SR_EQUAL expr .)
    COLON           reduce using rule 154 (expr -> variable SR_EQUAL expr .)
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118

  ! BOOLEAN_AND     [ reduce using rule 154 (expr -> variable SR_EQUAL expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 154 (expr -> variable SR_EQUAL expr .) ]
  ! AND             [ reduce using rule 154 (expr -> variable SR_EQUAL expr .) ]
  ! OR              [ reduce using rule 154 (expr -> variable SR_EQUAL expr .) ]
  ! XOR             [ reduce using rule 154 (expr -> variable SR_EQUAL expr .) ]
  ! CONCAT          [ reduce using rule 154 (expr -> variable SR_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 154 (expr -> variable SR_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 154 (expr -> variable SR_EQUAL expr .) ]
  ! MUL             [ reduce using rule 154 (expr -> variable SR_EQUAL expr .) ]
  ! DIV             [ reduce using rule 154 (expr -> variable SR_EQUAL expr .) ]
  ! SL              [ reduce using rule 154 (expr -> variable SR_EQUAL expr .) ]
  ! SR              [ reduce using rule 154 (expr -> variable SR_EQUAL expr .) ]
  ! MOD             [ reduce using rule 154 (expr -> variable SR_EQUAL expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 154 (expr -> variable SR_EQUAL expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 154 (expr -> variable SR_EQUAL expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 154 (expr -> variable SR_EQUAL expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 154 (expr -> variable SR_EQUAL expr .) ]
  ! LESS_THAN       [ reduce using rule 154 (expr -> variable SR_EQUAL expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 154 (expr -> variable SR_EQUAL expr .) ]
  ! GREATER_THAN    [ reduce using rule 154 (expr -> variable SR_EQUAL expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 154 (expr -> variable SR_EQUAL expr .) ]
  ! INSTANCEOF      [ reduce using rule 154 (expr -> variable SR_EQUAL expr .) ]
  ! QUESTION        [ reduce using rule 154 (expr -> variable SR_EQUAL expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]


state 291

    (111) variable -> variable LBRACKET dim_offset . RBRACKET

    RBRACKET        shift and go to state 371


state 292

    (98) assignment_list_element -> LIST . LPAREN assignment_list RPAREN

    LPAREN          shift and go to state 372


state 293

    (93) expr -> LIST LPAREN assignment_list . RPAREN EQUALS expr
    (94) assignment_list -> assignment_list . COMMA assignment_list_element

    RPAREN          shift and go to state 373
    COMMA           shift and go to state 374


state 294

    (95) assignment_list -> assignment_list_element .

    RPAREN          reduce using rule 95 (assignment_list -> assignment_list_element .)
    COMMA           reduce using rule 95 (assignment_list -> assignment_list_element .)


state 295

    (96) assignment_list_element -> variable .
    (111) variable -> variable . LBRACKET dim_offset RBRACKET

    RPAREN          reduce using rule 96 (assignment_list_element -> variable .)
    COMMA           reduce using rule 96 (assignment_list_element -> variable .)
    LBRACKET        shift and go to state 160


state 296

    (97) assignment_list_element -> empty .

    RPAREN          reduce using rule 97 (assignment_list_element -> empty .)
    COMMA           reduce using rule 97 (assignment_list_element -> empty .)


state 297

    (122) expr -> ARRAY LPAREN array_pair_list . RPAREN

    RPAREN          shift and go to state 375


state 298

    (104) fucntion_call_body -> LPAREN nonempty_function_call_parameter_list . RPAREN
    (133) nonempty_function_call_parameter_list -> nonempty_function_call_parameter_list . COMMA function_call_parameter
    (126) non_empty_array_pair_list -> nonempty_function_call_parameter_list .

  ! shift/reduce conflict for COMMA resolved as shift
  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 368
    COMMA           shift and go to state 305

  ! COMMA           [ reduce using rule 126 (non_empty_array_pair_list -> nonempty_function_call_parameter_list .) ]
  ! RPAREN          [ reduce using rule 126 (non_empty_array_pair_list -> nonempty_function_call_parameter_list .) ]


state 299

    (105) fucntion_call_body -> LPAREN empty . RPAREN
    (124) array_pair_list -> empty .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 369

  ! RPAREN          [ reduce using rule 124 (array_pair_list -> empty .) ]


state 300

    (129) non_empty_array_pair_list -> expr . DOUBLE_ARROW AND variable
    (130) non_empty_array_pair_list -> expr . DOUBLE_ARROW expr
    (135) function_call_parameter -> expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    DOUBLE_ARROW    shift and go to state 306
    RPAREN          reduce using rule 135 (function_call_parameter -> expr .)
    COMMA           reduce using rule 135 (function_call_parameter -> expr .)
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 301

    (123) expr -> LBRACKET array_pair_list RBRACKET .

    SEMI_COLON      reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    LBRACE          reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    BOOLEAN_AND     reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    BOOLEAN_OR      reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    LOGICAL_AND     reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    LOGICAL_OR      reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    LOGICAL_XOR     reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    AND             reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    OR              reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    XOR             reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    CONCAT          reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    PLUS            reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    MINUS           reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    MUL             reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    DIV             reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    SL              reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    SR              reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    MOD             reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    IS_IDENTICAL    reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    IS_NOT_IDENTICAL reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    IS_EQUAL_TO     reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    IS_NOT_EQUAL    reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    LESS_THAN       reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    LESS_THAN_OR_EQUAL reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    GREATER_THAN    reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    GRATER_THAN_OR_EQUAL reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    INSTANCEOF      reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    QUESTION        reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    RPAREN          reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    COMMA           reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    DOUBLE_ARROW    reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    RBRACKET        reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    RBRACE          reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)
    COLON           reduce using rule 123 (expr -> LBRACKET array_pair_list RBRACKET .)


state 302

    (125) array_pair_list -> non_empty_array_pair_list possible_comma .

    RBRACKET        reduce using rule 125 (array_pair_list -> non_empty_array_pair_list possible_comma .)
    RPAREN          reduce using rule 125 (array_pair_list -> non_empty_array_pair_list possible_comma .)


state 303

    (127) non_empty_array_pair_list -> non_empty_array_pair_list COMMA . expr DOUBLE_ARROW AND variable
    (128) non_empty_array_pair_list -> non_empty_array_pair_list COMMA . expr DOUBLE_ARROW expr
    (132) possible_comma -> COMMA .
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    RBRACKET        reduce using rule 132 (possible_comma -> COMMA .)
    RPAREN          reduce using rule 132 (possible_comma -> COMMA .)
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 376
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 304

    (131) possible_comma -> empty .

    RBRACKET        reduce using rule 131 (possible_comma -> empty .)
    RPAREN          reduce using rule 131 (possible_comma -> empty .)


state 305

    (133) nonempty_function_call_parameter_list -> nonempty_function_call_parameter_list COMMA . function_call_parameter
    (135) function_call_parameter -> . expr
    (136) function_call_parameter -> . AND variable
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    AND             shift and go to state 170
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    function_call_parameter        shift and go to state 377
    expr                           shift and go to state 277
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 306

    (129) non_empty_array_pair_list -> expr DOUBLE_ARROW . AND variable
    (130) non_empty_array_pair_list -> expr DOUBLE_ARROW . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    AND             shift and go to state 379
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 378
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 307

    (136) function_call_parameter -> AND variable .
    (111) variable -> variable . LBRACKET dim_offset RBRACKET

    COMMA           reduce using rule 136 (function_call_parameter -> AND variable .)
    RBRACKET        reduce using rule 136 (function_call_parameter -> AND variable .)
    RPAREN          reduce using rule 136 (function_call_parameter -> AND variable .)
    LBRACKET        shift and go to state 160


state 308

    (198) expr -> ISSET LPAREN isset_variables . RPAREN
    (199) isset_variables -> isset_variables . COMMA variable

    RPAREN          shift and go to state 380
    COMMA           shift and go to state 381


state 309

    (200) isset_variables -> variable .
    (111) variable -> variable . LBRACKET dim_offset RBRACKET

    RPAREN          reduce using rule 200 (isset_variables -> variable .)
    COMMA           reduce using rule 200 (isset_variables -> variable .)
    LBRACKET        shift and go to state 160


state 310

    (201) expr -> EMPTY LPAREN expr . RPAREN
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    RPAREN          shift and go to state 382
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 311

    (202) expr -> EVAL LPAREN expr . RPAREN
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    RPAREN          shift and go to state 383
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 312

    (210) expr -> exit_or_die LPAREN RPAREN .

    SEMI_COLON      reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    LBRACE          reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    BOOLEAN_AND     reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    BOOLEAN_OR      reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    LOGICAL_AND     reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    LOGICAL_OR      reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    LOGICAL_XOR     reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    AND             reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    OR              reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    XOR             reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    CONCAT          reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    PLUS            reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    MINUS           reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    MUL             reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    DIV             reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    SL              reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    SR              reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    MOD             reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    IS_IDENTICAL    reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    IS_EQUAL_TO     reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    IS_NOT_EQUAL    reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    LESS_THAN       reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    LESS_THAN_OR_EQUAL reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    GREATER_THAN    reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    GRATER_THAN_OR_EQUAL reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    INSTANCEOF      reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    QUESTION        reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    RPAREN          reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    COMMA           reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    DOUBLE_ARROW    reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    RBRACKET        reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    RBRACE          reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)
    COLON           reduce using rule 210 (expr -> exit_or_die LPAREN RPAREN .)


state 313

    (211) expr -> exit_or_die LPAREN expr . RPAREN
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    RPAREN          shift and go to state 384
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 314

    (217) scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .

    SEMI_COLON      reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    LBRACE          reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    BOOLEAN_AND     reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    BOOLEAN_OR      reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    LOGICAL_AND     reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    LOGICAL_OR      reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    LOGICAL_XOR     reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    AND             reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    OR              reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    XOR             reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    CONCAT          reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    PLUS            reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    MINUS           reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    MUL             reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    DIV             reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    SL              reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    SR              reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    MOD             reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    IS_IDENTICAL    reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    IS_NOT_IDENTICAL reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    IS_EQUAL_TO     reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    IS_NOT_EQUAL    reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    LESS_THAN       reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    LESS_THAN_OR_EQUAL reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    GREATER_THAN    reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    GRATER_THAN_OR_EQUAL reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    INSTANCEOF      reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    QUESTION        reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    RPAREN          reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    COMMA           reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    DOUBLE_ARROW    reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    RBRACKET        reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    RBRACE          reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    COLON           reduce using rule 217 (scalar -> DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)


state 315

    (279) encaps_list -> encaps_list encaps_var .

    DOUBLE_QUOTE    reduce using rule 279 (encaps_list -> encaps_list encaps_var .)
    VARIABLE        reduce using rule 279 (encaps_list -> encaps_list encaps_var .)
    DOLLAR_OPEN_CURLY_BRACES reduce using rule 279 (encaps_list -> encaps_list encaps_var .)
    CURLY_OPEN      reduce using rule 279 (encaps_list -> encaps_list encaps_var .)
    END_HEREDOC     reduce using rule 279 (encaps_list -> encaps_list encaps_var .)


state 316

    (281) encaps_var -> VARIABLE .
    (282) encaps_var -> VARIABLE . LBRACKET encaps_var_offset RBRACKET

    DOUBLE_QUOTE    reduce using rule 281 (encaps_var -> VARIABLE .)
    VARIABLE        reduce using rule 281 (encaps_var -> VARIABLE .)
    DOLLAR_OPEN_CURLY_BRACES reduce using rule 281 (encaps_var -> VARIABLE .)
    CURLY_OPEN      reduce using rule 281 (encaps_var -> VARIABLE .)
    END_HEREDOC     reduce using rule 281 (encaps_var -> VARIABLE .)
    LBRACKET        shift and go to state 385


state 317

    (283) encaps_var -> DOLLAR_OPEN_CURLY_BRACES . expr RBRACE
    (284) encaps_var -> DOLLAR_OPEN_CURLY_BRACES . STRING_VARNAME LBRACKET expr RBRACKET RBRACE
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    STRING_VARNAME  shift and go to state 387
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 386
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 318

    (285) encaps_var -> CURLY_OPEN . variable RBRACE
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    IDENTIFIER      shift and go to state 177
    ARRAY           shift and go to state 178
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    variable                       shift and go to state 388
    base_variable_with_function_calls shift and go to state 57
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 319

    (221) scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .

    SEMI_COLON      reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    LBRACE          reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    BOOLEAN_AND     reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    BOOLEAN_OR      reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    LOGICAL_AND     reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    LOGICAL_OR      reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    LOGICAL_XOR     reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    AND             reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    OR              reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    XOR             reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    CONCAT          reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    PLUS            reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    MINUS           reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    MUL             reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    DIV             reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    SL              reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    SR              reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    MOD             reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    IS_IDENTICAL    reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    IS_NOT_IDENTICAL reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    IS_EQUAL_TO     reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    IS_NOT_EQUAL    reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    LESS_THAN       reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    LESS_THAN_OR_EQUAL reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    GREATER_THAN    reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    GRATER_THAN_OR_EQUAL reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    INSTANCEOF      reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    QUESTION        reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    RPAREN          reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    COMMA           reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    DOUBLE_ARROW    reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    RBRACKET        reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    RBRACE          reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)
    COLON           reduce using rule 221 (scalar_heredoc -> START_HEREDOC encaps_list END_HEREDOC .)


state 320

    (215) nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .

    SEMI_COLON      reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    LBRACE          reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    BOOLEAN_AND     reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    BOOLEAN_OR      reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    LOGICAL_AND     reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    LOGICAL_OR      reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    LOGICAL_XOR     reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    AND             reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    OR              reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    XOR             reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    CONCAT          reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    PLUS            reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    MINUS           reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    MUL             reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    DIV             reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    SL              reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    SR              reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    MOD             reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    IS_IDENTICAL    reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    IS_NOT_IDENTICAL reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    IS_EQUAL_TO     reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    IS_NOT_EQUAL    reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    LESS_THAN       reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    LESS_THAN_OR_EQUAL reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    GREATER_THAN    reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    GRATER_THAN_OR_EQUAL reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    INSTANCEOF      reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    QUESTION        reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    RPAREN          reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    COMMA           reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    DOUBLE_ARROW    reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    RBRACKET        reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    RBRACE          reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)
    COLON           reduce using rule 215 (nowdoc -> START_NOWDOC nowdoc_text_content END_NOWDOC .)


state 321

    (222) nowdoc_text_content -> nowdoc_text_content ENCAPSED_AND_WHITESPACE .

    END_NOWDOC      reduce using rule 222 (nowdoc_text_content -> nowdoc_text_content ENCAPSED_AND_WHITESPACE .)
    ENCAPSED_AND_WHITESPACE reduce using rule 222 (nowdoc_text_content -> nowdoc_text_content ENCAPSED_AND_WHITESPACE .)


state 322

    (106) function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list . RPAREN
    (133) nonempty_function_call_parameter_list -> nonempty_function_call_parameter_list . COMMA function_call_parameter

    RPAREN          shift and go to state 389
    COMMA           shift and go to state 305


state 323

    (107) function_call -> variable_without_objects LPAREN empty . RPAREN

    RPAREN          shift and go to state 390


state 324

    (117) compound_variable -> DOLLAR LBRACE expr . RBRACE
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    RBRACE          shift and go to state 391
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 325

    (112) reference_variable -> reference_variable LBRACKET dim_offset . RBRACKET

    RBRACKET        shift and go to state 392


state 326

    (113) reference_variable -> reference_variable LBRACE expr . RBRACE
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    RBRACE          shift and go to state 393
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 327

    (6) top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .

    HALT_COMPILER   reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    CONST           reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    LBRACE          reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    IF              reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    WHILE           reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    DO              reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    FOR             reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    SWITCH          reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    BREAK           reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    CONTINUE        reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    RETURN          reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    GLOBAL          reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    STATIC          reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    ECHO            reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    INLINE_HTML     reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    UNSET           reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    SEMI_COLON      reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    FUNCTION        reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    CLONE           reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    LIST            reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    ARRAY           reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    LBRACKET        reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    PLUS            reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    MINUS           reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    NOT             reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    INC             reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    DEC             reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    INT_CAST        reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    ARRAY_CAST      reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    STRING_CAST     reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    BOOL_CAST       reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    UNSET_CAST      reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    BINARY_CAST     reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    ISSET           reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    EMPTY           reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    EVAL            reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    INCLUDE         reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    REQUIRE         reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    PRINT           reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    AT              reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    LPAREN          reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    IDENTIFIER      reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    EXIT            reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    DIE             reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    INT_NUMBER      reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    FUNC_C          reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    METHOD_C        reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    LINE            reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    FILE            reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    DIR             reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    START_HEREDOC   reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    START_NOWDOC    reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    DOLLAR          reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    VARIABLE        reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)
    $end            reduce using rule 6 (top_statement -> HALT_COMPILER LPAREN RPAREN SEMI_COLON .)


state 328

    (8) constant_declarations -> constant_declarations COMMA constant_declaration .

    SEMI_COLON      reduce using rule 8 (constant_declarations -> constant_declarations COMMA constant_declaration .)
    COMMA           reduce using rule 8 (constant_declarations -> constant_declarations COMMA constant_declaration .)


state 329

    (242) static_scalar -> IDENTIFIER .
    (228) common_scalar -> IDENTIFIER . CONSTANT_ENCAPSED_STRING

    BOOLEAN_AND     reduce using rule 242 (static_scalar -> IDENTIFIER .)
    BOOLEAN_OR      reduce using rule 242 (static_scalar -> IDENTIFIER .)
    LOGICAL_AND     reduce using rule 242 (static_scalar -> IDENTIFIER .)
    LOGICAL_OR      reduce using rule 242 (static_scalar -> IDENTIFIER .)
    LOGICAL_XOR     reduce using rule 242 (static_scalar -> IDENTIFIER .)
    AND             reduce using rule 242 (static_scalar -> IDENTIFIER .)
    OR              reduce using rule 242 (static_scalar -> IDENTIFIER .)
    XOR             reduce using rule 242 (static_scalar -> IDENTIFIER .)
    CONCAT          reduce using rule 242 (static_scalar -> IDENTIFIER .)
    PLUS            reduce using rule 242 (static_scalar -> IDENTIFIER .)
    MINUS           reduce using rule 242 (static_scalar -> IDENTIFIER .)
    MUL             reduce using rule 242 (static_scalar -> IDENTIFIER .)
    DIV             reduce using rule 242 (static_scalar -> IDENTIFIER .)
    SL              reduce using rule 242 (static_scalar -> IDENTIFIER .)
    SR              reduce using rule 242 (static_scalar -> IDENTIFIER .)
    MOD             reduce using rule 242 (static_scalar -> IDENTIFIER .)
    IS_IDENTICAL    reduce using rule 242 (static_scalar -> IDENTIFIER .)
    IS_NOT_IDENTICAL reduce using rule 242 (static_scalar -> IDENTIFIER .)
    IS_EQUAL_TO     reduce using rule 242 (static_scalar -> IDENTIFIER .)
    IS_NOT_EQUAL    reduce using rule 242 (static_scalar -> IDENTIFIER .)
    LESS_THAN       reduce using rule 242 (static_scalar -> IDENTIFIER .)
    LESS_THAN_OR_EQUAL reduce using rule 242 (static_scalar -> IDENTIFIER .)
    GREATER_THAN    reduce using rule 242 (static_scalar -> IDENTIFIER .)
    GRATER_THAN_OR_EQUAL reduce using rule 242 (static_scalar -> IDENTIFIER .)
    SEMI_COLON      reduce using rule 242 (static_scalar -> IDENTIFIER .)
    COMMA           reduce using rule 242 (static_scalar -> IDENTIFIER .)
    RPAREN          reduce using rule 242 (static_scalar -> IDENTIFIER .)
    DOUBLE_ARROW    reduce using rule 242 (static_scalar -> IDENTIFIER .)
    RBRACKET        reduce using rule 242 (static_scalar -> IDENTIFIER .)
    CONSTANT_ENCAPSED_STRING shift and go to state 143


state 330

    (10) constant_declaration -> IDENTIFIER EQUALS static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    SEMI_COLON      reduce using rule 10 (constant_declaration -> IDENTIFIER EQUALS static_expr .)
    COMMA           reduce using rule 10 (constant_declaration -> IDENTIFIER EQUALS static_expr .)
    BOOLEAN_AND     shift and go to state 394
    BOOLEAN_OR      shift and go to state 395
    LOGICAL_AND     shift and go to state 396
    LOGICAL_OR      shift and go to state 397
    LOGICAL_XOR     shift and go to state 398
    AND             shift and go to state 399
    OR              shift and go to state 400
    XOR             shift and go to state 401
    CONCAT          shift and go to state 402
    PLUS            shift and go to state 403
    MINUS           shift and go to state 404
    MUL             shift and go to state 405
    DIV             shift and go to state 406
    SL              shift and go to state 407
    SR              shift and go to state 408
    MOD             shift and go to state 409
    IS_IDENTICAL    shift and go to state 410
    IS_NOT_IDENTICAL shift and go to state 411
    IS_EQUAL_TO     shift and go to state 412
    IS_NOT_EQUAL    shift and go to state 413
    LESS_THAN       shift and go to state 414
    LESS_THAN_OR_EQUAL shift and go to state 415
    GREATER_THAN    shift and go to state 416
    GRATER_THAN_OR_EQUAL shift and go to state 417


state 331

    (253) static_expr -> static_scalar .

    BOOLEAN_AND     reduce using rule 253 (static_expr -> static_scalar .)
    BOOLEAN_OR      reduce using rule 253 (static_expr -> static_scalar .)
    LOGICAL_AND     reduce using rule 253 (static_expr -> static_scalar .)
    LOGICAL_OR      reduce using rule 253 (static_expr -> static_scalar .)
    LOGICAL_XOR     reduce using rule 253 (static_expr -> static_scalar .)
    AND             reduce using rule 253 (static_expr -> static_scalar .)
    OR              reduce using rule 253 (static_expr -> static_scalar .)
    XOR             reduce using rule 253 (static_expr -> static_scalar .)
    CONCAT          reduce using rule 253 (static_expr -> static_scalar .)
    PLUS            reduce using rule 253 (static_expr -> static_scalar .)
    MINUS           reduce using rule 253 (static_expr -> static_scalar .)
    MUL             reduce using rule 253 (static_expr -> static_scalar .)
    DIV             reduce using rule 253 (static_expr -> static_scalar .)
    SL              reduce using rule 253 (static_expr -> static_scalar .)
    SR              reduce using rule 253 (static_expr -> static_scalar .)
    MOD             reduce using rule 253 (static_expr -> static_scalar .)
    IS_IDENTICAL    reduce using rule 253 (static_expr -> static_scalar .)
    IS_NOT_IDENTICAL reduce using rule 253 (static_expr -> static_scalar .)
    IS_EQUAL_TO     reduce using rule 253 (static_expr -> static_scalar .)
    IS_NOT_EQUAL    reduce using rule 253 (static_expr -> static_scalar .)
    LESS_THAN       reduce using rule 253 (static_expr -> static_scalar .)
    LESS_THAN_OR_EQUAL reduce using rule 253 (static_expr -> static_scalar .)
    GREATER_THAN    reduce using rule 253 (static_expr -> static_scalar .)
    GRATER_THAN_OR_EQUAL reduce using rule 253 (static_expr -> static_scalar .)
    SEMI_COLON      reduce using rule 253 (static_expr -> static_scalar .)
    COMMA           reduce using rule 253 (static_expr -> static_scalar .)
    RPAREN          reduce using rule 253 (static_expr -> static_scalar .)
    RBRACKET        reduce using rule 253 (static_expr -> static_scalar .)


state 332

    (243) static_scalar -> PLUS . static_scalar
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_scalar                  shift and go to state 418
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 333

    (244) static_scalar -> MINUS . static_scalar
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_scalar                  shift and go to state 419
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 334

    (278) static_expr -> LPAREN . static_expr RPAREN
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 420
    static_scalar                  shift and go to state 331
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 335

    (234) static_scalar -> common_scalar .

    BOOLEAN_AND     reduce using rule 234 (static_scalar -> common_scalar .)
    BOOLEAN_OR      reduce using rule 234 (static_scalar -> common_scalar .)
    LOGICAL_AND     reduce using rule 234 (static_scalar -> common_scalar .)
    LOGICAL_OR      reduce using rule 234 (static_scalar -> common_scalar .)
    LOGICAL_XOR     reduce using rule 234 (static_scalar -> common_scalar .)
    AND             reduce using rule 234 (static_scalar -> common_scalar .)
    OR              reduce using rule 234 (static_scalar -> common_scalar .)
    XOR             reduce using rule 234 (static_scalar -> common_scalar .)
    CONCAT          reduce using rule 234 (static_scalar -> common_scalar .)
    PLUS            reduce using rule 234 (static_scalar -> common_scalar .)
    MINUS           reduce using rule 234 (static_scalar -> common_scalar .)
    MUL             reduce using rule 234 (static_scalar -> common_scalar .)
    DIV             reduce using rule 234 (static_scalar -> common_scalar .)
    SL              reduce using rule 234 (static_scalar -> common_scalar .)
    SR              reduce using rule 234 (static_scalar -> common_scalar .)
    MOD             reduce using rule 234 (static_scalar -> common_scalar .)
    IS_IDENTICAL    reduce using rule 234 (static_scalar -> common_scalar .)
    IS_NOT_IDENTICAL reduce using rule 234 (static_scalar -> common_scalar .)
    IS_EQUAL_TO     reduce using rule 234 (static_scalar -> common_scalar .)
    IS_NOT_EQUAL    reduce using rule 234 (static_scalar -> common_scalar .)
    LESS_THAN       reduce using rule 234 (static_scalar -> common_scalar .)
    LESS_THAN_OR_EQUAL reduce using rule 234 (static_scalar -> common_scalar .)
    GREATER_THAN    reduce using rule 234 (static_scalar -> common_scalar .)
    GRATER_THAN_OR_EQUAL reduce using rule 234 (static_scalar -> common_scalar .)
    SEMI_COLON      reduce using rule 234 (static_scalar -> common_scalar .)
    COMMA           reduce using rule 234 (static_scalar -> common_scalar .)
    RPAREN          reduce using rule 234 (static_scalar -> common_scalar .)
    DOUBLE_ARROW    reduce using rule 234 (static_scalar -> common_scalar .)
    RBRACKET        reduce using rule 234 (static_scalar -> common_scalar .)


state 336

    (235) static_scalar -> DOUBLE_QUOTE . DOUBLE_QUOTE
    (236) static_scalar -> DOUBLE_QUOTE . ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE

    DOUBLE_QUOTE    shift and go to state 421
    ENCAPSED_AND_WHITESPACE shift and go to state 422


state 337

    (237) static_scalar -> static_heredoc .

    BOOLEAN_AND     reduce using rule 237 (static_scalar -> static_heredoc .)
    BOOLEAN_OR      reduce using rule 237 (static_scalar -> static_heredoc .)
    LOGICAL_AND     reduce using rule 237 (static_scalar -> static_heredoc .)
    LOGICAL_OR      reduce using rule 237 (static_scalar -> static_heredoc .)
    LOGICAL_XOR     reduce using rule 237 (static_scalar -> static_heredoc .)
    AND             reduce using rule 237 (static_scalar -> static_heredoc .)
    OR              reduce using rule 237 (static_scalar -> static_heredoc .)
    XOR             reduce using rule 237 (static_scalar -> static_heredoc .)
    CONCAT          reduce using rule 237 (static_scalar -> static_heredoc .)
    PLUS            reduce using rule 237 (static_scalar -> static_heredoc .)
    MINUS           reduce using rule 237 (static_scalar -> static_heredoc .)
    MUL             reduce using rule 237 (static_scalar -> static_heredoc .)
    DIV             reduce using rule 237 (static_scalar -> static_heredoc .)
    SL              reduce using rule 237 (static_scalar -> static_heredoc .)
    SR              reduce using rule 237 (static_scalar -> static_heredoc .)
    MOD             reduce using rule 237 (static_scalar -> static_heredoc .)
    IS_IDENTICAL    reduce using rule 237 (static_scalar -> static_heredoc .)
    IS_NOT_IDENTICAL reduce using rule 237 (static_scalar -> static_heredoc .)
    IS_EQUAL_TO     reduce using rule 237 (static_scalar -> static_heredoc .)
    IS_NOT_EQUAL    reduce using rule 237 (static_scalar -> static_heredoc .)
    LESS_THAN       reduce using rule 237 (static_scalar -> static_heredoc .)
    LESS_THAN_OR_EQUAL reduce using rule 237 (static_scalar -> static_heredoc .)
    GREATER_THAN    reduce using rule 237 (static_scalar -> static_heredoc .)
    GRATER_THAN_OR_EQUAL reduce using rule 237 (static_scalar -> static_heredoc .)
    SEMI_COLON      reduce using rule 237 (static_scalar -> static_heredoc .)
    COMMA           reduce using rule 237 (static_scalar -> static_heredoc .)
    RPAREN          reduce using rule 237 (static_scalar -> static_heredoc .)
    DOUBLE_ARROW    reduce using rule 237 (static_scalar -> static_heredoc .)
    RBRACKET        reduce using rule 237 (static_scalar -> static_heredoc .)


state 338

    (238) static_scalar -> nowdoc .

    BOOLEAN_AND     reduce using rule 238 (static_scalar -> nowdoc .)
    BOOLEAN_OR      reduce using rule 238 (static_scalar -> nowdoc .)
    LOGICAL_AND     reduce using rule 238 (static_scalar -> nowdoc .)
    LOGICAL_OR      reduce using rule 238 (static_scalar -> nowdoc .)
    LOGICAL_XOR     reduce using rule 238 (static_scalar -> nowdoc .)
    AND             reduce using rule 238 (static_scalar -> nowdoc .)
    OR              reduce using rule 238 (static_scalar -> nowdoc .)
    XOR             reduce using rule 238 (static_scalar -> nowdoc .)
    CONCAT          reduce using rule 238 (static_scalar -> nowdoc .)
    PLUS            reduce using rule 238 (static_scalar -> nowdoc .)
    MINUS           reduce using rule 238 (static_scalar -> nowdoc .)
    MUL             reduce using rule 238 (static_scalar -> nowdoc .)
    DIV             reduce using rule 238 (static_scalar -> nowdoc .)
    SL              reduce using rule 238 (static_scalar -> nowdoc .)
    SR              reduce using rule 238 (static_scalar -> nowdoc .)
    MOD             reduce using rule 238 (static_scalar -> nowdoc .)
    IS_IDENTICAL    reduce using rule 238 (static_scalar -> nowdoc .)
    IS_NOT_IDENTICAL reduce using rule 238 (static_scalar -> nowdoc .)
    IS_EQUAL_TO     reduce using rule 238 (static_scalar -> nowdoc .)
    IS_NOT_EQUAL    reduce using rule 238 (static_scalar -> nowdoc .)
    LESS_THAN       reduce using rule 238 (static_scalar -> nowdoc .)
    LESS_THAN_OR_EQUAL reduce using rule 238 (static_scalar -> nowdoc .)
    GREATER_THAN    reduce using rule 238 (static_scalar -> nowdoc .)
    GRATER_THAN_OR_EQUAL reduce using rule 238 (static_scalar -> nowdoc .)
    SEMI_COLON      reduce using rule 238 (static_scalar -> nowdoc .)
    COMMA           reduce using rule 238 (static_scalar -> nowdoc .)
    RPAREN          reduce using rule 238 (static_scalar -> nowdoc .)
    DOUBLE_ARROW    reduce using rule 238 (static_scalar -> nowdoc .)
    RBRACKET        reduce using rule 238 (static_scalar -> nowdoc .)


state 339

    (245) static_scalar -> ARRAY . LPAREN static_array_pair_list RPAREN

    LPAREN          shift and go to state 423


state 340

    (246) static_scalar -> LBRACKET . static_array_pair_list RBRACKET
    (247) static_array_pair_list -> . empty
    (248) static_array_pair_list -> . static_non_empty_array_pair_list possible_comma
    (289) empty -> .
    (249) static_non_empty_array_pair_list -> . static_non_empty_array_pair_list COMMA static_expr
    (250) static_non_empty_array_pair_list -> . static_expr
    (251) static_non_empty_array_pair_list -> . static_non_empty_array_pair_list COMMA static_scalar DOUBLE_ARROW static_expr
    (252) static_non_empty_array_pair_list -> . static_scalar DOUBLE_ARROW static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    RBRACKET        reduce using rule 289 (empty -> .)
    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_array_pair_list         shift and go to state 424
    empty                          shift and go to state 425
    static_non_empty_array_pair_list shift and go to state 426
    static_expr                    shift and go to state 427
    static_scalar                  shift and go to state 428
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 341

    (239) static_heredoc -> START_HEREDOC . multiple_encapsed END_HEREDOC
    (240) multiple_encapsed -> . multiple_encapsed ENCAPSED_AND_WHITESPACE
    (241) multiple_encapsed -> . empty
    (289) empty -> .

    END_HEREDOC     reduce using rule 289 (empty -> .)
    ENCAPSED_AND_WHITESPACE reduce using rule 289 (empty -> .)

    multiple_encapsed              shift and go to state 429
    empty                          shift and go to state 430

state 342

    (15) inner_statement -> YIELD SEMI_COLON .

    RBRACE          reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    YIELD           reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    LBRACE          reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    IF              reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    WHILE           reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    DO              reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    FOR             reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    SWITCH          reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    BREAK           reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    CONTINUE        reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    RETURN          reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    GLOBAL          reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    STATIC          reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    ECHO            reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    INLINE_HTML     reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    UNSET           reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    SEMI_COLON      reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    FUNCTION        reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    CLONE           reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    LIST            reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    ARRAY           reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    LBRACKET        reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    PLUS            reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    MINUS           reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    NOT             reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    INC             reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    DEC             reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    INT_CAST        reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    ARRAY_CAST      reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    STRING_CAST     reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    BOOL_CAST       reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    UNSET_CAST      reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    BINARY_CAST     reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    ISSET           reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    EMPTY           reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    EVAL            reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    INCLUDE         reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    REQUIRE         reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    PRINT           reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    AT              reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    LPAREN          reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    IDENTIFIER      reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    EXIT            reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    DIE             reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    INT_NUMBER      reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    FUNC_C          reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    METHOD_C        reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    LINE            reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    FILE            reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    DIR             reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    START_HEREDOC   reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    START_NOWDOC    reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    DOLLAR          reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    VARIABLE        reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    ELSEIF          reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    ELSE            reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    ENDIF           reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    ENDWHILE        reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    ENDSWITCH       reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    ENDFOR          reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    CASE            reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)
    DEFAULT         reduce using rule 15 (inner_statement -> YIELD SEMI_COLON .)


state 343

    (16) inner_statement -> YIELD expr . SEMI_COLON
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      shift and go to state 431
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 344

    (18) statement -> IF LPAREN expr RPAREN . statement elseif_list else_single
    (19) statement -> IF LPAREN expr RPAREN . COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list else_single
    (19) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (20) statement -> . WHILE LPAREN expr RPAREN while_statement
    (21) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (22) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (23) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (24) statement -> . BREAK SEMI_COLON
    (25) statement -> . BREAK expr SEMI_COLON
    (26) statement -> . CONTINUE SEMI_COLON
    (27) statement -> . CONTINUE expr SEMI_COLON
    (28) statement -> . RETURN SEMI_COLON
    (29) statement -> . RETURN expr SEMI_COLON
    (30) statement -> . GLOBAL global_var_list SEMI_COLON
    (31) statement -> . STATIC static_var_list SEMI_COLON
    (32) statement -> . ECHO echo_expr_list SEMI_COLON
    (33) statement -> . INLINE_HTML
    (34) statement -> . expr SEMI_COLON
    (35) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (36) statement -> . SEMI_COLON
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    COLON           shift and go to state 433
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 13
    statement                      shift and go to state 432
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 345

    (115) expr -> expr LBRACE dim_offset RBRACE .

    SEMI_COLON      reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    LBRACE          reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    BOOLEAN_AND     reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    BOOLEAN_OR      reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    LOGICAL_AND     reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    LOGICAL_OR      reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    LOGICAL_XOR     reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    AND             reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    OR              reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    XOR             reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    CONCAT          reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    PLUS            reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    MINUS           reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    MUL             reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    DIV             reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    SL              reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    SR              reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    MOD             reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    IS_IDENTICAL    reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    IS_NOT_IDENTICAL reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    IS_EQUAL_TO     reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    IS_NOT_EQUAL    reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    LESS_THAN       reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    LESS_THAN_OR_EQUAL reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    GREATER_THAN    reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    GRATER_THAN_OR_EQUAL reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    INSTANCEOF      reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    QUESTION        reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    RPAREN          reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    COMMA           reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    DOUBLE_ARROW    reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    RBRACKET        reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    RBRACE          reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)
    COLON           reduce using rule 115 (expr -> expr LBRACE dim_offset RBRACE .)


state 346

    (185) expr -> expr QUESTION expr COLON . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 434
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 347

    (186) expr -> expr QUESTION COLON expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 186 (expr -> expr QUESTION COLON expr .)
    LBRACE          reduce using rule 186 (expr -> expr QUESTION COLON expr .)
    LOGICAL_AND     reduce using rule 186 (expr -> expr QUESTION COLON expr .)
    LOGICAL_OR      reduce using rule 186 (expr -> expr QUESTION COLON expr .)
    LOGICAL_XOR     reduce using rule 186 (expr -> expr QUESTION COLON expr .)
    QUESTION        reduce using rule 186 (expr -> expr QUESTION COLON expr .)
    RPAREN          reduce using rule 186 (expr -> expr QUESTION COLON expr .)
    COMMA           reduce using rule 186 (expr -> expr QUESTION COLON expr .)
    DOUBLE_ARROW    reduce using rule 186 (expr -> expr QUESTION COLON expr .)
    RBRACKET        reduce using rule 186 (expr -> expr QUESTION COLON expr .)
    RBRACE          reduce using rule 186 (expr -> expr QUESTION COLON expr .)
    COLON           reduce using rule 186 (expr -> expr QUESTION COLON expr .)
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117

  ! BOOLEAN_AND     [ reduce using rule 186 (expr -> expr QUESTION COLON expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 186 (expr -> expr QUESTION COLON expr .) ]
  ! AND             [ reduce using rule 186 (expr -> expr QUESTION COLON expr .) ]
  ! OR              [ reduce using rule 186 (expr -> expr QUESTION COLON expr .) ]
  ! XOR             [ reduce using rule 186 (expr -> expr QUESTION COLON expr .) ]
  ! CONCAT          [ reduce using rule 186 (expr -> expr QUESTION COLON expr .) ]
  ! PLUS            [ reduce using rule 186 (expr -> expr QUESTION COLON expr .) ]
  ! MINUS           [ reduce using rule 186 (expr -> expr QUESTION COLON expr .) ]
  ! MUL             [ reduce using rule 186 (expr -> expr QUESTION COLON expr .) ]
  ! DIV             [ reduce using rule 186 (expr -> expr QUESTION COLON expr .) ]
  ! SL              [ reduce using rule 186 (expr -> expr QUESTION COLON expr .) ]
  ! SR              [ reduce using rule 186 (expr -> expr QUESTION COLON expr .) ]
  ! MOD             [ reduce using rule 186 (expr -> expr QUESTION COLON expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 186 (expr -> expr QUESTION COLON expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 186 (expr -> expr QUESTION COLON expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 186 (expr -> expr QUESTION COLON expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 186 (expr -> expr QUESTION COLON expr .) ]
  ! LESS_THAN       [ reduce using rule 186 (expr -> expr QUESTION COLON expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 186 (expr -> expr QUESTION COLON expr .) ]
  ! GREATER_THAN    [ reduce using rule 186 (expr -> expr QUESTION COLON expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 186 (expr -> expr QUESTION COLON expr .) ]
  ! INSTANCEOF      [ reduce using rule 186 (expr -> expr QUESTION COLON expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! QUESTION        [ shift and go to state 118 ]


state 348

    (20) statement -> WHILE LPAREN expr RPAREN . while_statement
    (45) while_statement -> . statement
    (46) while_statement -> . COLON inner_statement_list ENDWHILE SEMI_COLON
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list else_single
    (19) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (20) statement -> . WHILE LPAREN expr RPAREN while_statement
    (21) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (22) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (23) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (24) statement -> . BREAK SEMI_COLON
    (25) statement -> . BREAK expr SEMI_COLON
    (26) statement -> . CONTINUE SEMI_COLON
    (27) statement -> . CONTINUE expr SEMI_COLON
    (28) statement -> . RETURN SEMI_COLON
    (29) statement -> . RETURN expr SEMI_COLON
    (30) statement -> . GLOBAL global_var_list SEMI_COLON
    (31) statement -> . STATIC static_var_list SEMI_COLON
    (32) statement -> . ECHO echo_expr_list SEMI_COLON
    (33) statement -> . INLINE_HTML
    (34) statement -> . expr SEMI_COLON
    (35) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (36) statement -> . SEMI_COLON
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    COLON           shift and go to state 437
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 13
    while_statement                shift and go to state 435
    statement                      shift and go to state 436
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 349

    (21) statement -> DO statement WHILE LPAREN . expr RPAREN SEMI_COLON
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 438
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 350

    (22) statement -> FOR LPAREN for_expr SEMI_COLON . for_expr SEMI_COLON for_expr RPAREN for_statement
    (47) for_expr -> . empty
    (48) for_expr -> . non_empty_for_expr
    (289) empty -> .
    (49) non_empty_for_expr -> . non_empty_for_expr COMMA expr
    (50) non_empty_for_expr -> . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    SEMI_COLON      reduce using rule 289 (empty -> .)
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    for_expr                       shift and go to state 439
    empty                          shift and go to state 253
    non_empty_for_expr             shift and go to state 254
    expr                           shift and go to state 255
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 351

    (49) non_empty_for_expr -> non_empty_for_expr COMMA . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 440
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 352

    (23) statement -> SWITCH LPAREN expr RPAREN . switch_case_list
    (53) switch_case_list -> . LBRACE case_list RBRACE
    (54) switch_case_list -> . LBRACE SEMI_COLON case_list RBRACE
    (55) switch_case_list -> . COLON case_list ENDSWITCH SEMI_COLON
    (56) switch_case_list -> . COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON

    LBRACE          shift and go to state 442
    COLON           shift and go to state 443

    switch_case_list               shift and go to state 441

state 353

    (64) global_var_list -> global_var_list COMMA global_var .

    SEMI_COLON      reduce using rule 64 (global_var_list -> global_var_list COMMA global_var .)
    COMMA           reduce using rule 64 (global_var_list -> global_var_list COMMA global_var .)


state 354

    (68) global_var -> DOLLAR LBRACE expr . RBRACE
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    RBRACE          shift and go to state 444
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 355

    (69) static_var_list -> static_var_list COMMA static_var .

    SEMI_COLON      reduce using rule 69 (static_var_list -> static_var_list COMMA static_var .)
    COMMA           reduce using rule 69 (static_var_list -> static_var_list COMMA static_var .)


state 356

    (71) static_var -> VARIABLE EQUALS static_scalar .

    SEMI_COLON      reduce using rule 71 (static_var -> VARIABLE EQUALS static_scalar .)
    COMMA           reduce using rule 71 (static_var -> VARIABLE EQUALS static_scalar .)


state 357

    (73) echo_expr_list -> echo_expr_list COMMA expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 73 (echo_expr_list -> echo_expr_list COMMA expr .)
    COMMA           reduce using rule 73 (echo_expr_list -> echo_expr_list COMMA expr .)
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 358

    (35) statement -> UNSET LPAREN unset_variables RPAREN . SEMI_COLON

    SEMI_COLON      shift and go to state 445


state 359

    (75) unset_variables -> unset_variables COMMA . unset_variable
    (77) unset_variable -> . variable
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    IDENTIFIER      shift and go to state 177
    ARRAY           shift and go to state 178
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    unset_variable                 shift and go to state 446
    variable                       shift and go to state 271
    base_variable_with_function_calls shift and go to state 57
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 360

    (78) function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN . parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (81) parameter_list -> . non_empty_parameter_list
    (82) parameter_list -> . empty
    (83) non_empty_parameter_list -> . non_empty_parameter_list COMMA parameter
    (84) non_empty_parameter_list -> . parameter
    (289) empty -> .
    (85) parameter -> . VARIABLE
    (86) parameter -> . AND VARIABLE
    (87) parameter -> . VARIABLE EQUALS static_scalar
    (88) parameter -> . AND VARIABLE EQUALS static_scalar

    RPAREN          reduce using rule 289 (empty -> .)
    VARIABLE        shift and go to state 365
    AND             shift and go to state 366

    parameter_list                 shift and go to state 447
    non_empty_parameter_list       shift and go to state 362
    empty                          shift and go to state 363
    parameter                      shift and go to state 364

state 361

    (137) expr -> FUNCTION is_reference LPAREN parameter_list . RPAREN lexical_vars LBRACE inner_statement_list RBRACE

    RPAREN          shift and go to state 448


state 362

    (81) parameter_list -> non_empty_parameter_list .
    (83) non_empty_parameter_list -> non_empty_parameter_list . COMMA parameter

    RPAREN          reduce using rule 81 (parameter_list -> non_empty_parameter_list .)
    COMMA           shift and go to state 449


state 363

    (82) parameter_list -> empty .

    RPAREN          reduce using rule 82 (parameter_list -> empty .)


state 364

    (84) non_empty_parameter_list -> parameter .

    COMMA           reduce using rule 84 (non_empty_parameter_list -> parameter .)
    RPAREN          reduce using rule 84 (non_empty_parameter_list -> parameter .)


state 365

    (85) parameter -> VARIABLE .
    (87) parameter -> VARIABLE . EQUALS static_scalar

    COMMA           reduce using rule 85 (parameter -> VARIABLE .)
    RPAREN          reduce using rule 85 (parameter -> VARIABLE .)
    EQUALS          shift and go to state 450


state 366

    (86) parameter -> AND . VARIABLE
    (88) parameter -> AND . VARIABLE EQUALS static_scalar

    VARIABLE        shift and go to state 451


state 367

    (218) scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .

    SEMI_COLON      reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    LBRACE          reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    BOOLEAN_AND     reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    BOOLEAN_OR      reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    LOGICAL_AND     reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    LOGICAL_OR      reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    LOGICAL_XOR     reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    AND             reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    OR              reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    XOR             reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    CONCAT          reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    PLUS            reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    MINUS           reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    MUL             reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    DIV             reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    SL              reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    SR              reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    MOD             reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    IS_IDENTICAL    reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    IS_NOT_IDENTICAL reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    IS_EQUAL_TO     reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    IS_NOT_EQUAL    reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    LESS_THAN       reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    LESS_THAN_OR_EQUAL reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    GREATER_THAN    reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    GRATER_THAN_OR_EQUAL reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    INSTANCEOF      reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    QUESTION        reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    RPAREN          reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    COMMA           reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    DOUBLE_ARROW    reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    RBRACKET        reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    RBRACE          reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)
    COLON           reduce using rule 218 (scalar -> IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE .)


state 368

    (104) fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .

    EQUALS          reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    PLUS_EQUAL      reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    MINUS_EQUAL     reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    MUL_EQUAL       reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    DIV_EQUAL       reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    CONCAT_EQUAL    reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    MOD_EQUAL       reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    AND_EQUAL       reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    OR_EQUAL        reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    XOR_EQUAL       reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    SL_EQUAL        reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    SR_EQUAL        reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    INC             reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    DEC             reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    LBRACKET        reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    SEMI_COLON      reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    LBRACE          reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    BOOLEAN_AND     reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    BOOLEAN_OR      reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    LOGICAL_AND     reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    LOGICAL_OR      reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    LOGICAL_XOR     reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    AND             reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    OR              reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    XOR             reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    CONCAT          reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    PLUS            reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    MINUS           reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    MUL             reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    DIV             reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    SL              reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    SR              reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    MOD             reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    IS_IDENTICAL    reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    IS_EQUAL_TO     reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    IS_NOT_EQUAL    reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    LESS_THAN       reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    LESS_THAN_OR_EQUAL reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    GREATER_THAN    reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    GRATER_THAN_OR_EQUAL reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    INSTANCEOF      reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    QUESTION        reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    RPAREN          reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    COMMA           reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    DOUBLE_ARROW    reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    RBRACKET        reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    RBRACE          reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)
    COLON           reduce using rule 104 (fucntion_call_body -> LPAREN nonempty_function_call_parameter_list RPAREN .)


state 369

    (105) fucntion_call_body -> LPAREN empty RPAREN .

    EQUALS          reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    PLUS_EQUAL      reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    MINUS_EQUAL     reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    MUL_EQUAL       reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    DIV_EQUAL       reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    CONCAT_EQUAL    reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    MOD_EQUAL       reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    AND_EQUAL       reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    OR_EQUAL        reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    XOR_EQUAL       reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    SL_EQUAL        reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    SR_EQUAL        reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    INC             reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    DEC             reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    LBRACKET        reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    SEMI_COLON      reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    LBRACE          reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    BOOLEAN_AND     reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    BOOLEAN_OR      reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    LOGICAL_AND     reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    LOGICAL_OR      reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    LOGICAL_XOR     reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    AND             reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    OR              reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    XOR             reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    CONCAT          reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    PLUS            reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    MINUS           reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    MUL             reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    DIV             reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    SL              reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    SR              reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    MOD             reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    IS_IDENTICAL    reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    IS_EQUAL_TO     reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    IS_NOT_EQUAL    reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    LESS_THAN       reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    LESS_THAN_OR_EQUAL reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    GREATER_THAN    reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    GRATER_THAN_OR_EQUAL reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    INSTANCEOF      reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    QUESTION        reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    RPAREN          reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    COMMA           reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    DOUBLE_ARROW    reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    RBRACKET        reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    RBRACE          reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)
    COLON           reduce using rule 105 (fucntion_call_body -> LPAREN empty RPAREN .)


state 370

    (91) expr -> variable EQUALS AND expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 91 (expr -> variable EQUALS AND expr .)
    LBRACE          reduce using rule 91 (expr -> variable EQUALS AND expr .)
    BOOLEAN_AND     reduce using rule 91 (expr -> variable EQUALS AND expr .)
    BOOLEAN_OR      reduce using rule 91 (expr -> variable EQUALS AND expr .)
    LOGICAL_AND     reduce using rule 91 (expr -> variable EQUALS AND expr .)
    LOGICAL_OR      reduce using rule 91 (expr -> variable EQUALS AND expr .)
    LOGICAL_XOR     reduce using rule 91 (expr -> variable EQUALS AND expr .)
    AND             reduce using rule 91 (expr -> variable EQUALS AND expr .)
    OR              reduce using rule 91 (expr -> variable EQUALS AND expr .)
    XOR             reduce using rule 91 (expr -> variable EQUALS AND expr .)
    QUESTION        reduce using rule 91 (expr -> variable EQUALS AND expr .)
    RPAREN          reduce using rule 91 (expr -> variable EQUALS AND expr .)
    COMMA           reduce using rule 91 (expr -> variable EQUALS AND expr .)
    DOUBLE_ARROW    reduce using rule 91 (expr -> variable EQUALS AND expr .)
    RBRACKET        reduce using rule 91 (expr -> variable EQUALS AND expr .)
    RBRACE          reduce using rule 91 (expr -> variable EQUALS AND expr .)
    COLON           reduce using rule 91 (expr -> variable EQUALS AND expr .)
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117

  ! CONCAT          [ reduce using rule 91 (expr -> variable EQUALS AND expr .) ]
  ! PLUS            [ reduce using rule 91 (expr -> variable EQUALS AND expr .) ]
  ! MINUS           [ reduce using rule 91 (expr -> variable EQUALS AND expr .) ]
  ! MUL             [ reduce using rule 91 (expr -> variable EQUALS AND expr .) ]
  ! DIV             [ reduce using rule 91 (expr -> variable EQUALS AND expr .) ]
  ! SL              [ reduce using rule 91 (expr -> variable EQUALS AND expr .) ]
  ! SR              [ reduce using rule 91 (expr -> variable EQUALS AND expr .) ]
  ! MOD             [ reduce using rule 91 (expr -> variable EQUALS AND expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 91 (expr -> variable EQUALS AND expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 91 (expr -> variable EQUALS AND expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 91 (expr -> variable EQUALS AND expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 91 (expr -> variable EQUALS AND expr .) ]
  ! LESS_THAN       [ reduce using rule 91 (expr -> variable EQUALS AND expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 91 (expr -> variable EQUALS AND expr .) ]
  ! GREATER_THAN    [ reduce using rule 91 (expr -> variable EQUALS AND expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 91 (expr -> variable EQUALS AND expr .) ]
  ! INSTANCEOF      [ reduce using rule 91 (expr -> variable EQUALS AND expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! BOOLEAN_AND     [ shift and go to state 93 ]
  ! BOOLEAN_OR      [ shift and go to state 94 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! AND             [ shift and go to state 98 ]
  ! OR              [ shift and go to state 99 ]
  ! XOR             [ shift and go to state 100 ]
  ! QUESTION        [ shift and go to state 118 ]


state 371

    (111) variable -> variable LBRACKET dim_offset RBRACKET .

    EQUALS          reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    PLUS_EQUAL      reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    MINUS_EQUAL     reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    MUL_EQUAL       reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    DIV_EQUAL       reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    CONCAT_EQUAL    reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    MOD_EQUAL       reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    AND_EQUAL       reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    OR_EQUAL        reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    XOR_EQUAL       reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    SL_EQUAL        reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    SR_EQUAL        reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    INC             reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    DEC             reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    LBRACKET        reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    SEMI_COLON      reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    LBRACE          reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    BOOLEAN_AND     reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    BOOLEAN_OR      reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    LOGICAL_AND     reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    LOGICAL_OR      reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    LOGICAL_XOR     reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    AND             reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    OR              reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    XOR             reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    CONCAT          reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    PLUS            reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    MINUS           reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    MUL             reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    DIV             reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    SL              reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    SR              reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    MOD             reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    IS_IDENTICAL    reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    IS_NOT_IDENTICAL reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    IS_EQUAL_TO     reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    IS_NOT_EQUAL    reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    LESS_THAN       reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    LESS_THAN_OR_EQUAL reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    GREATER_THAN    reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    GRATER_THAN_OR_EQUAL reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    INSTANCEOF      reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    QUESTION        reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    RPAREN          reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    COMMA           reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    DOUBLE_ARROW    reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    RBRACKET        reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    RBRACE          reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)
    COLON           reduce using rule 111 (variable -> variable LBRACKET dim_offset RBRACKET .)


state 372

    (98) assignment_list_element -> LIST LPAREN . assignment_list RPAREN
    (94) assignment_list -> . assignment_list COMMA assignment_list_element
    (95) assignment_list -> . assignment_list_element
    (96) assignment_list_element -> . variable
    (97) assignment_list_element -> . empty
    (98) assignment_list_element -> . LIST LPAREN assignment_list RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (289) empty -> .
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    LIST            shift and go to state 292
    RPAREN          reduce using rule 289 (empty -> .)
    COMMA           reduce using rule 289 (empty -> .)
    IDENTIFIER      shift and go to state 177
    ARRAY           shift and go to state 178
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    assignment_list                shift and go to state 452
    assignment_list_element        shift and go to state 294
    variable                       shift and go to state 295
    empty                          shift and go to state 296
    base_variable_with_function_calls shift and go to state 57
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 373

    (93) expr -> LIST LPAREN assignment_list RPAREN . EQUALS expr

    EQUALS          shift and go to state 453


state 374

    (94) assignment_list -> assignment_list COMMA . assignment_list_element
    (96) assignment_list_element -> . variable
    (97) assignment_list_element -> . empty
    (98) assignment_list_element -> . LIST LPAREN assignment_list RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (289) empty -> .
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    LIST            shift and go to state 292
    RPAREN          reduce using rule 289 (empty -> .)
    COMMA           reduce using rule 289 (empty -> .)
    IDENTIFIER      shift and go to state 177
    ARRAY           shift and go to state 178
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    assignment_list_element        shift and go to state 454
    variable                       shift and go to state 295
    empty                          shift and go to state 296
    base_variable_with_function_calls shift and go to state 57
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 375

    (122) expr -> ARRAY LPAREN array_pair_list RPAREN .

    SEMI_COLON      reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    LBRACE          reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    BOOLEAN_AND     reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    BOOLEAN_OR      reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    LOGICAL_AND     reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    LOGICAL_OR      reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    LOGICAL_XOR     reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    AND             reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    OR              reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    XOR             reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    CONCAT          reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    PLUS            reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    MINUS           reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    MUL             reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    DIV             reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    SL              reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    SR              reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    MOD             reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    IS_IDENTICAL    reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    IS_EQUAL_TO     reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    IS_NOT_EQUAL    reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    LESS_THAN       reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    LESS_THAN_OR_EQUAL reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    GREATER_THAN    reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    GRATER_THAN_OR_EQUAL reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    INSTANCEOF      reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    QUESTION        reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    RPAREN          reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    COMMA           reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    DOUBLE_ARROW    reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    RBRACKET        reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    RBRACE          reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)
    COLON           reduce using rule 122 (expr -> ARRAY LPAREN array_pair_list RPAREN .)


state 376

    (127) non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr . DOUBLE_ARROW AND variable
    (128) non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr . DOUBLE_ARROW expr
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    DOUBLE_ARROW    shift and go to state 455
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 377

    (133) nonempty_function_call_parameter_list -> nonempty_function_call_parameter_list COMMA function_call_parameter .

    COMMA           reduce using rule 133 (nonempty_function_call_parameter_list -> nonempty_function_call_parameter_list COMMA function_call_parameter .)
    RBRACKET        reduce using rule 133 (nonempty_function_call_parameter_list -> nonempty_function_call_parameter_list COMMA function_call_parameter .)
    RPAREN          reduce using rule 133 (nonempty_function_call_parameter_list -> nonempty_function_call_parameter_list COMMA function_call_parameter .)


state 378

    (130) non_empty_array_pair_list -> expr DOUBLE_ARROW expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    COMMA           reduce using rule 130 (non_empty_array_pair_list -> expr DOUBLE_ARROW expr .)
    RBRACKET        reduce using rule 130 (non_empty_array_pair_list -> expr DOUBLE_ARROW expr .)
    RPAREN          reduce using rule 130 (non_empty_array_pair_list -> expr DOUBLE_ARROW expr .)
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 379

    (129) non_empty_array_pair_list -> expr DOUBLE_ARROW AND . variable
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    IDENTIFIER      shift and go to state 177
    ARRAY           shift and go to state 178
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    variable                       shift and go to state 456
    base_variable_with_function_calls shift and go to state 57
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 380

    (198) expr -> ISSET LPAREN isset_variables RPAREN .

    SEMI_COLON      reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    LBRACE          reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    BOOLEAN_AND     reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    BOOLEAN_OR      reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    LOGICAL_AND     reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    LOGICAL_OR      reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    LOGICAL_XOR     reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    AND             reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    OR              reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    XOR             reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    CONCAT          reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    PLUS            reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    MINUS           reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    MUL             reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    DIV             reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    SL              reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    SR              reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    MOD             reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    IS_IDENTICAL    reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    IS_EQUAL_TO     reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    IS_NOT_EQUAL    reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    LESS_THAN       reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    LESS_THAN_OR_EQUAL reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    GREATER_THAN    reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    GRATER_THAN_OR_EQUAL reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    INSTANCEOF      reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    QUESTION        reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    RPAREN          reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    COMMA           reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    DOUBLE_ARROW    reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    RBRACKET        reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    RBRACE          reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)
    COLON           reduce using rule 198 (expr -> ISSET LPAREN isset_variables RPAREN .)


state 381

    (199) isset_variables -> isset_variables COMMA . variable
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    IDENTIFIER      shift and go to state 177
    ARRAY           shift and go to state 178
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    variable                       shift and go to state 457
    base_variable_with_function_calls shift and go to state 57
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 382

    (201) expr -> EMPTY LPAREN expr RPAREN .

    SEMI_COLON      reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    LBRACE          reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    BOOLEAN_AND     reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    BOOLEAN_OR      reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    LOGICAL_AND     reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    LOGICAL_OR      reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    LOGICAL_XOR     reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    AND             reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    OR              reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    XOR             reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    CONCAT          reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    PLUS            reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    MINUS           reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    MUL             reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    DIV             reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    SL              reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    SR              reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    MOD             reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    IS_IDENTICAL    reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    IS_EQUAL_TO     reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    IS_NOT_EQUAL    reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    LESS_THAN       reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    LESS_THAN_OR_EQUAL reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    GREATER_THAN    reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    GRATER_THAN_OR_EQUAL reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    INSTANCEOF      reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    QUESTION        reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    RPAREN          reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    COMMA           reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    DOUBLE_ARROW    reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    RBRACE          reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)
    COLON           reduce using rule 201 (expr -> EMPTY LPAREN expr RPAREN .)


state 383

    (202) expr -> EVAL LPAREN expr RPAREN .

    SEMI_COLON      reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    LBRACE          reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    BOOLEAN_AND     reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    BOOLEAN_OR      reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    LOGICAL_AND     reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    LOGICAL_OR      reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    LOGICAL_XOR     reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    AND             reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    OR              reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    XOR             reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    CONCAT          reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    PLUS            reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    MINUS           reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    MUL             reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    DIV             reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    SL              reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    SR              reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    MOD             reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    IS_IDENTICAL    reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    IS_EQUAL_TO     reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    IS_NOT_EQUAL    reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    LESS_THAN       reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    LESS_THAN_OR_EQUAL reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    GREATER_THAN    reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    GRATER_THAN_OR_EQUAL reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    INSTANCEOF      reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    QUESTION        reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    RPAREN          reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    COMMA           reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    DOUBLE_ARROW    reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    RBRACE          reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)
    COLON           reduce using rule 202 (expr -> EVAL LPAREN expr RPAREN .)


state 384

    (211) expr -> exit_or_die LPAREN expr RPAREN .

    SEMI_COLON      reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    LBRACE          reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    BOOLEAN_AND     reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    BOOLEAN_OR      reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    LOGICAL_AND     reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    LOGICAL_OR      reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    LOGICAL_XOR     reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    AND             reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    OR              reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    XOR             reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    CONCAT          reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    PLUS            reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    MINUS           reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    MUL             reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    DIV             reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    SL              reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    SR              reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    MOD             reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    IS_IDENTICAL    reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    IS_EQUAL_TO     reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    IS_NOT_EQUAL    reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    LESS_THAN       reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    LESS_THAN_OR_EQUAL reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    GREATER_THAN    reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    GRATER_THAN_OR_EQUAL reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    INSTANCEOF      reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    QUESTION        reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    RPAREN          reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    COMMA           reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    DOUBLE_ARROW    reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    RBRACE          reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)
    COLON           reduce using rule 211 (expr -> exit_or_die LPAREN expr RPAREN .)


state 385

    (282) encaps_var -> VARIABLE LBRACKET . encaps_var_offset RBRACKET
    (286) encaps_var_offset -> . IDENTIFIER
    (287) encaps_var_offset -> . NUM_STRING
    (288) encaps_var_offset -> . VARIABLE

    IDENTIFIER      shift and go to state 460
    NUM_STRING      shift and go to state 461
    VARIABLE        shift and go to state 458

    encaps_var_offset              shift and go to state 459

state 386

    (283) encaps_var -> DOLLAR_OPEN_CURLY_BRACES expr . RBRACE
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    RBRACE          shift and go to state 462
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 387

    (284) encaps_var -> DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME . LBRACKET expr RBRACKET RBRACE

    LBRACKET        shift and go to state 463


state 388

    (285) encaps_var -> CURLY_OPEN variable . RBRACE
    (111) variable -> variable . LBRACKET dim_offset RBRACKET

    RBRACE          shift and go to state 464
    LBRACKET        shift and go to state 160


state 389

    (106) function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .

    EQUALS          reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    PLUS_EQUAL      reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    MINUS_EQUAL     reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    MUL_EQUAL       reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    DIV_EQUAL       reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    CONCAT_EQUAL    reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    MOD_EQUAL       reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    AND_EQUAL       reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    OR_EQUAL        reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    XOR_EQUAL       reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    SL_EQUAL        reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    SR_EQUAL        reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    INC             reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    DEC             reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    LBRACKET        reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    SEMI_COLON      reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    LBRACE          reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    BOOLEAN_AND     reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    BOOLEAN_OR      reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    LOGICAL_AND     reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    LOGICAL_OR      reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    LOGICAL_XOR     reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    AND             reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    OR              reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    XOR             reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    CONCAT          reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    PLUS            reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    MINUS           reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    MUL             reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    DIV             reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    SL              reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    SR              reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    MOD             reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    IS_IDENTICAL    reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    IS_EQUAL_TO     reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    IS_NOT_EQUAL    reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    LESS_THAN       reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    LESS_THAN_OR_EQUAL reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    GREATER_THAN    reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    GRATER_THAN_OR_EQUAL reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    INSTANCEOF      reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    QUESTION        reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    RPAREN          reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    COMMA           reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    DOUBLE_ARROW    reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    RBRACKET        reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    RBRACE          reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)
    COLON           reduce using rule 106 (function_call -> variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN .)


state 390

    (107) function_call -> variable_without_objects LPAREN empty RPAREN .

    EQUALS          reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    PLUS_EQUAL      reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    MINUS_EQUAL     reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    MUL_EQUAL       reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    DIV_EQUAL       reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    CONCAT_EQUAL    reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    MOD_EQUAL       reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    AND_EQUAL       reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    OR_EQUAL        reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    XOR_EQUAL       reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    SL_EQUAL        reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    SR_EQUAL        reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    INC             reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    DEC             reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    LBRACKET        reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    SEMI_COLON      reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    LBRACE          reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    BOOLEAN_AND     reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    BOOLEAN_OR      reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    LOGICAL_AND     reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    LOGICAL_OR      reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    LOGICAL_XOR     reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    AND             reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    OR              reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    XOR             reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    CONCAT          reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    PLUS            reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    MINUS           reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    MUL             reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    DIV             reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    SL              reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    SR              reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    MOD             reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    IS_IDENTICAL    reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    IS_EQUAL_TO     reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    IS_NOT_EQUAL    reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    LESS_THAN       reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    LESS_THAN_OR_EQUAL reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    GREATER_THAN    reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    GRATER_THAN_OR_EQUAL reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    INSTANCEOF      reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    QUESTION        reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    RPAREN          reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    COMMA           reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    DOUBLE_ARROW    reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    RBRACKET        reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    RBRACE          reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)
    COLON           reduce using rule 107 (function_call -> variable_without_objects LPAREN empty RPAREN .)


state 391

    (117) compound_variable -> DOLLAR LBRACE expr RBRACE .

    LBRACKET        reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    LBRACE          reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    EQUALS          reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    PLUS_EQUAL      reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    MINUS_EQUAL     reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    MUL_EQUAL       reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    DIV_EQUAL       reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    CONCAT_EQUAL    reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    MOD_EQUAL       reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    AND_EQUAL       reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    OR_EQUAL        reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    XOR_EQUAL       reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    SL_EQUAL        reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    SR_EQUAL        reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    INC             reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    DEC             reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    SEMI_COLON      reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    BOOLEAN_AND     reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    BOOLEAN_OR      reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    LOGICAL_AND     reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    LOGICAL_OR      reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    LOGICAL_XOR     reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    AND             reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    OR              reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    XOR             reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    CONCAT          reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    PLUS            reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    MINUS           reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    MUL             reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    DIV             reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    SL              reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    SR              reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    MOD             reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    IS_IDENTICAL    reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    IS_NOT_IDENTICAL reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    IS_EQUAL_TO     reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    IS_NOT_EQUAL    reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    LESS_THAN       reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    LESS_THAN_OR_EQUAL reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    GREATER_THAN    reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    GRATER_THAN_OR_EQUAL reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    INSTANCEOF      reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    QUESTION        reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    LPAREN          reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    RPAREN          reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    COMMA           reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    DOUBLE_ARROW    reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    RBRACKET        reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    RBRACE          reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)
    COLON           reduce using rule 117 (compound_variable -> DOLLAR LBRACE expr RBRACE .)


state 392

    (112) reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .

    LBRACKET        reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    LBRACE          reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    EQUALS          reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    PLUS_EQUAL      reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    MINUS_EQUAL     reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    MUL_EQUAL       reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    DIV_EQUAL       reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    CONCAT_EQUAL    reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    MOD_EQUAL       reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    AND_EQUAL       reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    OR_EQUAL        reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    XOR_EQUAL       reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    SL_EQUAL        reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    SR_EQUAL        reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    INC             reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    DEC             reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    SEMI_COLON      reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    BOOLEAN_AND     reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    BOOLEAN_OR      reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    LOGICAL_AND     reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    LOGICAL_OR      reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    LOGICAL_XOR     reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    AND             reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    OR              reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    XOR             reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    CONCAT          reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    PLUS            reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    MINUS           reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    MUL             reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    DIV             reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    SL              reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    SR              reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    MOD             reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    IS_IDENTICAL    reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    IS_NOT_IDENTICAL reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    IS_EQUAL_TO     reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    IS_NOT_EQUAL    reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    LESS_THAN       reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    LESS_THAN_OR_EQUAL reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    GREATER_THAN    reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    GRATER_THAN_OR_EQUAL reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    INSTANCEOF      reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    QUESTION        reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    LPAREN          reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    RPAREN          reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    COMMA           reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    DOUBLE_ARROW    reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    RBRACKET        reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    RBRACE          reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)
    COLON           reduce using rule 112 (reference_variable -> reference_variable LBRACKET dim_offset RBRACKET .)


state 393

    (113) reference_variable -> reference_variable LBRACE expr RBRACE .

    LBRACKET        reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    LBRACE          reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    EQUALS          reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    PLUS_EQUAL      reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    MINUS_EQUAL     reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    MUL_EQUAL       reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    DIV_EQUAL       reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    CONCAT_EQUAL    reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    MOD_EQUAL       reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    AND_EQUAL       reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    OR_EQUAL        reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    XOR_EQUAL       reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    SL_EQUAL        reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    SR_EQUAL        reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    INC             reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    DEC             reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    SEMI_COLON      reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    BOOLEAN_AND     reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    BOOLEAN_OR      reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    LOGICAL_AND     reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    LOGICAL_OR      reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    LOGICAL_XOR     reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    AND             reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    OR              reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    XOR             reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    CONCAT          reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    PLUS            reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    MINUS           reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    MUL             reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    DIV             reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    SL              reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    SR              reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    MOD             reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    IS_IDENTICAL    reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    IS_NOT_IDENTICAL reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    IS_EQUAL_TO     reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    IS_NOT_EQUAL    reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    LESS_THAN       reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    LESS_THAN_OR_EQUAL reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    GREATER_THAN    reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    GRATER_THAN_OR_EQUAL reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    INSTANCEOF      reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    QUESTION        reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    LPAREN          reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    RPAREN          reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    COMMA           reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    DOUBLE_ARROW    reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    RBRACKET        reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    RBRACE          reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)
    COLON           reduce using rule 113 (reference_variable -> reference_variable LBRACE expr RBRACE .)


state 394

    (254) static_expr -> static_expr BOOLEAN_AND . static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 465
    static_scalar                  shift and go to state 331
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 395

    (255) static_expr -> static_expr BOOLEAN_OR . static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 466
    static_scalar                  shift and go to state 331
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 396

    (256) static_expr -> static_expr LOGICAL_AND . static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 467
    static_scalar                  shift and go to state 331
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 397

    (257) static_expr -> static_expr LOGICAL_OR . static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 468
    static_scalar                  shift and go to state 331
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 398

    (258) static_expr -> static_expr LOGICAL_XOR . static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 469
    static_scalar                  shift and go to state 331
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 399

    (259) static_expr -> static_expr AND . static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 470
    static_scalar                  shift and go to state 331
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 400

    (260) static_expr -> static_expr OR . static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 471
    static_scalar                  shift and go to state 331
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 401

    (261) static_expr -> static_expr XOR . static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 472
    static_scalar                  shift and go to state 331
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 402

    (262) static_expr -> static_expr CONCAT . static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 473
    static_scalar                  shift and go to state 331
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 403

    (263) static_expr -> static_expr PLUS . static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 474
    static_scalar                  shift and go to state 331
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 404

    (264) static_expr -> static_expr MINUS . static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 475
    static_scalar                  shift and go to state 331
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 405

    (265) static_expr -> static_expr MUL . static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 476
    static_scalar                  shift and go to state 331
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 406

    (266) static_expr -> static_expr DIV . static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 477
    static_scalar                  shift and go to state 331
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 407

    (267) static_expr -> static_expr SL . static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 478
    static_scalar                  shift and go to state 331
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 408

    (268) static_expr -> static_expr SR . static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 479
    static_scalar                  shift and go to state 331
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 409

    (269) static_expr -> static_expr MOD . static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 480
    static_scalar                  shift and go to state 331
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 410

    (270) static_expr -> static_expr IS_IDENTICAL . static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 481
    static_scalar                  shift and go to state 331
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 411

    (271) static_expr -> static_expr IS_NOT_IDENTICAL . static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 482
    static_scalar                  shift and go to state 331
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 412

    (272) static_expr -> static_expr IS_EQUAL_TO . static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 483
    static_scalar                  shift and go to state 331
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 413

    (273) static_expr -> static_expr IS_NOT_EQUAL . static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 484
    static_scalar                  shift and go to state 331
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 414

    (274) static_expr -> static_expr LESS_THAN . static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 485
    static_scalar                  shift and go to state 331
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 415

    (275) static_expr -> static_expr LESS_THAN_OR_EQUAL . static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 486
    static_scalar                  shift and go to state 331
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 416

    (276) static_expr -> static_expr GREATER_THAN . static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 487
    static_scalar                  shift and go to state 331
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 417

    (277) static_expr -> static_expr GRATER_THAN_OR_EQUAL . static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 488
    static_scalar                  shift and go to state 331
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 418

    (243) static_scalar -> PLUS static_scalar .

    BOOLEAN_AND     reduce using rule 243 (static_scalar -> PLUS static_scalar .)
    BOOLEAN_OR      reduce using rule 243 (static_scalar -> PLUS static_scalar .)
    LOGICAL_AND     reduce using rule 243 (static_scalar -> PLUS static_scalar .)
    LOGICAL_OR      reduce using rule 243 (static_scalar -> PLUS static_scalar .)
    LOGICAL_XOR     reduce using rule 243 (static_scalar -> PLUS static_scalar .)
    AND             reduce using rule 243 (static_scalar -> PLUS static_scalar .)
    OR              reduce using rule 243 (static_scalar -> PLUS static_scalar .)
    XOR             reduce using rule 243 (static_scalar -> PLUS static_scalar .)
    CONCAT          reduce using rule 243 (static_scalar -> PLUS static_scalar .)
    PLUS            reduce using rule 243 (static_scalar -> PLUS static_scalar .)
    MINUS           reduce using rule 243 (static_scalar -> PLUS static_scalar .)
    MUL             reduce using rule 243 (static_scalar -> PLUS static_scalar .)
    DIV             reduce using rule 243 (static_scalar -> PLUS static_scalar .)
    SL              reduce using rule 243 (static_scalar -> PLUS static_scalar .)
    SR              reduce using rule 243 (static_scalar -> PLUS static_scalar .)
    MOD             reduce using rule 243 (static_scalar -> PLUS static_scalar .)
    IS_IDENTICAL    reduce using rule 243 (static_scalar -> PLUS static_scalar .)
    IS_NOT_IDENTICAL reduce using rule 243 (static_scalar -> PLUS static_scalar .)
    IS_EQUAL_TO     reduce using rule 243 (static_scalar -> PLUS static_scalar .)
    IS_NOT_EQUAL    reduce using rule 243 (static_scalar -> PLUS static_scalar .)
    LESS_THAN       reduce using rule 243 (static_scalar -> PLUS static_scalar .)
    LESS_THAN_OR_EQUAL reduce using rule 243 (static_scalar -> PLUS static_scalar .)
    GREATER_THAN    reduce using rule 243 (static_scalar -> PLUS static_scalar .)
    GRATER_THAN_OR_EQUAL reduce using rule 243 (static_scalar -> PLUS static_scalar .)
    SEMI_COLON      reduce using rule 243 (static_scalar -> PLUS static_scalar .)
    COMMA           reduce using rule 243 (static_scalar -> PLUS static_scalar .)
    RPAREN          reduce using rule 243 (static_scalar -> PLUS static_scalar .)
    DOUBLE_ARROW    reduce using rule 243 (static_scalar -> PLUS static_scalar .)
    RBRACKET        reduce using rule 243 (static_scalar -> PLUS static_scalar .)


state 419

    (244) static_scalar -> MINUS static_scalar .

    BOOLEAN_AND     reduce using rule 244 (static_scalar -> MINUS static_scalar .)
    BOOLEAN_OR      reduce using rule 244 (static_scalar -> MINUS static_scalar .)
    LOGICAL_AND     reduce using rule 244 (static_scalar -> MINUS static_scalar .)
    LOGICAL_OR      reduce using rule 244 (static_scalar -> MINUS static_scalar .)
    LOGICAL_XOR     reduce using rule 244 (static_scalar -> MINUS static_scalar .)
    AND             reduce using rule 244 (static_scalar -> MINUS static_scalar .)
    OR              reduce using rule 244 (static_scalar -> MINUS static_scalar .)
    XOR             reduce using rule 244 (static_scalar -> MINUS static_scalar .)
    CONCAT          reduce using rule 244 (static_scalar -> MINUS static_scalar .)
    PLUS            reduce using rule 244 (static_scalar -> MINUS static_scalar .)
    MINUS           reduce using rule 244 (static_scalar -> MINUS static_scalar .)
    MUL             reduce using rule 244 (static_scalar -> MINUS static_scalar .)
    DIV             reduce using rule 244 (static_scalar -> MINUS static_scalar .)
    SL              reduce using rule 244 (static_scalar -> MINUS static_scalar .)
    SR              reduce using rule 244 (static_scalar -> MINUS static_scalar .)
    MOD             reduce using rule 244 (static_scalar -> MINUS static_scalar .)
    IS_IDENTICAL    reduce using rule 244 (static_scalar -> MINUS static_scalar .)
    IS_NOT_IDENTICAL reduce using rule 244 (static_scalar -> MINUS static_scalar .)
    IS_EQUAL_TO     reduce using rule 244 (static_scalar -> MINUS static_scalar .)
    IS_NOT_EQUAL    reduce using rule 244 (static_scalar -> MINUS static_scalar .)
    LESS_THAN       reduce using rule 244 (static_scalar -> MINUS static_scalar .)
    LESS_THAN_OR_EQUAL reduce using rule 244 (static_scalar -> MINUS static_scalar .)
    GREATER_THAN    reduce using rule 244 (static_scalar -> MINUS static_scalar .)
    GRATER_THAN_OR_EQUAL reduce using rule 244 (static_scalar -> MINUS static_scalar .)
    SEMI_COLON      reduce using rule 244 (static_scalar -> MINUS static_scalar .)
    COMMA           reduce using rule 244 (static_scalar -> MINUS static_scalar .)
    RPAREN          reduce using rule 244 (static_scalar -> MINUS static_scalar .)
    DOUBLE_ARROW    reduce using rule 244 (static_scalar -> MINUS static_scalar .)
    RBRACKET        reduce using rule 244 (static_scalar -> MINUS static_scalar .)


state 420

    (278) static_expr -> LPAREN static_expr . RPAREN
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    RPAREN          shift and go to state 489
    BOOLEAN_AND     shift and go to state 394
    BOOLEAN_OR      shift and go to state 395
    LOGICAL_AND     shift and go to state 396
    LOGICAL_OR      shift and go to state 397
    LOGICAL_XOR     shift and go to state 398
    AND             shift and go to state 399
    OR              shift and go to state 400
    XOR             shift and go to state 401
    CONCAT          shift and go to state 402
    PLUS            shift and go to state 403
    MINUS           shift and go to state 404
    MUL             shift and go to state 405
    DIV             shift and go to state 406
    SL              shift and go to state 407
    SR              shift and go to state 408
    MOD             shift and go to state 409
    IS_IDENTICAL    shift and go to state 410
    IS_NOT_IDENTICAL shift and go to state 411
    IS_EQUAL_TO     shift and go to state 412
    IS_NOT_EQUAL    shift and go to state 413
    LESS_THAN       shift and go to state 414
    LESS_THAN_OR_EQUAL shift and go to state 415
    GREATER_THAN    shift and go to state 416
    GRATER_THAN_OR_EQUAL shift and go to state 417


state 421

    (235) static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .

    BOOLEAN_AND     reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    BOOLEAN_OR      reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    LOGICAL_AND     reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    LOGICAL_OR      reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    LOGICAL_XOR     reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    AND             reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    OR              reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    XOR             reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    CONCAT          reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    PLUS            reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    MINUS           reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    MUL             reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    DIV             reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    SL              reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    SR              reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    MOD             reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    IS_IDENTICAL    reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    IS_NOT_IDENTICAL reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    IS_EQUAL_TO     reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    IS_NOT_EQUAL    reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    LESS_THAN       reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    LESS_THAN_OR_EQUAL reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    GREATER_THAN    reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    GRATER_THAN_OR_EQUAL reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    SEMI_COLON      reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    COMMA           reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    RPAREN          reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    DOUBLE_ARROW    reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)
    RBRACKET        reduce using rule 235 (static_scalar -> DOUBLE_QUOTE DOUBLE_QUOTE .)


state 422

    (236) static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE . DOUBLE_QUOTE

    DOUBLE_QUOTE    shift and go to state 490


state 423

    (245) static_scalar -> ARRAY LPAREN . static_array_pair_list RPAREN
    (247) static_array_pair_list -> . empty
    (248) static_array_pair_list -> . static_non_empty_array_pair_list possible_comma
    (289) empty -> .
    (249) static_non_empty_array_pair_list -> . static_non_empty_array_pair_list COMMA static_expr
    (250) static_non_empty_array_pair_list -> . static_expr
    (251) static_non_empty_array_pair_list -> . static_non_empty_array_pair_list COMMA static_scalar DOUBLE_ARROW static_expr
    (252) static_non_empty_array_pair_list -> . static_scalar DOUBLE_ARROW static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    RPAREN          reduce using rule 289 (empty -> .)
    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_array_pair_list         shift and go to state 491
    empty                          shift and go to state 425
    static_non_empty_array_pair_list shift and go to state 426
    static_expr                    shift and go to state 427
    static_scalar                  shift and go to state 428
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 424

    (246) static_scalar -> LBRACKET static_array_pair_list . RBRACKET

    RBRACKET        shift and go to state 492


state 425

    (247) static_array_pair_list -> empty .

    RBRACKET        reduce using rule 247 (static_array_pair_list -> empty .)
    RPAREN          reduce using rule 247 (static_array_pair_list -> empty .)


state 426

    (248) static_array_pair_list -> static_non_empty_array_pair_list . possible_comma
    (249) static_non_empty_array_pair_list -> static_non_empty_array_pair_list . COMMA static_expr
    (251) static_non_empty_array_pair_list -> static_non_empty_array_pair_list . COMMA static_scalar DOUBLE_ARROW static_expr
    (131) possible_comma -> . empty
    (132) possible_comma -> . COMMA
    (289) empty -> .

    COMMA           shift and go to state 494
    RBRACKET        reduce using rule 289 (empty -> .)
    RPAREN          reduce using rule 289 (empty -> .)

    possible_comma                 shift and go to state 493
    empty                          shift and go to state 304

state 427

    (250) static_non_empty_array_pair_list -> static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    COMMA           reduce using rule 250 (static_non_empty_array_pair_list -> static_expr .)
    RBRACKET        reduce using rule 250 (static_non_empty_array_pair_list -> static_expr .)
    RPAREN          reduce using rule 250 (static_non_empty_array_pair_list -> static_expr .)
    BOOLEAN_AND     shift and go to state 394
    BOOLEAN_OR      shift and go to state 395
    LOGICAL_AND     shift and go to state 396
    LOGICAL_OR      shift and go to state 397
    LOGICAL_XOR     shift and go to state 398
    AND             shift and go to state 399
    OR              shift and go to state 400
    XOR             shift and go to state 401
    CONCAT          shift and go to state 402
    PLUS            shift and go to state 403
    MINUS           shift and go to state 404
    MUL             shift and go to state 405
    DIV             shift and go to state 406
    SL              shift and go to state 407
    SR              shift and go to state 408
    MOD             shift and go to state 409
    IS_IDENTICAL    shift and go to state 410
    IS_NOT_IDENTICAL shift and go to state 411
    IS_EQUAL_TO     shift and go to state 412
    IS_NOT_EQUAL    shift and go to state 413
    LESS_THAN       shift and go to state 414
    LESS_THAN_OR_EQUAL shift and go to state 415
    GREATER_THAN    shift and go to state 416
    GRATER_THAN_OR_EQUAL shift and go to state 417


state 428

    (252) static_non_empty_array_pair_list -> static_scalar . DOUBLE_ARROW static_expr
    (253) static_expr -> static_scalar .

    DOUBLE_ARROW    shift and go to state 495
    BOOLEAN_AND     reduce using rule 253 (static_expr -> static_scalar .)
    BOOLEAN_OR      reduce using rule 253 (static_expr -> static_scalar .)
    LOGICAL_AND     reduce using rule 253 (static_expr -> static_scalar .)
    LOGICAL_OR      reduce using rule 253 (static_expr -> static_scalar .)
    LOGICAL_XOR     reduce using rule 253 (static_expr -> static_scalar .)
    AND             reduce using rule 253 (static_expr -> static_scalar .)
    OR              reduce using rule 253 (static_expr -> static_scalar .)
    XOR             reduce using rule 253 (static_expr -> static_scalar .)
    CONCAT          reduce using rule 253 (static_expr -> static_scalar .)
    PLUS            reduce using rule 253 (static_expr -> static_scalar .)
    MINUS           reduce using rule 253 (static_expr -> static_scalar .)
    MUL             reduce using rule 253 (static_expr -> static_scalar .)
    DIV             reduce using rule 253 (static_expr -> static_scalar .)
    SL              reduce using rule 253 (static_expr -> static_scalar .)
    SR              reduce using rule 253 (static_expr -> static_scalar .)
    MOD             reduce using rule 253 (static_expr -> static_scalar .)
    IS_IDENTICAL    reduce using rule 253 (static_expr -> static_scalar .)
    IS_NOT_IDENTICAL reduce using rule 253 (static_expr -> static_scalar .)
    IS_EQUAL_TO     reduce using rule 253 (static_expr -> static_scalar .)
    IS_NOT_EQUAL    reduce using rule 253 (static_expr -> static_scalar .)
    LESS_THAN       reduce using rule 253 (static_expr -> static_scalar .)
    LESS_THAN_OR_EQUAL reduce using rule 253 (static_expr -> static_scalar .)
    GREATER_THAN    reduce using rule 253 (static_expr -> static_scalar .)
    GRATER_THAN_OR_EQUAL reduce using rule 253 (static_expr -> static_scalar .)
    COMMA           reduce using rule 253 (static_expr -> static_scalar .)
    RBRACKET        reduce using rule 253 (static_expr -> static_scalar .)
    RPAREN          reduce using rule 253 (static_expr -> static_scalar .)


state 429

    (239) static_heredoc -> START_HEREDOC multiple_encapsed . END_HEREDOC
    (240) multiple_encapsed -> multiple_encapsed . ENCAPSED_AND_WHITESPACE

    END_HEREDOC     shift and go to state 496
    ENCAPSED_AND_WHITESPACE shift and go to state 497


state 430

    (241) multiple_encapsed -> empty .

    END_HEREDOC     reduce using rule 241 (multiple_encapsed -> empty .)
    ENCAPSED_AND_WHITESPACE reduce using rule 241 (multiple_encapsed -> empty .)


state 431

    (16) inner_statement -> YIELD expr SEMI_COLON .

    RBRACE          reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    YIELD           reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    LBRACE          reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    IF              reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    WHILE           reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    DO              reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    FOR             reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    SWITCH          reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    BREAK           reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    CONTINUE        reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    RETURN          reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    GLOBAL          reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    STATIC          reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    ECHO            reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    INLINE_HTML     reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    UNSET           reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    SEMI_COLON      reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    FUNCTION        reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    CLONE           reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    LIST            reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    ARRAY           reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    LBRACKET        reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    PLUS            reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    MINUS           reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    NOT             reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    INC             reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    DEC             reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    INT_CAST        reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    ARRAY_CAST      reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    STRING_CAST     reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    BOOL_CAST       reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    UNSET_CAST      reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    BINARY_CAST     reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    ISSET           reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    EMPTY           reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    EVAL            reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    INCLUDE         reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    REQUIRE         reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    PRINT           reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    AT              reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    LPAREN          reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    IDENTIFIER      reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    EXIT            reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    DIE             reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    INT_NUMBER      reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    FUNC_C          reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    METHOD_C        reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    LINE            reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    FILE            reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    DIR             reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    START_HEREDOC   reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    START_NOWDOC    reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    DOLLAR          reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    VARIABLE        reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    ELSEIF          reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    ELSE            reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    ENDIF           reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    ENDWHILE        reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    ENDSWITCH       reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    ENDFOR          reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    CASE            reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)
    DEFAULT         reduce using rule 16 (inner_statement -> YIELD expr SEMI_COLON .)


state 432

    (18) statement -> IF LPAREN expr RPAREN statement . elseif_list else_single
    (37) elseif_list -> . empty
    (38) elseif_list -> . elseif_list ELSEIF LPAREN expr RPAREN statement
    (289) empty -> .

    ELSEIF          reduce using rule 289 (empty -> .)
    ELSE            reduce using rule 289 (empty -> .)
    HALT_COMPILER   reduce using rule 289 (empty -> .)
    CONST           reduce using rule 289 (empty -> .)
    LBRACE          reduce using rule 289 (empty -> .)
    IF              reduce using rule 289 (empty -> .)
    WHILE           reduce using rule 289 (empty -> .)
    DO              reduce using rule 289 (empty -> .)
    FOR             reduce using rule 289 (empty -> .)
    SWITCH          reduce using rule 289 (empty -> .)
    BREAK           reduce using rule 289 (empty -> .)
    CONTINUE        reduce using rule 289 (empty -> .)
    RETURN          reduce using rule 289 (empty -> .)
    GLOBAL          reduce using rule 289 (empty -> .)
    STATIC          reduce using rule 289 (empty -> .)
    ECHO            reduce using rule 289 (empty -> .)
    INLINE_HTML     reduce using rule 289 (empty -> .)
    UNSET           reduce using rule 289 (empty -> .)
    SEMI_COLON      reduce using rule 289 (empty -> .)
    FUNCTION        reduce using rule 289 (empty -> .)
    CLONE           reduce using rule 289 (empty -> .)
    LIST            reduce using rule 289 (empty -> .)
    ARRAY           reduce using rule 289 (empty -> .)
    LBRACKET        reduce using rule 289 (empty -> .)
    PLUS            reduce using rule 289 (empty -> .)
    MINUS           reduce using rule 289 (empty -> .)
    NOT             reduce using rule 289 (empty -> .)
    BOOLEAN_NOT     reduce using rule 289 (empty -> .)
    INC             reduce using rule 289 (empty -> .)
    DEC             reduce using rule 289 (empty -> .)
    INT_CAST        reduce using rule 289 (empty -> .)
    ARRAY_CAST      reduce using rule 289 (empty -> .)
    STRING_CAST     reduce using rule 289 (empty -> .)
    DOUBLE_CAST     reduce using rule 289 (empty -> .)
    BOOL_CAST       reduce using rule 289 (empty -> .)
    UNSET_CAST      reduce using rule 289 (empty -> .)
    BINARY_CAST     reduce using rule 289 (empty -> .)
    ISSET           reduce using rule 289 (empty -> .)
    EMPTY           reduce using rule 289 (empty -> .)
    EVAL            reduce using rule 289 (empty -> .)
    INCLUDE         reduce using rule 289 (empty -> .)
    INCLUDE_ONCE    reduce using rule 289 (empty -> .)
    REQUIRE         reduce using rule 289 (empty -> .)
    REQUIRE_ONCE    reduce using rule 289 (empty -> .)
    PRINT           reduce using rule 289 (empty -> .)
    AT              reduce using rule 289 (empty -> .)
    LPAREN          reduce using rule 289 (empty -> .)
    DOUBLE_QUOTE    reduce using rule 289 (empty -> .)
    IDENTIFIER      reduce using rule 289 (empty -> .)
    EXIT            reduce using rule 289 (empty -> .)
    DIE             reduce using rule 289 (empty -> .)
    INT_NUMBER      reduce using rule 289 (empty -> .)
    FLOAT_NUMBER    reduce using rule 289 (empty -> .)
    CONSTANT_ENCAPSED_STRING reduce using rule 289 (empty -> .)
    FUNC_C          reduce using rule 289 (empty -> .)
    METHOD_C        reduce using rule 289 (empty -> .)
    LINE            reduce using rule 289 (empty -> .)
    FILE            reduce using rule 289 (empty -> .)
    DIR             reduce using rule 289 (empty -> .)
    START_HEREDOC   reduce using rule 289 (empty -> .)
    START_NOWDOC    reduce using rule 289 (empty -> .)
    DOLLAR          reduce using rule 289 (empty -> .)
    VARIABLE        reduce using rule 289 (empty -> .)
    $end            reduce using rule 289 (empty -> .)
    RBRACE          reduce using rule 289 (empty -> .)
    YIELD           reduce using rule 289 (empty -> .)
    ENDIF           reduce using rule 289 (empty -> .)
    ENDWHILE        reduce using rule 289 (empty -> .)
    ENDSWITCH       reduce using rule 289 (empty -> .)
    ENDFOR          reduce using rule 289 (empty -> .)
    CASE            reduce using rule 289 (empty -> .)
    DEFAULT         reduce using rule 289 (empty -> .)

    elseif_list                    shift and go to state 498
    empty                          shift and go to state 499

state 433

    (19) statement -> IF LPAREN expr RPAREN COLON . inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (11) inner_statement_list -> . inner_statement_list inner_statement
    (12) inner_statement_list -> . empty
    (289) empty -> .

    YIELD           reduce using rule 289 (empty -> .)
    LBRACE          reduce using rule 289 (empty -> .)
    IF              reduce using rule 289 (empty -> .)
    WHILE           reduce using rule 289 (empty -> .)
    DO              reduce using rule 289 (empty -> .)
    FOR             reduce using rule 289 (empty -> .)
    SWITCH          reduce using rule 289 (empty -> .)
    BREAK           reduce using rule 289 (empty -> .)
    CONTINUE        reduce using rule 289 (empty -> .)
    RETURN          reduce using rule 289 (empty -> .)
    GLOBAL          reduce using rule 289 (empty -> .)
    STATIC          reduce using rule 289 (empty -> .)
    ECHO            reduce using rule 289 (empty -> .)
    INLINE_HTML     reduce using rule 289 (empty -> .)
    UNSET           reduce using rule 289 (empty -> .)
    SEMI_COLON      reduce using rule 289 (empty -> .)
    FUNCTION        reduce using rule 289 (empty -> .)
    CLONE           reduce using rule 289 (empty -> .)
    LIST            reduce using rule 289 (empty -> .)
    ARRAY           reduce using rule 289 (empty -> .)
    LBRACKET        reduce using rule 289 (empty -> .)
    PLUS            reduce using rule 289 (empty -> .)
    MINUS           reduce using rule 289 (empty -> .)
    NOT             reduce using rule 289 (empty -> .)
    BOOLEAN_NOT     reduce using rule 289 (empty -> .)
    INC             reduce using rule 289 (empty -> .)
    DEC             reduce using rule 289 (empty -> .)
    INT_CAST        reduce using rule 289 (empty -> .)
    ARRAY_CAST      reduce using rule 289 (empty -> .)
    STRING_CAST     reduce using rule 289 (empty -> .)
    DOUBLE_CAST     reduce using rule 289 (empty -> .)
    BOOL_CAST       reduce using rule 289 (empty -> .)
    UNSET_CAST      reduce using rule 289 (empty -> .)
    BINARY_CAST     reduce using rule 289 (empty -> .)
    ISSET           reduce using rule 289 (empty -> .)
    EMPTY           reduce using rule 289 (empty -> .)
    EVAL            reduce using rule 289 (empty -> .)
    INCLUDE         reduce using rule 289 (empty -> .)
    INCLUDE_ONCE    reduce using rule 289 (empty -> .)
    REQUIRE         reduce using rule 289 (empty -> .)
    REQUIRE_ONCE    reduce using rule 289 (empty -> .)
    PRINT           reduce using rule 289 (empty -> .)
    AT              reduce using rule 289 (empty -> .)
    LPAREN          reduce using rule 289 (empty -> .)
    DOUBLE_QUOTE    reduce using rule 289 (empty -> .)
    IDENTIFIER      reduce using rule 289 (empty -> .)
    EXIT            reduce using rule 289 (empty -> .)
    DIE             reduce using rule 289 (empty -> .)
    INT_NUMBER      reduce using rule 289 (empty -> .)
    FLOAT_NUMBER    reduce using rule 289 (empty -> .)
    CONSTANT_ENCAPSED_STRING reduce using rule 289 (empty -> .)
    FUNC_C          reduce using rule 289 (empty -> .)
    METHOD_C        reduce using rule 289 (empty -> .)
    LINE            reduce using rule 289 (empty -> .)
    FILE            reduce using rule 289 (empty -> .)
    DIR             reduce using rule 289 (empty -> .)
    START_HEREDOC   reduce using rule 289 (empty -> .)
    START_NOWDOC    reduce using rule 289 (empty -> .)
    DOLLAR          reduce using rule 289 (empty -> .)
    VARIABLE        reduce using rule 289 (empty -> .)
    ELSEIF          reduce using rule 289 (empty -> .)
    ELSE            reduce using rule 289 (empty -> .)
    ENDIF           reduce using rule 289 (empty -> .)

    inner_statement_list           shift and go to state 500
    empty                          shift and go to state 89

state 434

    (185) expr -> expr QUESTION expr COLON expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 185 (expr -> expr QUESTION expr COLON expr .)
    LBRACE          reduce using rule 185 (expr -> expr QUESTION expr COLON expr .)
    LOGICAL_AND     reduce using rule 185 (expr -> expr QUESTION expr COLON expr .)
    LOGICAL_OR      reduce using rule 185 (expr -> expr QUESTION expr COLON expr .)
    LOGICAL_XOR     reduce using rule 185 (expr -> expr QUESTION expr COLON expr .)
    QUESTION        reduce using rule 185 (expr -> expr QUESTION expr COLON expr .)
    RPAREN          reduce using rule 185 (expr -> expr QUESTION expr COLON expr .)
    COMMA           reduce using rule 185 (expr -> expr QUESTION expr COLON expr .)
    DOUBLE_ARROW    reduce using rule 185 (expr -> expr QUESTION expr COLON expr .)
    RBRACKET        reduce using rule 185 (expr -> expr QUESTION expr COLON expr .)
    RBRACE          reduce using rule 185 (expr -> expr QUESTION expr COLON expr .)
    COLON           reduce using rule 185 (expr -> expr QUESTION expr COLON expr .)
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117

  ! BOOLEAN_AND     [ reduce using rule 185 (expr -> expr QUESTION expr COLON expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 185 (expr -> expr QUESTION expr COLON expr .) ]
  ! AND             [ reduce using rule 185 (expr -> expr QUESTION expr COLON expr .) ]
  ! OR              [ reduce using rule 185 (expr -> expr QUESTION expr COLON expr .) ]
  ! XOR             [ reduce using rule 185 (expr -> expr QUESTION expr COLON expr .) ]
  ! CONCAT          [ reduce using rule 185 (expr -> expr QUESTION expr COLON expr .) ]
  ! PLUS            [ reduce using rule 185 (expr -> expr QUESTION expr COLON expr .) ]
  ! MINUS           [ reduce using rule 185 (expr -> expr QUESTION expr COLON expr .) ]
  ! MUL             [ reduce using rule 185 (expr -> expr QUESTION expr COLON expr .) ]
  ! DIV             [ reduce using rule 185 (expr -> expr QUESTION expr COLON expr .) ]
  ! SL              [ reduce using rule 185 (expr -> expr QUESTION expr COLON expr .) ]
  ! SR              [ reduce using rule 185 (expr -> expr QUESTION expr COLON expr .) ]
  ! MOD             [ reduce using rule 185 (expr -> expr QUESTION expr COLON expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 185 (expr -> expr QUESTION expr COLON expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 185 (expr -> expr QUESTION expr COLON expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 185 (expr -> expr QUESTION expr COLON expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 185 (expr -> expr QUESTION expr COLON expr .) ]
  ! LESS_THAN       [ reduce using rule 185 (expr -> expr QUESTION expr COLON expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 185 (expr -> expr QUESTION expr COLON expr .) ]
  ! GREATER_THAN    [ reduce using rule 185 (expr -> expr QUESTION expr COLON expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 185 (expr -> expr QUESTION expr COLON expr .) ]
  ! INSTANCEOF      [ reduce using rule 185 (expr -> expr QUESTION expr COLON expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]
  ! QUESTION        [ shift and go to state 118 ]


state 435

    (20) statement -> WHILE LPAREN expr RPAREN while_statement .

    HALT_COMPILER   reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    CONST           reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    LBRACE          reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    IF              reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    WHILE           reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    DO              reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    FOR             reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    SWITCH          reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    BREAK           reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    CONTINUE        reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    RETURN          reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    GLOBAL          reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    STATIC          reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    ECHO            reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    INLINE_HTML     reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    UNSET           reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    SEMI_COLON      reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    FUNCTION        reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    CLONE           reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    LIST            reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    ARRAY           reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    LBRACKET        reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    PLUS            reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    MINUS           reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    NOT             reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    BOOLEAN_NOT     reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    INC             reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    DEC             reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    INT_CAST        reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    ARRAY_CAST      reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    STRING_CAST     reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    DOUBLE_CAST     reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    BOOL_CAST       reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    UNSET_CAST      reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    BINARY_CAST     reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    ISSET           reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    EMPTY           reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    EVAL            reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    INCLUDE         reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    INCLUDE_ONCE    reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    REQUIRE         reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    REQUIRE_ONCE    reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    PRINT           reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    AT              reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    LPAREN          reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    DOUBLE_QUOTE    reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    IDENTIFIER      reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    EXIT            reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    DIE             reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    INT_NUMBER      reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    FLOAT_NUMBER    reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    FUNC_C          reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    METHOD_C        reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    LINE            reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    FILE            reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    DIR             reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    START_HEREDOC   reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    START_NOWDOC    reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    DOLLAR          reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    VARIABLE        reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    $end            reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    RBRACE          reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    YIELD           reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    ELSEIF          reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    ELSE            reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    ENDIF           reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    ENDWHILE        reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    ENDSWITCH       reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    ENDFOR          reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    CASE            reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)
    DEFAULT         reduce using rule 20 (statement -> WHILE LPAREN expr RPAREN while_statement .)


state 436

    (45) while_statement -> statement .

    ELSEIF          reduce using rule 45 (while_statement -> statement .)
    ELSE            reduce using rule 45 (while_statement -> statement .)
    HALT_COMPILER   reduce using rule 45 (while_statement -> statement .)
    CONST           reduce using rule 45 (while_statement -> statement .)
    LBRACE          reduce using rule 45 (while_statement -> statement .)
    IF              reduce using rule 45 (while_statement -> statement .)
    WHILE           reduce using rule 45 (while_statement -> statement .)
    DO              reduce using rule 45 (while_statement -> statement .)
    FOR             reduce using rule 45 (while_statement -> statement .)
    SWITCH          reduce using rule 45 (while_statement -> statement .)
    BREAK           reduce using rule 45 (while_statement -> statement .)
    CONTINUE        reduce using rule 45 (while_statement -> statement .)
    RETURN          reduce using rule 45 (while_statement -> statement .)
    GLOBAL          reduce using rule 45 (while_statement -> statement .)
    STATIC          reduce using rule 45 (while_statement -> statement .)
    ECHO            reduce using rule 45 (while_statement -> statement .)
    INLINE_HTML     reduce using rule 45 (while_statement -> statement .)
    UNSET           reduce using rule 45 (while_statement -> statement .)
    SEMI_COLON      reduce using rule 45 (while_statement -> statement .)
    FUNCTION        reduce using rule 45 (while_statement -> statement .)
    CLONE           reduce using rule 45 (while_statement -> statement .)
    LIST            reduce using rule 45 (while_statement -> statement .)
    ARRAY           reduce using rule 45 (while_statement -> statement .)
    LBRACKET        reduce using rule 45 (while_statement -> statement .)
    PLUS            reduce using rule 45 (while_statement -> statement .)
    MINUS           reduce using rule 45 (while_statement -> statement .)
    NOT             reduce using rule 45 (while_statement -> statement .)
    BOOLEAN_NOT     reduce using rule 45 (while_statement -> statement .)
    INC             reduce using rule 45 (while_statement -> statement .)
    DEC             reduce using rule 45 (while_statement -> statement .)
    INT_CAST        reduce using rule 45 (while_statement -> statement .)
    ARRAY_CAST      reduce using rule 45 (while_statement -> statement .)
    STRING_CAST     reduce using rule 45 (while_statement -> statement .)
    DOUBLE_CAST     reduce using rule 45 (while_statement -> statement .)
    BOOL_CAST       reduce using rule 45 (while_statement -> statement .)
    UNSET_CAST      reduce using rule 45 (while_statement -> statement .)
    BINARY_CAST     reduce using rule 45 (while_statement -> statement .)
    ISSET           reduce using rule 45 (while_statement -> statement .)
    EMPTY           reduce using rule 45 (while_statement -> statement .)
    EVAL            reduce using rule 45 (while_statement -> statement .)
    INCLUDE         reduce using rule 45 (while_statement -> statement .)
    INCLUDE_ONCE    reduce using rule 45 (while_statement -> statement .)
    REQUIRE         reduce using rule 45 (while_statement -> statement .)
    REQUIRE_ONCE    reduce using rule 45 (while_statement -> statement .)
    PRINT           reduce using rule 45 (while_statement -> statement .)
    AT              reduce using rule 45 (while_statement -> statement .)
    LPAREN          reduce using rule 45 (while_statement -> statement .)
    DOUBLE_QUOTE    reduce using rule 45 (while_statement -> statement .)
    IDENTIFIER      reduce using rule 45 (while_statement -> statement .)
    EXIT            reduce using rule 45 (while_statement -> statement .)
    DIE             reduce using rule 45 (while_statement -> statement .)
    INT_NUMBER      reduce using rule 45 (while_statement -> statement .)
    FLOAT_NUMBER    reduce using rule 45 (while_statement -> statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 45 (while_statement -> statement .)
    FUNC_C          reduce using rule 45 (while_statement -> statement .)
    METHOD_C        reduce using rule 45 (while_statement -> statement .)
    LINE            reduce using rule 45 (while_statement -> statement .)
    FILE            reduce using rule 45 (while_statement -> statement .)
    DIR             reduce using rule 45 (while_statement -> statement .)
    START_HEREDOC   reduce using rule 45 (while_statement -> statement .)
    START_NOWDOC    reduce using rule 45 (while_statement -> statement .)
    DOLLAR          reduce using rule 45 (while_statement -> statement .)
    VARIABLE        reduce using rule 45 (while_statement -> statement .)
    $end            reduce using rule 45 (while_statement -> statement .)
    RBRACE          reduce using rule 45 (while_statement -> statement .)
    YIELD           reduce using rule 45 (while_statement -> statement .)
    ENDIF           reduce using rule 45 (while_statement -> statement .)
    ENDWHILE        reduce using rule 45 (while_statement -> statement .)
    ENDSWITCH       reduce using rule 45 (while_statement -> statement .)
    ENDFOR          reduce using rule 45 (while_statement -> statement .)
    CASE            reduce using rule 45 (while_statement -> statement .)
    DEFAULT         reduce using rule 45 (while_statement -> statement .)


state 437

    (46) while_statement -> COLON . inner_statement_list ENDWHILE SEMI_COLON
    (11) inner_statement_list -> . inner_statement_list inner_statement
    (12) inner_statement_list -> . empty
    (289) empty -> .

    ENDWHILE        reduce using rule 289 (empty -> .)
    YIELD           reduce using rule 289 (empty -> .)
    LBRACE          reduce using rule 289 (empty -> .)
    IF              reduce using rule 289 (empty -> .)
    WHILE           reduce using rule 289 (empty -> .)
    DO              reduce using rule 289 (empty -> .)
    FOR             reduce using rule 289 (empty -> .)
    SWITCH          reduce using rule 289 (empty -> .)
    BREAK           reduce using rule 289 (empty -> .)
    CONTINUE        reduce using rule 289 (empty -> .)
    RETURN          reduce using rule 289 (empty -> .)
    GLOBAL          reduce using rule 289 (empty -> .)
    STATIC          reduce using rule 289 (empty -> .)
    ECHO            reduce using rule 289 (empty -> .)
    INLINE_HTML     reduce using rule 289 (empty -> .)
    UNSET           reduce using rule 289 (empty -> .)
    SEMI_COLON      reduce using rule 289 (empty -> .)
    FUNCTION        reduce using rule 289 (empty -> .)
    CLONE           reduce using rule 289 (empty -> .)
    LIST            reduce using rule 289 (empty -> .)
    ARRAY           reduce using rule 289 (empty -> .)
    LBRACKET        reduce using rule 289 (empty -> .)
    PLUS            reduce using rule 289 (empty -> .)
    MINUS           reduce using rule 289 (empty -> .)
    NOT             reduce using rule 289 (empty -> .)
    BOOLEAN_NOT     reduce using rule 289 (empty -> .)
    INC             reduce using rule 289 (empty -> .)
    DEC             reduce using rule 289 (empty -> .)
    INT_CAST        reduce using rule 289 (empty -> .)
    ARRAY_CAST      reduce using rule 289 (empty -> .)
    STRING_CAST     reduce using rule 289 (empty -> .)
    DOUBLE_CAST     reduce using rule 289 (empty -> .)
    BOOL_CAST       reduce using rule 289 (empty -> .)
    UNSET_CAST      reduce using rule 289 (empty -> .)
    BINARY_CAST     reduce using rule 289 (empty -> .)
    ISSET           reduce using rule 289 (empty -> .)
    EMPTY           reduce using rule 289 (empty -> .)
    EVAL            reduce using rule 289 (empty -> .)
    INCLUDE         reduce using rule 289 (empty -> .)
    INCLUDE_ONCE    reduce using rule 289 (empty -> .)
    REQUIRE         reduce using rule 289 (empty -> .)
    REQUIRE_ONCE    reduce using rule 289 (empty -> .)
    PRINT           reduce using rule 289 (empty -> .)
    AT              reduce using rule 289 (empty -> .)
    LPAREN          reduce using rule 289 (empty -> .)
    DOUBLE_QUOTE    reduce using rule 289 (empty -> .)
    IDENTIFIER      reduce using rule 289 (empty -> .)
    EXIT            reduce using rule 289 (empty -> .)
    DIE             reduce using rule 289 (empty -> .)
    INT_NUMBER      reduce using rule 289 (empty -> .)
    FLOAT_NUMBER    reduce using rule 289 (empty -> .)
    CONSTANT_ENCAPSED_STRING reduce using rule 289 (empty -> .)
    FUNC_C          reduce using rule 289 (empty -> .)
    METHOD_C        reduce using rule 289 (empty -> .)
    LINE            reduce using rule 289 (empty -> .)
    FILE            reduce using rule 289 (empty -> .)
    DIR             reduce using rule 289 (empty -> .)
    START_HEREDOC   reduce using rule 289 (empty -> .)
    START_NOWDOC    reduce using rule 289 (empty -> .)
    DOLLAR          reduce using rule 289 (empty -> .)
    VARIABLE        reduce using rule 289 (empty -> .)

    inner_statement_list           shift and go to state 501
    empty                          shift and go to state 89

state 438

    (21) statement -> DO statement WHILE LPAREN expr . RPAREN SEMI_COLON
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    RPAREN          shift and go to state 502
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 439

    (22) statement -> FOR LPAREN for_expr SEMI_COLON for_expr . SEMI_COLON for_expr RPAREN for_statement

    SEMI_COLON      shift and go to state 503


state 440

    (49) non_empty_for_expr -> non_empty_for_expr COMMA expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    COMMA           reduce using rule 49 (non_empty_for_expr -> non_empty_for_expr COMMA expr .)
    SEMI_COLON      reduce using rule 49 (non_empty_for_expr -> non_empty_for_expr COMMA expr .)
    RPAREN          reduce using rule 49 (non_empty_for_expr -> non_empty_for_expr COMMA expr .)
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 441

    (23) statement -> SWITCH LPAREN expr RPAREN switch_case_list .

    HALT_COMPILER   reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    CONST           reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    LBRACE          reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    IF              reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    WHILE           reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    DO              reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    FOR             reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    SWITCH          reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    BREAK           reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    CONTINUE        reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    RETURN          reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    GLOBAL          reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    STATIC          reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    ECHO            reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    INLINE_HTML     reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    UNSET           reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    SEMI_COLON      reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    FUNCTION        reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    CLONE           reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    LIST            reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    ARRAY           reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    LBRACKET        reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    PLUS            reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    MINUS           reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    NOT             reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    BOOLEAN_NOT     reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    INC             reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    DEC             reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    INT_CAST        reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    ARRAY_CAST      reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    STRING_CAST     reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    DOUBLE_CAST     reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    BOOL_CAST       reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    UNSET_CAST      reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    BINARY_CAST     reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    ISSET           reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    EMPTY           reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    EVAL            reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    INCLUDE         reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    INCLUDE_ONCE    reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    REQUIRE         reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    REQUIRE_ONCE    reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    PRINT           reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    AT              reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    LPAREN          reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    DOUBLE_QUOTE    reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    IDENTIFIER      reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    EXIT            reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    DIE             reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    INT_NUMBER      reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    FLOAT_NUMBER    reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    CONSTANT_ENCAPSED_STRING reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    FUNC_C          reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    METHOD_C        reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    LINE            reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    FILE            reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    DIR             reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    START_HEREDOC   reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    START_NOWDOC    reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    DOLLAR          reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    VARIABLE        reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    $end            reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    RBRACE          reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    YIELD           reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    ELSEIF          reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    ELSE            reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    ENDIF           reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    ENDWHILE        reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    ENDSWITCH       reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    ENDFOR          reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    CASE            reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)
    DEFAULT         reduce using rule 23 (statement -> SWITCH LPAREN expr RPAREN switch_case_list .)


state 442

    (53) switch_case_list -> LBRACE . case_list RBRACE
    (54) switch_case_list -> LBRACE . SEMI_COLON case_list RBRACE
    (57) case_list -> . empty
    (58) case_list -> . case_list_no_default CASE expr case_separator inner_statement_list
    (59) case_list -> . case_list_no_default DEFAULT case_separator inner_statement_list
    (289) empty -> .
    (60) case_list_no_default -> . empty
    (61) case_list_no_default -> . case_list_no_default CASE expr case_separator inner_statement_list

    SEMI_COLON      shift and go to state 505
    RBRACE          reduce using rule 289 (empty -> .)
    CASE            reduce using rule 289 (empty -> .)
    DEFAULT         reduce using rule 289 (empty -> .)

    case_list                      shift and go to state 504
    empty                          shift and go to state 506
    case_list_no_default           shift and go to state 507

state 443

    (55) switch_case_list -> COLON . case_list ENDSWITCH SEMI_COLON
    (56) switch_case_list -> COLON . SEMI_COLON case_list ENDSWITCH SEMI_COLON
    (57) case_list -> . empty
    (58) case_list -> . case_list_no_default CASE expr case_separator inner_statement_list
    (59) case_list -> . case_list_no_default DEFAULT case_separator inner_statement_list
    (289) empty -> .
    (60) case_list_no_default -> . empty
    (61) case_list_no_default -> . case_list_no_default CASE expr case_separator inner_statement_list

    SEMI_COLON      shift and go to state 509
    ENDSWITCH       reduce using rule 289 (empty -> .)
    CASE            reduce using rule 289 (empty -> .)
    DEFAULT         reduce using rule 289 (empty -> .)

    case_list                      shift and go to state 508
    empty                          shift and go to state 506
    case_list_no_default           shift and go to state 507

state 444

    (68) global_var -> DOLLAR LBRACE expr RBRACE .

    SEMI_COLON      reduce using rule 68 (global_var -> DOLLAR LBRACE expr RBRACE .)
    COMMA           reduce using rule 68 (global_var -> DOLLAR LBRACE expr RBRACE .)


state 445

    (35) statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .

    HALT_COMPILER   reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    CONST           reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    LBRACE          reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    IF              reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    WHILE           reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    DO              reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    FOR             reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    SWITCH          reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    BREAK           reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    CONTINUE        reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    RETURN          reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    GLOBAL          reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    STATIC          reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    ECHO            reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    INLINE_HTML     reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    UNSET           reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    SEMI_COLON      reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    FUNCTION        reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    CLONE           reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    LIST            reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    ARRAY           reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    LBRACKET        reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    PLUS            reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    MINUS           reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    NOT             reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    INC             reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    DEC             reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    INT_CAST        reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    ARRAY_CAST      reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    STRING_CAST     reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    BOOL_CAST       reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    UNSET_CAST      reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    BINARY_CAST     reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    ISSET           reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    EMPTY           reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    EVAL            reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    INCLUDE         reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    REQUIRE         reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    PRINT           reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    AT              reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    LPAREN          reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    IDENTIFIER      reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    EXIT            reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    DIE             reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    INT_NUMBER      reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    FUNC_C          reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    METHOD_C        reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    LINE            reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    FILE            reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    DIR             reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    START_HEREDOC   reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    START_NOWDOC    reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    DOLLAR          reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    VARIABLE        reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    $end            reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    RBRACE          reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    YIELD           reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    ELSEIF          reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    ELSE            reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    ENDIF           reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    ENDWHILE        reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    ENDSWITCH       reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    ENDFOR          reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    CASE            reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)
    DEFAULT         reduce using rule 35 (statement -> UNSET LPAREN unset_variables RPAREN SEMI_COLON .)


state 446

    (75) unset_variables -> unset_variables COMMA unset_variable .

    RPAREN          reduce using rule 75 (unset_variables -> unset_variables COMMA unset_variable .)
    COMMA           reduce using rule 75 (unset_variables -> unset_variables COMMA unset_variable .)


state 447

    (78) function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list . RPAREN LBRACE inner_statement_list RBRACE

    RPAREN          shift and go to state 510


state 448

    (137) expr -> FUNCTION is_reference LPAREN parameter_list RPAREN . lexical_vars LBRACE inner_statement_list RBRACE
    (138) lexical_vars -> . USE LPAREN lexical_var_list RPAREN
    (139) lexical_vars -> . empty
    (289) empty -> .

    USE             shift and go to state 512
    LBRACE          reduce using rule 289 (empty -> .)

    lexical_vars                   shift and go to state 511
    empty                          shift and go to state 513

state 449

    (83) non_empty_parameter_list -> non_empty_parameter_list COMMA . parameter
    (85) parameter -> . VARIABLE
    (86) parameter -> . AND VARIABLE
    (87) parameter -> . VARIABLE EQUALS static_scalar
    (88) parameter -> . AND VARIABLE EQUALS static_scalar

    VARIABLE        shift and go to state 365
    AND             shift and go to state 366

    parameter                      shift and go to state 514

state 450

    (87) parameter -> VARIABLE EQUALS . static_scalar
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_scalar                  shift and go to state 515
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 451

    (86) parameter -> AND VARIABLE .
    (88) parameter -> AND VARIABLE . EQUALS static_scalar

    COMMA           reduce using rule 86 (parameter -> AND VARIABLE .)
    RPAREN          reduce using rule 86 (parameter -> AND VARIABLE .)
    EQUALS          shift and go to state 516


state 452

    (98) assignment_list_element -> LIST LPAREN assignment_list . RPAREN
    (94) assignment_list -> assignment_list . COMMA assignment_list_element

    RPAREN          shift and go to state 517
    COMMA           shift and go to state 374


state 453

    (93) expr -> LIST LPAREN assignment_list RPAREN EQUALS . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 518
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 454

    (94) assignment_list -> assignment_list COMMA assignment_list_element .

    RPAREN          reduce using rule 94 (assignment_list -> assignment_list COMMA assignment_list_element .)
    COMMA           reduce using rule 94 (assignment_list -> assignment_list COMMA assignment_list_element .)


state 455

    (127) non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr DOUBLE_ARROW . AND variable
    (128) non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr DOUBLE_ARROW . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    AND             shift and go to state 520
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 519
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 456

    (129) non_empty_array_pair_list -> expr DOUBLE_ARROW AND variable .
    (111) variable -> variable . LBRACKET dim_offset RBRACKET

    COMMA           reduce using rule 129 (non_empty_array_pair_list -> expr DOUBLE_ARROW AND variable .)
    RBRACKET        reduce using rule 129 (non_empty_array_pair_list -> expr DOUBLE_ARROW AND variable .)
    RPAREN          reduce using rule 129 (non_empty_array_pair_list -> expr DOUBLE_ARROW AND variable .)
    LBRACKET        shift and go to state 160


state 457

    (199) isset_variables -> isset_variables COMMA variable .
    (111) variable -> variable . LBRACKET dim_offset RBRACKET

    RPAREN          reduce using rule 199 (isset_variables -> isset_variables COMMA variable .)
    COMMA           reduce using rule 199 (isset_variables -> isset_variables COMMA variable .)
    LBRACKET        shift and go to state 160


state 458

    (288) encaps_var_offset -> VARIABLE .

    RBRACKET        reduce using rule 288 (encaps_var_offset -> VARIABLE .)


state 459

    (282) encaps_var -> VARIABLE LBRACKET encaps_var_offset . RBRACKET

    RBRACKET        shift and go to state 521


state 460

    (286) encaps_var_offset -> IDENTIFIER .

    RBRACKET        reduce using rule 286 (encaps_var_offset -> IDENTIFIER .)


state 461

    (287) encaps_var_offset -> NUM_STRING .

    RBRACKET        reduce using rule 287 (encaps_var_offset -> NUM_STRING .)


state 462

    (283) encaps_var -> DOLLAR_OPEN_CURLY_BRACES expr RBRACE .

    DOUBLE_QUOTE    reduce using rule 283 (encaps_var -> DOLLAR_OPEN_CURLY_BRACES expr RBRACE .)
    VARIABLE        reduce using rule 283 (encaps_var -> DOLLAR_OPEN_CURLY_BRACES expr RBRACE .)
    DOLLAR_OPEN_CURLY_BRACES reduce using rule 283 (encaps_var -> DOLLAR_OPEN_CURLY_BRACES expr RBRACE .)
    CURLY_OPEN      reduce using rule 283 (encaps_var -> DOLLAR_OPEN_CURLY_BRACES expr RBRACE .)
    END_HEREDOC     reduce using rule 283 (encaps_var -> DOLLAR_OPEN_CURLY_BRACES expr RBRACE .)


state 463

    (284) encaps_var -> DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME LBRACKET . expr RBRACKET RBRACE
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 522
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 464

    (285) encaps_var -> CURLY_OPEN variable RBRACE .

    DOUBLE_QUOTE    reduce using rule 285 (encaps_var -> CURLY_OPEN variable RBRACE .)
    VARIABLE        reduce using rule 285 (encaps_var -> CURLY_OPEN variable RBRACE .)
    DOLLAR_OPEN_CURLY_BRACES reduce using rule 285 (encaps_var -> CURLY_OPEN variable RBRACE .)
    CURLY_OPEN      reduce using rule 285 (encaps_var -> CURLY_OPEN variable RBRACE .)
    END_HEREDOC     reduce using rule 285 (encaps_var -> CURLY_OPEN variable RBRACE .)


state 465

    (254) static_expr -> static_expr BOOLEAN_AND static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 254 (static_expr -> static_expr BOOLEAN_AND static_expr .)
    BOOLEAN_OR      reduce using rule 254 (static_expr -> static_expr BOOLEAN_AND static_expr .)
    LOGICAL_AND     reduce using rule 254 (static_expr -> static_expr BOOLEAN_AND static_expr .)
    LOGICAL_OR      reduce using rule 254 (static_expr -> static_expr BOOLEAN_AND static_expr .)
    LOGICAL_XOR     reduce using rule 254 (static_expr -> static_expr BOOLEAN_AND static_expr .)
    SEMI_COLON      reduce using rule 254 (static_expr -> static_expr BOOLEAN_AND static_expr .)
    COMMA           reduce using rule 254 (static_expr -> static_expr BOOLEAN_AND static_expr .)
    RPAREN          reduce using rule 254 (static_expr -> static_expr BOOLEAN_AND static_expr .)
    RBRACKET        reduce using rule 254 (static_expr -> static_expr BOOLEAN_AND static_expr .)
    AND             shift and go to state 399
    OR              shift and go to state 400
    XOR             shift and go to state 401
    CONCAT          shift and go to state 402
    PLUS            shift and go to state 403
    MINUS           shift and go to state 404
    MUL             shift and go to state 405
    DIV             shift and go to state 406
    SL              shift and go to state 407
    SR              shift and go to state 408
    MOD             shift and go to state 409
    IS_IDENTICAL    shift and go to state 410
    IS_NOT_IDENTICAL shift and go to state 411
    IS_EQUAL_TO     shift and go to state 412
    IS_NOT_EQUAL    shift and go to state 413
    LESS_THAN       shift and go to state 414
    LESS_THAN_OR_EQUAL shift and go to state 415
    GREATER_THAN    shift and go to state 416
    GRATER_THAN_OR_EQUAL shift and go to state 417

  ! AND             [ reduce using rule 254 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! OR              [ reduce using rule 254 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! XOR             [ reduce using rule 254 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! CONCAT          [ reduce using rule 254 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! PLUS            [ reduce using rule 254 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! MINUS           [ reduce using rule 254 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! MUL             [ reduce using rule 254 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! DIV             [ reduce using rule 254 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! SL              [ reduce using rule 254 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! SR              [ reduce using rule 254 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! MOD             [ reduce using rule 254 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 254 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 254 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 254 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 254 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! LESS_THAN       [ reduce using rule 254 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 254 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! GREATER_THAN    [ reduce using rule 254 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 254 (static_expr -> static_expr BOOLEAN_AND static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 394 ]
  ! BOOLEAN_OR      [ shift and go to state 395 ]
  ! LOGICAL_AND     [ shift and go to state 396 ]
  ! LOGICAL_OR      [ shift and go to state 397 ]
  ! LOGICAL_XOR     [ shift and go to state 398 ]


state 466

    (255) static_expr -> static_expr BOOLEAN_OR static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_OR      reduce using rule 255 (static_expr -> static_expr BOOLEAN_OR static_expr .)
    LOGICAL_AND     reduce using rule 255 (static_expr -> static_expr BOOLEAN_OR static_expr .)
    LOGICAL_OR      reduce using rule 255 (static_expr -> static_expr BOOLEAN_OR static_expr .)
    LOGICAL_XOR     reduce using rule 255 (static_expr -> static_expr BOOLEAN_OR static_expr .)
    SEMI_COLON      reduce using rule 255 (static_expr -> static_expr BOOLEAN_OR static_expr .)
    COMMA           reduce using rule 255 (static_expr -> static_expr BOOLEAN_OR static_expr .)
    RPAREN          reduce using rule 255 (static_expr -> static_expr BOOLEAN_OR static_expr .)
    RBRACKET        reduce using rule 255 (static_expr -> static_expr BOOLEAN_OR static_expr .)
    BOOLEAN_AND     shift and go to state 394
    AND             shift and go to state 399
    OR              shift and go to state 400
    XOR             shift and go to state 401
    CONCAT          shift and go to state 402
    PLUS            shift and go to state 403
    MINUS           shift and go to state 404
    MUL             shift and go to state 405
    DIV             shift and go to state 406
    SL              shift and go to state 407
    SR              shift and go to state 408
    MOD             shift and go to state 409
    IS_IDENTICAL    shift and go to state 410
    IS_NOT_IDENTICAL shift and go to state 411
    IS_EQUAL_TO     shift and go to state 412
    IS_NOT_EQUAL    shift and go to state 413
    LESS_THAN       shift and go to state 414
    LESS_THAN_OR_EQUAL shift and go to state 415
    GREATER_THAN    shift and go to state 416
    GRATER_THAN_OR_EQUAL shift and go to state 417

  ! BOOLEAN_AND     [ reduce using rule 255 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! AND             [ reduce using rule 255 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! OR              [ reduce using rule 255 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! XOR             [ reduce using rule 255 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! CONCAT          [ reduce using rule 255 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! PLUS            [ reduce using rule 255 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! MINUS           [ reduce using rule 255 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! MUL             [ reduce using rule 255 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! DIV             [ reduce using rule 255 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! SL              [ reduce using rule 255 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! SR              [ reduce using rule 255 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! MOD             [ reduce using rule 255 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 255 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 255 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 255 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 255 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! LESS_THAN       [ reduce using rule 255 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 255 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! GREATER_THAN    [ reduce using rule 255 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 255 (static_expr -> static_expr BOOLEAN_OR static_expr .) ]
  ! BOOLEAN_OR      [ shift and go to state 395 ]
  ! LOGICAL_AND     [ shift and go to state 396 ]
  ! LOGICAL_OR      [ shift and go to state 397 ]
  ! LOGICAL_XOR     [ shift and go to state 398 ]


state 467

    (256) static_expr -> static_expr LOGICAL_AND static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    LOGICAL_AND     reduce using rule 256 (static_expr -> static_expr LOGICAL_AND static_expr .)
    LOGICAL_OR      reduce using rule 256 (static_expr -> static_expr LOGICAL_AND static_expr .)
    LOGICAL_XOR     reduce using rule 256 (static_expr -> static_expr LOGICAL_AND static_expr .)
    SEMI_COLON      reduce using rule 256 (static_expr -> static_expr LOGICAL_AND static_expr .)
    COMMA           reduce using rule 256 (static_expr -> static_expr LOGICAL_AND static_expr .)
    RPAREN          reduce using rule 256 (static_expr -> static_expr LOGICAL_AND static_expr .)
    RBRACKET        reduce using rule 256 (static_expr -> static_expr LOGICAL_AND static_expr .)
    BOOLEAN_AND     shift and go to state 394
    BOOLEAN_OR      shift and go to state 395
    AND             shift and go to state 399
    OR              shift and go to state 400
    XOR             shift and go to state 401
    CONCAT          shift and go to state 402
    PLUS            shift and go to state 403
    MINUS           shift and go to state 404
    MUL             shift and go to state 405
    DIV             shift and go to state 406
    SL              shift and go to state 407
    SR              shift and go to state 408
    MOD             shift and go to state 409
    IS_IDENTICAL    shift and go to state 410
    IS_NOT_IDENTICAL shift and go to state 411
    IS_EQUAL_TO     shift and go to state 412
    IS_NOT_EQUAL    shift and go to state 413
    LESS_THAN       shift and go to state 414
    LESS_THAN_OR_EQUAL shift and go to state 415
    GREATER_THAN    shift and go to state 416
    GRATER_THAN_OR_EQUAL shift and go to state 417

  ! BOOLEAN_AND     [ reduce using rule 256 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 256 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! AND             [ reduce using rule 256 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! OR              [ reduce using rule 256 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! XOR             [ reduce using rule 256 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! CONCAT          [ reduce using rule 256 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! PLUS            [ reduce using rule 256 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! MINUS           [ reduce using rule 256 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! MUL             [ reduce using rule 256 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! DIV             [ reduce using rule 256 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! SL              [ reduce using rule 256 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! SR              [ reduce using rule 256 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! MOD             [ reduce using rule 256 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 256 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 256 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 256 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 256 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! LESS_THAN       [ reduce using rule 256 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 256 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! GREATER_THAN    [ reduce using rule 256 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 256 (static_expr -> static_expr LOGICAL_AND static_expr .) ]
  ! LOGICAL_AND     [ shift and go to state 396 ]
  ! LOGICAL_OR      [ shift and go to state 397 ]
  ! LOGICAL_XOR     [ shift and go to state 398 ]


state 468

    (257) static_expr -> static_expr LOGICAL_OR static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    LOGICAL_OR      reduce using rule 257 (static_expr -> static_expr LOGICAL_OR static_expr .)
    SEMI_COLON      reduce using rule 257 (static_expr -> static_expr LOGICAL_OR static_expr .)
    COMMA           reduce using rule 257 (static_expr -> static_expr LOGICAL_OR static_expr .)
    RPAREN          reduce using rule 257 (static_expr -> static_expr LOGICAL_OR static_expr .)
    RBRACKET        reduce using rule 257 (static_expr -> static_expr LOGICAL_OR static_expr .)
    BOOLEAN_AND     shift and go to state 394
    BOOLEAN_OR      shift and go to state 395
    LOGICAL_AND     shift and go to state 396
    LOGICAL_XOR     shift and go to state 398
    AND             shift and go to state 399
    OR              shift and go to state 400
    XOR             shift and go to state 401
    CONCAT          shift and go to state 402
    PLUS            shift and go to state 403
    MINUS           shift and go to state 404
    MUL             shift and go to state 405
    DIV             shift and go to state 406
    SL              shift and go to state 407
    SR              shift and go to state 408
    MOD             shift and go to state 409
    IS_IDENTICAL    shift and go to state 410
    IS_NOT_IDENTICAL shift and go to state 411
    IS_EQUAL_TO     shift and go to state 412
    IS_NOT_EQUAL    shift and go to state 413
    LESS_THAN       shift and go to state 414
    LESS_THAN_OR_EQUAL shift and go to state 415
    GREATER_THAN    shift and go to state 416
    GRATER_THAN_OR_EQUAL shift and go to state 417

  ! BOOLEAN_AND     [ reduce using rule 257 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 257 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! LOGICAL_AND     [ reduce using rule 257 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! LOGICAL_XOR     [ reduce using rule 257 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! AND             [ reduce using rule 257 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! OR              [ reduce using rule 257 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! XOR             [ reduce using rule 257 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! CONCAT          [ reduce using rule 257 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! PLUS            [ reduce using rule 257 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! MINUS           [ reduce using rule 257 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! MUL             [ reduce using rule 257 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! DIV             [ reduce using rule 257 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! SL              [ reduce using rule 257 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! SR              [ reduce using rule 257 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! MOD             [ reduce using rule 257 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 257 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 257 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 257 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 257 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! LESS_THAN       [ reduce using rule 257 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 257 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! GREATER_THAN    [ reduce using rule 257 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 257 (static_expr -> static_expr LOGICAL_OR static_expr .) ]
  ! LOGICAL_OR      [ shift and go to state 397 ]


state 469

    (258) static_expr -> static_expr LOGICAL_XOR static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    LOGICAL_OR      reduce using rule 258 (static_expr -> static_expr LOGICAL_XOR static_expr .)
    LOGICAL_XOR     reduce using rule 258 (static_expr -> static_expr LOGICAL_XOR static_expr .)
    SEMI_COLON      reduce using rule 258 (static_expr -> static_expr LOGICAL_XOR static_expr .)
    COMMA           reduce using rule 258 (static_expr -> static_expr LOGICAL_XOR static_expr .)
    RPAREN          reduce using rule 258 (static_expr -> static_expr LOGICAL_XOR static_expr .)
    RBRACKET        reduce using rule 258 (static_expr -> static_expr LOGICAL_XOR static_expr .)
    BOOLEAN_AND     shift and go to state 394
    BOOLEAN_OR      shift and go to state 395
    LOGICAL_AND     shift and go to state 396
    AND             shift and go to state 399
    OR              shift and go to state 400
    XOR             shift and go to state 401
    CONCAT          shift and go to state 402
    PLUS            shift and go to state 403
    MINUS           shift and go to state 404
    MUL             shift and go to state 405
    DIV             shift and go to state 406
    SL              shift and go to state 407
    SR              shift and go to state 408
    MOD             shift and go to state 409
    IS_IDENTICAL    shift and go to state 410
    IS_NOT_IDENTICAL shift and go to state 411
    IS_EQUAL_TO     shift and go to state 412
    IS_NOT_EQUAL    shift and go to state 413
    LESS_THAN       shift and go to state 414
    LESS_THAN_OR_EQUAL shift and go to state 415
    GREATER_THAN    shift and go to state 416
    GRATER_THAN_OR_EQUAL shift and go to state 417

  ! BOOLEAN_AND     [ reduce using rule 258 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 258 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! LOGICAL_AND     [ reduce using rule 258 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! AND             [ reduce using rule 258 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! OR              [ reduce using rule 258 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! XOR             [ reduce using rule 258 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! CONCAT          [ reduce using rule 258 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! PLUS            [ reduce using rule 258 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! MINUS           [ reduce using rule 258 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! MUL             [ reduce using rule 258 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! DIV             [ reduce using rule 258 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! SL              [ reduce using rule 258 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! SR              [ reduce using rule 258 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! MOD             [ reduce using rule 258 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 258 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 258 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 258 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 258 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! LESS_THAN       [ reduce using rule 258 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 258 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! GREATER_THAN    [ reduce using rule 258 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 258 (static_expr -> static_expr LOGICAL_XOR static_expr .) ]
  ! LOGICAL_OR      [ shift and go to state 397 ]
  ! LOGICAL_XOR     [ shift and go to state 398 ]


state 470

    (259) static_expr -> static_expr AND static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 259 (static_expr -> static_expr AND static_expr .)
    BOOLEAN_OR      reduce using rule 259 (static_expr -> static_expr AND static_expr .)
    LOGICAL_AND     reduce using rule 259 (static_expr -> static_expr AND static_expr .)
    LOGICAL_OR      reduce using rule 259 (static_expr -> static_expr AND static_expr .)
    LOGICAL_XOR     reduce using rule 259 (static_expr -> static_expr AND static_expr .)
    AND             reduce using rule 259 (static_expr -> static_expr AND static_expr .)
    OR              reduce using rule 259 (static_expr -> static_expr AND static_expr .)
    XOR             reduce using rule 259 (static_expr -> static_expr AND static_expr .)
    SEMI_COLON      reduce using rule 259 (static_expr -> static_expr AND static_expr .)
    COMMA           reduce using rule 259 (static_expr -> static_expr AND static_expr .)
    RPAREN          reduce using rule 259 (static_expr -> static_expr AND static_expr .)
    RBRACKET        reduce using rule 259 (static_expr -> static_expr AND static_expr .)
    CONCAT          shift and go to state 402
    PLUS            shift and go to state 403
    MINUS           shift and go to state 404
    MUL             shift and go to state 405
    DIV             shift and go to state 406
    SL              shift and go to state 407
    SR              shift and go to state 408
    MOD             shift and go to state 409
    IS_IDENTICAL    shift and go to state 410
    IS_NOT_IDENTICAL shift and go to state 411
    IS_EQUAL_TO     shift and go to state 412
    IS_NOT_EQUAL    shift and go to state 413
    LESS_THAN       shift and go to state 414
    LESS_THAN_OR_EQUAL shift and go to state 415
    GREATER_THAN    shift and go to state 416
    GRATER_THAN_OR_EQUAL shift and go to state 417

  ! CONCAT          [ reduce using rule 259 (static_expr -> static_expr AND static_expr .) ]
  ! PLUS            [ reduce using rule 259 (static_expr -> static_expr AND static_expr .) ]
  ! MINUS           [ reduce using rule 259 (static_expr -> static_expr AND static_expr .) ]
  ! MUL             [ reduce using rule 259 (static_expr -> static_expr AND static_expr .) ]
  ! DIV             [ reduce using rule 259 (static_expr -> static_expr AND static_expr .) ]
  ! SL              [ reduce using rule 259 (static_expr -> static_expr AND static_expr .) ]
  ! SR              [ reduce using rule 259 (static_expr -> static_expr AND static_expr .) ]
  ! MOD             [ reduce using rule 259 (static_expr -> static_expr AND static_expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 259 (static_expr -> static_expr AND static_expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 259 (static_expr -> static_expr AND static_expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 259 (static_expr -> static_expr AND static_expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 259 (static_expr -> static_expr AND static_expr .) ]
  ! LESS_THAN       [ reduce using rule 259 (static_expr -> static_expr AND static_expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 259 (static_expr -> static_expr AND static_expr .) ]
  ! GREATER_THAN    [ reduce using rule 259 (static_expr -> static_expr AND static_expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 259 (static_expr -> static_expr AND static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 394 ]
  ! BOOLEAN_OR      [ shift and go to state 395 ]
  ! LOGICAL_AND     [ shift and go to state 396 ]
  ! LOGICAL_OR      [ shift and go to state 397 ]
  ! LOGICAL_XOR     [ shift and go to state 398 ]
  ! AND             [ shift and go to state 399 ]
  ! OR              [ shift and go to state 400 ]
  ! XOR             [ shift and go to state 401 ]


state 471

    (260) static_expr -> static_expr OR static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 260 (static_expr -> static_expr OR static_expr .)
    BOOLEAN_OR      reduce using rule 260 (static_expr -> static_expr OR static_expr .)
    LOGICAL_AND     reduce using rule 260 (static_expr -> static_expr OR static_expr .)
    LOGICAL_OR      reduce using rule 260 (static_expr -> static_expr OR static_expr .)
    LOGICAL_XOR     reduce using rule 260 (static_expr -> static_expr OR static_expr .)
    OR              reduce using rule 260 (static_expr -> static_expr OR static_expr .)
    SEMI_COLON      reduce using rule 260 (static_expr -> static_expr OR static_expr .)
    COMMA           reduce using rule 260 (static_expr -> static_expr OR static_expr .)
    RPAREN          reduce using rule 260 (static_expr -> static_expr OR static_expr .)
    RBRACKET        reduce using rule 260 (static_expr -> static_expr OR static_expr .)
    AND             shift and go to state 399
    XOR             shift and go to state 401
    CONCAT          shift and go to state 402
    PLUS            shift and go to state 403
    MINUS           shift and go to state 404
    MUL             shift and go to state 405
    DIV             shift and go to state 406
    SL              shift and go to state 407
    SR              shift and go to state 408
    MOD             shift and go to state 409
    IS_IDENTICAL    shift and go to state 410
    IS_NOT_IDENTICAL shift and go to state 411
    IS_EQUAL_TO     shift and go to state 412
    IS_NOT_EQUAL    shift and go to state 413
    LESS_THAN       shift and go to state 414
    LESS_THAN_OR_EQUAL shift and go to state 415
    GREATER_THAN    shift and go to state 416
    GRATER_THAN_OR_EQUAL shift and go to state 417

  ! AND             [ reduce using rule 260 (static_expr -> static_expr OR static_expr .) ]
  ! XOR             [ reduce using rule 260 (static_expr -> static_expr OR static_expr .) ]
  ! CONCAT          [ reduce using rule 260 (static_expr -> static_expr OR static_expr .) ]
  ! PLUS            [ reduce using rule 260 (static_expr -> static_expr OR static_expr .) ]
  ! MINUS           [ reduce using rule 260 (static_expr -> static_expr OR static_expr .) ]
  ! MUL             [ reduce using rule 260 (static_expr -> static_expr OR static_expr .) ]
  ! DIV             [ reduce using rule 260 (static_expr -> static_expr OR static_expr .) ]
  ! SL              [ reduce using rule 260 (static_expr -> static_expr OR static_expr .) ]
  ! SR              [ reduce using rule 260 (static_expr -> static_expr OR static_expr .) ]
  ! MOD             [ reduce using rule 260 (static_expr -> static_expr OR static_expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 260 (static_expr -> static_expr OR static_expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 260 (static_expr -> static_expr OR static_expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 260 (static_expr -> static_expr OR static_expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 260 (static_expr -> static_expr OR static_expr .) ]
  ! LESS_THAN       [ reduce using rule 260 (static_expr -> static_expr OR static_expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 260 (static_expr -> static_expr OR static_expr .) ]
  ! GREATER_THAN    [ reduce using rule 260 (static_expr -> static_expr OR static_expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 260 (static_expr -> static_expr OR static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 394 ]
  ! BOOLEAN_OR      [ shift and go to state 395 ]
  ! LOGICAL_AND     [ shift and go to state 396 ]
  ! LOGICAL_OR      [ shift and go to state 397 ]
  ! LOGICAL_XOR     [ shift and go to state 398 ]
  ! OR              [ shift and go to state 400 ]


state 472

    (261) static_expr -> static_expr XOR static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 261 (static_expr -> static_expr XOR static_expr .)
    BOOLEAN_OR      reduce using rule 261 (static_expr -> static_expr XOR static_expr .)
    LOGICAL_AND     reduce using rule 261 (static_expr -> static_expr XOR static_expr .)
    LOGICAL_OR      reduce using rule 261 (static_expr -> static_expr XOR static_expr .)
    LOGICAL_XOR     reduce using rule 261 (static_expr -> static_expr XOR static_expr .)
    OR              reduce using rule 261 (static_expr -> static_expr XOR static_expr .)
    XOR             reduce using rule 261 (static_expr -> static_expr XOR static_expr .)
    SEMI_COLON      reduce using rule 261 (static_expr -> static_expr XOR static_expr .)
    COMMA           reduce using rule 261 (static_expr -> static_expr XOR static_expr .)
    RPAREN          reduce using rule 261 (static_expr -> static_expr XOR static_expr .)
    RBRACKET        reduce using rule 261 (static_expr -> static_expr XOR static_expr .)
    AND             shift and go to state 399
    CONCAT          shift and go to state 402
    PLUS            shift and go to state 403
    MINUS           shift and go to state 404
    MUL             shift and go to state 405
    DIV             shift and go to state 406
    SL              shift and go to state 407
    SR              shift and go to state 408
    MOD             shift and go to state 409
    IS_IDENTICAL    shift and go to state 410
    IS_NOT_IDENTICAL shift and go to state 411
    IS_EQUAL_TO     shift and go to state 412
    IS_NOT_EQUAL    shift and go to state 413
    LESS_THAN       shift and go to state 414
    LESS_THAN_OR_EQUAL shift and go to state 415
    GREATER_THAN    shift and go to state 416
    GRATER_THAN_OR_EQUAL shift and go to state 417

  ! AND             [ reduce using rule 261 (static_expr -> static_expr XOR static_expr .) ]
  ! CONCAT          [ reduce using rule 261 (static_expr -> static_expr XOR static_expr .) ]
  ! PLUS            [ reduce using rule 261 (static_expr -> static_expr XOR static_expr .) ]
  ! MINUS           [ reduce using rule 261 (static_expr -> static_expr XOR static_expr .) ]
  ! MUL             [ reduce using rule 261 (static_expr -> static_expr XOR static_expr .) ]
  ! DIV             [ reduce using rule 261 (static_expr -> static_expr XOR static_expr .) ]
  ! SL              [ reduce using rule 261 (static_expr -> static_expr XOR static_expr .) ]
  ! SR              [ reduce using rule 261 (static_expr -> static_expr XOR static_expr .) ]
  ! MOD             [ reduce using rule 261 (static_expr -> static_expr XOR static_expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 261 (static_expr -> static_expr XOR static_expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 261 (static_expr -> static_expr XOR static_expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 261 (static_expr -> static_expr XOR static_expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 261 (static_expr -> static_expr XOR static_expr .) ]
  ! LESS_THAN       [ reduce using rule 261 (static_expr -> static_expr XOR static_expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 261 (static_expr -> static_expr XOR static_expr .) ]
  ! GREATER_THAN    [ reduce using rule 261 (static_expr -> static_expr XOR static_expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 261 (static_expr -> static_expr XOR static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 394 ]
  ! BOOLEAN_OR      [ shift and go to state 395 ]
  ! LOGICAL_AND     [ shift and go to state 396 ]
  ! LOGICAL_OR      [ shift and go to state 397 ]
  ! LOGICAL_XOR     [ shift and go to state 398 ]
  ! OR              [ shift and go to state 400 ]
  ! XOR             [ shift and go to state 401 ]


state 473

    (262) static_expr -> static_expr CONCAT static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 262 (static_expr -> static_expr CONCAT static_expr .)
    BOOLEAN_OR      reduce using rule 262 (static_expr -> static_expr CONCAT static_expr .)
    LOGICAL_AND     reduce using rule 262 (static_expr -> static_expr CONCAT static_expr .)
    LOGICAL_OR      reduce using rule 262 (static_expr -> static_expr CONCAT static_expr .)
    LOGICAL_XOR     reduce using rule 262 (static_expr -> static_expr CONCAT static_expr .)
    AND             reduce using rule 262 (static_expr -> static_expr CONCAT static_expr .)
    OR              reduce using rule 262 (static_expr -> static_expr CONCAT static_expr .)
    XOR             reduce using rule 262 (static_expr -> static_expr CONCAT static_expr .)
    CONCAT          reduce using rule 262 (static_expr -> static_expr CONCAT static_expr .)
    PLUS            reduce using rule 262 (static_expr -> static_expr CONCAT static_expr .)
    MINUS           reduce using rule 262 (static_expr -> static_expr CONCAT static_expr .)
    SL              reduce using rule 262 (static_expr -> static_expr CONCAT static_expr .)
    SR              reduce using rule 262 (static_expr -> static_expr CONCAT static_expr .)
    IS_IDENTICAL    reduce using rule 262 (static_expr -> static_expr CONCAT static_expr .)
    IS_NOT_IDENTICAL reduce using rule 262 (static_expr -> static_expr CONCAT static_expr .)
    IS_EQUAL_TO     reduce using rule 262 (static_expr -> static_expr CONCAT static_expr .)
    IS_NOT_EQUAL    reduce using rule 262 (static_expr -> static_expr CONCAT static_expr .)
    LESS_THAN       reduce using rule 262 (static_expr -> static_expr CONCAT static_expr .)
    LESS_THAN_OR_EQUAL reduce using rule 262 (static_expr -> static_expr CONCAT static_expr .)
    GREATER_THAN    reduce using rule 262 (static_expr -> static_expr CONCAT static_expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 262 (static_expr -> static_expr CONCAT static_expr .)
    SEMI_COLON      reduce using rule 262 (static_expr -> static_expr CONCAT static_expr .)
    COMMA           reduce using rule 262 (static_expr -> static_expr CONCAT static_expr .)
    RPAREN          reduce using rule 262 (static_expr -> static_expr CONCAT static_expr .)
    RBRACKET        reduce using rule 262 (static_expr -> static_expr CONCAT static_expr .)
    MUL             shift and go to state 405
    DIV             shift and go to state 406
    MOD             shift and go to state 409

  ! MUL             [ reduce using rule 262 (static_expr -> static_expr CONCAT static_expr .) ]
  ! DIV             [ reduce using rule 262 (static_expr -> static_expr CONCAT static_expr .) ]
  ! MOD             [ reduce using rule 262 (static_expr -> static_expr CONCAT static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 394 ]
  ! BOOLEAN_OR      [ shift and go to state 395 ]
  ! LOGICAL_AND     [ shift and go to state 396 ]
  ! LOGICAL_OR      [ shift and go to state 397 ]
  ! LOGICAL_XOR     [ shift and go to state 398 ]
  ! AND             [ shift and go to state 399 ]
  ! OR              [ shift and go to state 400 ]
  ! XOR             [ shift and go to state 401 ]
  ! CONCAT          [ shift and go to state 402 ]
  ! PLUS            [ shift and go to state 403 ]
  ! MINUS           [ shift and go to state 404 ]
  ! SL              [ shift and go to state 407 ]
  ! SR              [ shift and go to state 408 ]
  ! IS_IDENTICAL    [ shift and go to state 410 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 411 ]
  ! IS_EQUAL_TO     [ shift and go to state 412 ]
  ! IS_NOT_EQUAL    [ shift and go to state 413 ]
  ! LESS_THAN       [ shift and go to state 414 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 415 ]
  ! GREATER_THAN    [ shift and go to state 416 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 417 ]


state 474

    (263) static_expr -> static_expr PLUS static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 263 (static_expr -> static_expr PLUS static_expr .)
    BOOLEAN_OR      reduce using rule 263 (static_expr -> static_expr PLUS static_expr .)
    LOGICAL_AND     reduce using rule 263 (static_expr -> static_expr PLUS static_expr .)
    LOGICAL_OR      reduce using rule 263 (static_expr -> static_expr PLUS static_expr .)
    LOGICAL_XOR     reduce using rule 263 (static_expr -> static_expr PLUS static_expr .)
    AND             reduce using rule 263 (static_expr -> static_expr PLUS static_expr .)
    OR              reduce using rule 263 (static_expr -> static_expr PLUS static_expr .)
    XOR             reduce using rule 263 (static_expr -> static_expr PLUS static_expr .)
    CONCAT          reduce using rule 263 (static_expr -> static_expr PLUS static_expr .)
    PLUS            reduce using rule 263 (static_expr -> static_expr PLUS static_expr .)
    MINUS           reduce using rule 263 (static_expr -> static_expr PLUS static_expr .)
    SL              reduce using rule 263 (static_expr -> static_expr PLUS static_expr .)
    SR              reduce using rule 263 (static_expr -> static_expr PLUS static_expr .)
    IS_IDENTICAL    reduce using rule 263 (static_expr -> static_expr PLUS static_expr .)
    IS_NOT_IDENTICAL reduce using rule 263 (static_expr -> static_expr PLUS static_expr .)
    IS_EQUAL_TO     reduce using rule 263 (static_expr -> static_expr PLUS static_expr .)
    IS_NOT_EQUAL    reduce using rule 263 (static_expr -> static_expr PLUS static_expr .)
    LESS_THAN       reduce using rule 263 (static_expr -> static_expr PLUS static_expr .)
    LESS_THAN_OR_EQUAL reduce using rule 263 (static_expr -> static_expr PLUS static_expr .)
    GREATER_THAN    reduce using rule 263 (static_expr -> static_expr PLUS static_expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 263 (static_expr -> static_expr PLUS static_expr .)
    SEMI_COLON      reduce using rule 263 (static_expr -> static_expr PLUS static_expr .)
    COMMA           reduce using rule 263 (static_expr -> static_expr PLUS static_expr .)
    RPAREN          reduce using rule 263 (static_expr -> static_expr PLUS static_expr .)
    RBRACKET        reduce using rule 263 (static_expr -> static_expr PLUS static_expr .)
    MUL             shift and go to state 405
    DIV             shift and go to state 406
    MOD             shift and go to state 409

  ! MUL             [ reduce using rule 263 (static_expr -> static_expr PLUS static_expr .) ]
  ! DIV             [ reduce using rule 263 (static_expr -> static_expr PLUS static_expr .) ]
  ! MOD             [ reduce using rule 263 (static_expr -> static_expr PLUS static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 394 ]
  ! BOOLEAN_OR      [ shift and go to state 395 ]
  ! LOGICAL_AND     [ shift and go to state 396 ]
  ! LOGICAL_OR      [ shift and go to state 397 ]
  ! LOGICAL_XOR     [ shift and go to state 398 ]
  ! AND             [ shift and go to state 399 ]
  ! OR              [ shift and go to state 400 ]
  ! XOR             [ shift and go to state 401 ]
  ! CONCAT          [ shift and go to state 402 ]
  ! PLUS            [ shift and go to state 403 ]
  ! MINUS           [ shift and go to state 404 ]
  ! SL              [ shift and go to state 407 ]
  ! SR              [ shift and go to state 408 ]
  ! IS_IDENTICAL    [ shift and go to state 410 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 411 ]
  ! IS_EQUAL_TO     [ shift and go to state 412 ]
  ! IS_NOT_EQUAL    [ shift and go to state 413 ]
  ! LESS_THAN       [ shift and go to state 414 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 415 ]
  ! GREATER_THAN    [ shift and go to state 416 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 417 ]


state 475

    (264) static_expr -> static_expr MINUS static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 264 (static_expr -> static_expr MINUS static_expr .)
    BOOLEAN_OR      reduce using rule 264 (static_expr -> static_expr MINUS static_expr .)
    LOGICAL_AND     reduce using rule 264 (static_expr -> static_expr MINUS static_expr .)
    LOGICAL_OR      reduce using rule 264 (static_expr -> static_expr MINUS static_expr .)
    LOGICAL_XOR     reduce using rule 264 (static_expr -> static_expr MINUS static_expr .)
    AND             reduce using rule 264 (static_expr -> static_expr MINUS static_expr .)
    OR              reduce using rule 264 (static_expr -> static_expr MINUS static_expr .)
    XOR             reduce using rule 264 (static_expr -> static_expr MINUS static_expr .)
    CONCAT          reduce using rule 264 (static_expr -> static_expr MINUS static_expr .)
    PLUS            reduce using rule 264 (static_expr -> static_expr MINUS static_expr .)
    MINUS           reduce using rule 264 (static_expr -> static_expr MINUS static_expr .)
    SL              reduce using rule 264 (static_expr -> static_expr MINUS static_expr .)
    SR              reduce using rule 264 (static_expr -> static_expr MINUS static_expr .)
    IS_IDENTICAL    reduce using rule 264 (static_expr -> static_expr MINUS static_expr .)
    IS_NOT_IDENTICAL reduce using rule 264 (static_expr -> static_expr MINUS static_expr .)
    IS_EQUAL_TO     reduce using rule 264 (static_expr -> static_expr MINUS static_expr .)
    IS_NOT_EQUAL    reduce using rule 264 (static_expr -> static_expr MINUS static_expr .)
    LESS_THAN       reduce using rule 264 (static_expr -> static_expr MINUS static_expr .)
    LESS_THAN_OR_EQUAL reduce using rule 264 (static_expr -> static_expr MINUS static_expr .)
    GREATER_THAN    reduce using rule 264 (static_expr -> static_expr MINUS static_expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 264 (static_expr -> static_expr MINUS static_expr .)
    SEMI_COLON      reduce using rule 264 (static_expr -> static_expr MINUS static_expr .)
    COMMA           reduce using rule 264 (static_expr -> static_expr MINUS static_expr .)
    RPAREN          reduce using rule 264 (static_expr -> static_expr MINUS static_expr .)
    RBRACKET        reduce using rule 264 (static_expr -> static_expr MINUS static_expr .)
    MUL             shift and go to state 405
    DIV             shift and go to state 406
    MOD             shift and go to state 409

  ! MUL             [ reduce using rule 264 (static_expr -> static_expr MINUS static_expr .) ]
  ! DIV             [ reduce using rule 264 (static_expr -> static_expr MINUS static_expr .) ]
  ! MOD             [ reduce using rule 264 (static_expr -> static_expr MINUS static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 394 ]
  ! BOOLEAN_OR      [ shift and go to state 395 ]
  ! LOGICAL_AND     [ shift and go to state 396 ]
  ! LOGICAL_OR      [ shift and go to state 397 ]
  ! LOGICAL_XOR     [ shift and go to state 398 ]
  ! AND             [ shift and go to state 399 ]
  ! OR              [ shift and go to state 400 ]
  ! XOR             [ shift and go to state 401 ]
  ! CONCAT          [ shift and go to state 402 ]
  ! PLUS            [ shift and go to state 403 ]
  ! MINUS           [ shift and go to state 404 ]
  ! SL              [ shift and go to state 407 ]
  ! SR              [ shift and go to state 408 ]
  ! IS_IDENTICAL    [ shift and go to state 410 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 411 ]
  ! IS_EQUAL_TO     [ shift and go to state 412 ]
  ! IS_NOT_EQUAL    [ shift and go to state 413 ]
  ! LESS_THAN       [ shift and go to state 414 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 415 ]
  ! GREATER_THAN    [ shift and go to state 416 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 417 ]


state 476

    (265) static_expr -> static_expr MUL static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 265 (static_expr -> static_expr MUL static_expr .)
    BOOLEAN_OR      reduce using rule 265 (static_expr -> static_expr MUL static_expr .)
    LOGICAL_AND     reduce using rule 265 (static_expr -> static_expr MUL static_expr .)
    LOGICAL_OR      reduce using rule 265 (static_expr -> static_expr MUL static_expr .)
    LOGICAL_XOR     reduce using rule 265 (static_expr -> static_expr MUL static_expr .)
    AND             reduce using rule 265 (static_expr -> static_expr MUL static_expr .)
    OR              reduce using rule 265 (static_expr -> static_expr MUL static_expr .)
    XOR             reduce using rule 265 (static_expr -> static_expr MUL static_expr .)
    CONCAT          reduce using rule 265 (static_expr -> static_expr MUL static_expr .)
    PLUS            reduce using rule 265 (static_expr -> static_expr MUL static_expr .)
    MINUS           reduce using rule 265 (static_expr -> static_expr MUL static_expr .)
    MUL             reduce using rule 265 (static_expr -> static_expr MUL static_expr .)
    DIV             reduce using rule 265 (static_expr -> static_expr MUL static_expr .)
    SL              reduce using rule 265 (static_expr -> static_expr MUL static_expr .)
    SR              reduce using rule 265 (static_expr -> static_expr MUL static_expr .)
    MOD             reduce using rule 265 (static_expr -> static_expr MUL static_expr .)
    IS_IDENTICAL    reduce using rule 265 (static_expr -> static_expr MUL static_expr .)
    IS_NOT_IDENTICAL reduce using rule 265 (static_expr -> static_expr MUL static_expr .)
    IS_EQUAL_TO     reduce using rule 265 (static_expr -> static_expr MUL static_expr .)
    IS_NOT_EQUAL    reduce using rule 265 (static_expr -> static_expr MUL static_expr .)
    LESS_THAN       reduce using rule 265 (static_expr -> static_expr MUL static_expr .)
    LESS_THAN_OR_EQUAL reduce using rule 265 (static_expr -> static_expr MUL static_expr .)
    GREATER_THAN    reduce using rule 265 (static_expr -> static_expr MUL static_expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 265 (static_expr -> static_expr MUL static_expr .)
    SEMI_COLON      reduce using rule 265 (static_expr -> static_expr MUL static_expr .)
    COMMA           reduce using rule 265 (static_expr -> static_expr MUL static_expr .)
    RPAREN          reduce using rule 265 (static_expr -> static_expr MUL static_expr .)
    RBRACKET        reduce using rule 265 (static_expr -> static_expr MUL static_expr .)

  ! BOOLEAN_AND     [ shift and go to state 394 ]
  ! BOOLEAN_OR      [ shift and go to state 395 ]
  ! LOGICAL_AND     [ shift and go to state 396 ]
  ! LOGICAL_OR      [ shift and go to state 397 ]
  ! LOGICAL_XOR     [ shift and go to state 398 ]
  ! AND             [ shift and go to state 399 ]
  ! OR              [ shift and go to state 400 ]
  ! XOR             [ shift and go to state 401 ]
  ! CONCAT          [ shift and go to state 402 ]
  ! PLUS            [ shift and go to state 403 ]
  ! MINUS           [ shift and go to state 404 ]
  ! MUL             [ shift and go to state 405 ]
  ! DIV             [ shift and go to state 406 ]
  ! SL              [ shift and go to state 407 ]
  ! SR              [ shift and go to state 408 ]
  ! MOD             [ shift and go to state 409 ]
  ! IS_IDENTICAL    [ shift and go to state 410 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 411 ]
  ! IS_EQUAL_TO     [ shift and go to state 412 ]
  ! IS_NOT_EQUAL    [ shift and go to state 413 ]
  ! LESS_THAN       [ shift and go to state 414 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 415 ]
  ! GREATER_THAN    [ shift and go to state 416 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 417 ]


state 477

    (266) static_expr -> static_expr DIV static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 266 (static_expr -> static_expr DIV static_expr .)
    BOOLEAN_OR      reduce using rule 266 (static_expr -> static_expr DIV static_expr .)
    LOGICAL_AND     reduce using rule 266 (static_expr -> static_expr DIV static_expr .)
    LOGICAL_OR      reduce using rule 266 (static_expr -> static_expr DIV static_expr .)
    LOGICAL_XOR     reduce using rule 266 (static_expr -> static_expr DIV static_expr .)
    AND             reduce using rule 266 (static_expr -> static_expr DIV static_expr .)
    OR              reduce using rule 266 (static_expr -> static_expr DIV static_expr .)
    XOR             reduce using rule 266 (static_expr -> static_expr DIV static_expr .)
    CONCAT          reduce using rule 266 (static_expr -> static_expr DIV static_expr .)
    PLUS            reduce using rule 266 (static_expr -> static_expr DIV static_expr .)
    MINUS           reduce using rule 266 (static_expr -> static_expr DIV static_expr .)
    MUL             reduce using rule 266 (static_expr -> static_expr DIV static_expr .)
    DIV             reduce using rule 266 (static_expr -> static_expr DIV static_expr .)
    SL              reduce using rule 266 (static_expr -> static_expr DIV static_expr .)
    SR              reduce using rule 266 (static_expr -> static_expr DIV static_expr .)
    MOD             reduce using rule 266 (static_expr -> static_expr DIV static_expr .)
    IS_IDENTICAL    reduce using rule 266 (static_expr -> static_expr DIV static_expr .)
    IS_NOT_IDENTICAL reduce using rule 266 (static_expr -> static_expr DIV static_expr .)
    IS_EQUAL_TO     reduce using rule 266 (static_expr -> static_expr DIV static_expr .)
    IS_NOT_EQUAL    reduce using rule 266 (static_expr -> static_expr DIV static_expr .)
    LESS_THAN       reduce using rule 266 (static_expr -> static_expr DIV static_expr .)
    LESS_THAN_OR_EQUAL reduce using rule 266 (static_expr -> static_expr DIV static_expr .)
    GREATER_THAN    reduce using rule 266 (static_expr -> static_expr DIV static_expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 266 (static_expr -> static_expr DIV static_expr .)
    SEMI_COLON      reduce using rule 266 (static_expr -> static_expr DIV static_expr .)
    COMMA           reduce using rule 266 (static_expr -> static_expr DIV static_expr .)
    RPAREN          reduce using rule 266 (static_expr -> static_expr DIV static_expr .)
    RBRACKET        reduce using rule 266 (static_expr -> static_expr DIV static_expr .)

  ! BOOLEAN_AND     [ shift and go to state 394 ]
  ! BOOLEAN_OR      [ shift and go to state 395 ]
  ! LOGICAL_AND     [ shift and go to state 396 ]
  ! LOGICAL_OR      [ shift and go to state 397 ]
  ! LOGICAL_XOR     [ shift and go to state 398 ]
  ! AND             [ shift and go to state 399 ]
  ! OR              [ shift and go to state 400 ]
  ! XOR             [ shift and go to state 401 ]
  ! CONCAT          [ shift and go to state 402 ]
  ! PLUS            [ shift and go to state 403 ]
  ! MINUS           [ shift and go to state 404 ]
  ! MUL             [ shift and go to state 405 ]
  ! DIV             [ shift and go to state 406 ]
  ! SL              [ shift and go to state 407 ]
  ! SR              [ shift and go to state 408 ]
  ! MOD             [ shift and go to state 409 ]
  ! IS_IDENTICAL    [ shift and go to state 410 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 411 ]
  ! IS_EQUAL_TO     [ shift and go to state 412 ]
  ! IS_NOT_EQUAL    [ shift and go to state 413 ]
  ! LESS_THAN       [ shift and go to state 414 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 415 ]
  ! GREATER_THAN    [ shift and go to state 416 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 417 ]


state 478

    (267) static_expr -> static_expr SL static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 267 (static_expr -> static_expr SL static_expr .)
    BOOLEAN_OR      reduce using rule 267 (static_expr -> static_expr SL static_expr .)
    LOGICAL_AND     reduce using rule 267 (static_expr -> static_expr SL static_expr .)
    LOGICAL_OR      reduce using rule 267 (static_expr -> static_expr SL static_expr .)
    LOGICAL_XOR     reduce using rule 267 (static_expr -> static_expr SL static_expr .)
    AND             reduce using rule 267 (static_expr -> static_expr SL static_expr .)
    OR              reduce using rule 267 (static_expr -> static_expr SL static_expr .)
    XOR             reduce using rule 267 (static_expr -> static_expr SL static_expr .)
    SL              reduce using rule 267 (static_expr -> static_expr SL static_expr .)
    SR              reduce using rule 267 (static_expr -> static_expr SL static_expr .)
    IS_IDENTICAL    reduce using rule 267 (static_expr -> static_expr SL static_expr .)
    IS_NOT_IDENTICAL reduce using rule 267 (static_expr -> static_expr SL static_expr .)
    IS_EQUAL_TO     reduce using rule 267 (static_expr -> static_expr SL static_expr .)
    IS_NOT_EQUAL    reduce using rule 267 (static_expr -> static_expr SL static_expr .)
    LESS_THAN       reduce using rule 267 (static_expr -> static_expr SL static_expr .)
    LESS_THAN_OR_EQUAL reduce using rule 267 (static_expr -> static_expr SL static_expr .)
    GREATER_THAN    reduce using rule 267 (static_expr -> static_expr SL static_expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 267 (static_expr -> static_expr SL static_expr .)
    SEMI_COLON      reduce using rule 267 (static_expr -> static_expr SL static_expr .)
    COMMA           reduce using rule 267 (static_expr -> static_expr SL static_expr .)
    RPAREN          reduce using rule 267 (static_expr -> static_expr SL static_expr .)
    RBRACKET        reduce using rule 267 (static_expr -> static_expr SL static_expr .)
    CONCAT          shift and go to state 402
    PLUS            shift and go to state 403
    MINUS           shift and go to state 404
    MUL             shift and go to state 405
    DIV             shift and go to state 406
    MOD             shift and go to state 409

  ! CONCAT          [ reduce using rule 267 (static_expr -> static_expr SL static_expr .) ]
  ! PLUS            [ reduce using rule 267 (static_expr -> static_expr SL static_expr .) ]
  ! MINUS           [ reduce using rule 267 (static_expr -> static_expr SL static_expr .) ]
  ! MUL             [ reduce using rule 267 (static_expr -> static_expr SL static_expr .) ]
  ! DIV             [ reduce using rule 267 (static_expr -> static_expr SL static_expr .) ]
  ! MOD             [ reduce using rule 267 (static_expr -> static_expr SL static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 394 ]
  ! BOOLEAN_OR      [ shift and go to state 395 ]
  ! LOGICAL_AND     [ shift and go to state 396 ]
  ! LOGICAL_OR      [ shift and go to state 397 ]
  ! LOGICAL_XOR     [ shift and go to state 398 ]
  ! AND             [ shift and go to state 399 ]
  ! OR              [ shift and go to state 400 ]
  ! XOR             [ shift and go to state 401 ]
  ! SL              [ shift and go to state 407 ]
  ! SR              [ shift and go to state 408 ]
  ! IS_IDENTICAL    [ shift and go to state 410 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 411 ]
  ! IS_EQUAL_TO     [ shift and go to state 412 ]
  ! IS_NOT_EQUAL    [ shift and go to state 413 ]
  ! LESS_THAN       [ shift and go to state 414 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 415 ]
  ! GREATER_THAN    [ shift and go to state 416 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 417 ]


state 479

    (268) static_expr -> static_expr SR static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 268 (static_expr -> static_expr SR static_expr .)
    BOOLEAN_OR      reduce using rule 268 (static_expr -> static_expr SR static_expr .)
    LOGICAL_AND     reduce using rule 268 (static_expr -> static_expr SR static_expr .)
    LOGICAL_OR      reduce using rule 268 (static_expr -> static_expr SR static_expr .)
    LOGICAL_XOR     reduce using rule 268 (static_expr -> static_expr SR static_expr .)
    AND             reduce using rule 268 (static_expr -> static_expr SR static_expr .)
    OR              reduce using rule 268 (static_expr -> static_expr SR static_expr .)
    XOR             reduce using rule 268 (static_expr -> static_expr SR static_expr .)
    SL              reduce using rule 268 (static_expr -> static_expr SR static_expr .)
    SR              reduce using rule 268 (static_expr -> static_expr SR static_expr .)
    IS_IDENTICAL    reduce using rule 268 (static_expr -> static_expr SR static_expr .)
    IS_NOT_IDENTICAL reduce using rule 268 (static_expr -> static_expr SR static_expr .)
    IS_EQUAL_TO     reduce using rule 268 (static_expr -> static_expr SR static_expr .)
    IS_NOT_EQUAL    reduce using rule 268 (static_expr -> static_expr SR static_expr .)
    LESS_THAN       reduce using rule 268 (static_expr -> static_expr SR static_expr .)
    LESS_THAN_OR_EQUAL reduce using rule 268 (static_expr -> static_expr SR static_expr .)
    GREATER_THAN    reduce using rule 268 (static_expr -> static_expr SR static_expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 268 (static_expr -> static_expr SR static_expr .)
    SEMI_COLON      reduce using rule 268 (static_expr -> static_expr SR static_expr .)
    COMMA           reduce using rule 268 (static_expr -> static_expr SR static_expr .)
    RPAREN          reduce using rule 268 (static_expr -> static_expr SR static_expr .)
    RBRACKET        reduce using rule 268 (static_expr -> static_expr SR static_expr .)
    CONCAT          shift and go to state 402
    PLUS            shift and go to state 403
    MINUS           shift and go to state 404
    MUL             shift and go to state 405
    DIV             shift and go to state 406
    MOD             shift and go to state 409

  ! CONCAT          [ reduce using rule 268 (static_expr -> static_expr SR static_expr .) ]
  ! PLUS            [ reduce using rule 268 (static_expr -> static_expr SR static_expr .) ]
  ! MINUS           [ reduce using rule 268 (static_expr -> static_expr SR static_expr .) ]
  ! MUL             [ reduce using rule 268 (static_expr -> static_expr SR static_expr .) ]
  ! DIV             [ reduce using rule 268 (static_expr -> static_expr SR static_expr .) ]
  ! MOD             [ reduce using rule 268 (static_expr -> static_expr SR static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 394 ]
  ! BOOLEAN_OR      [ shift and go to state 395 ]
  ! LOGICAL_AND     [ shift and go to state 396 ]
  ! LOGICAL_OR      [ shift and go to state 397 ]
  ! LOGICAL_XOR     [ shift and go to state 398 ]
  ! AND             [ shift and go to state 399 ]
  ! OR              [ shift and go to state 400 ]
  ! XOR             [ shift and go to state 401 ]
  ! SL              [ shift and go to state 407 ]
  ! SR              [ shift and go to state 408 ]
  ! IS_IDENTICAL    [ shift and go to state 410 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 411 ]
  ! IS_EQUAL_TO     [ shift and go to state 412 ]
  ! IS_NOT_EQUAL    [ shift and go to state 413 ]
  ! LESS_THAN       [ shift and go to state 414 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 415 ]
  ! GREATER_THAN    [ shift and go to state 416 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 417 ]


state 480

    (269) static_expr -> static_expr MOD static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 269 (static_expr -> static_expr MOD static_expr .)
    BOOLEAN_OR      reduce using rule 269 (static_expr -> static_expr MOD static_expr .)
    LOGICAL_AND     reduce using rule 269 (static_expr -> static_expr MOD static_expr .)
    LOGICAL_OR      reduce using rule 269 (static_expr -> static_expr MOD static_expr .)
    LOGICAL_XOR     reduce using rule 269 (static_expr -> static_expr MOD static_expr .)
    AND             reduce using rule 269 (static_expr -> static_expr MOD static_expr .)
    OR              reduce using rule 269 (static_expr -> static_expr MOD static_expr .)
    XOR             reduce using rule 269 (static_expr -> static_expr MOD static_expr .)
    CONCAT          reduce using rule 269 (static_expr -> static_expr MOD static_expr .)
    PLUS            reduce using rule 269 (static_expr -> static_expr MOD static_expr .)
    MINUS           reduce using rule 269 (static_expr -> static_expr MOD static_expr .)
    MUL             reduce using rule 269 (static_expr -> static_expr MOD static_expr .)
    DIV             reduce using rule 269 (static_expr -> static_expr MOD static_expr .)
    SL              reduce using rule 269 (static_expr -> static_expr MOD static_expr .)
    SR              reduce using rule 269 (static_expr -> static_expr MOD static_expr .)
    MOD             reduce using rule 269 (static_expr -> static_expr MOD static_expr .)
    IS_IDENTICAL    reduce using rule 269 (static_expr -> static_expr MOD static_expr .)
    IS_NOT_IDENTICAL reduce using rule 269 (static_expr -> static_expr MOD static_expr .)
    IS_EQUAL_TO     reduce using rule 269 (static_expr -> static_expr MOD static_expr .)
    IS_NOT_EQUAL    reduce using rule 269 (static_expr -> static_expr MOD static_expr .)
    LESS_THAN       reduce using rule 269 (static_expr -> static_expr MOD static_expr .)
    LESS_THAN_OR_EQUAL reduce using rule 269 (static_expr -> static_expr MOD static_expr .)
    GREATER_THAN    reduce using rule 269 (static_expr -> static_expr MOD static_expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 269 (static_expr -> static_expr MOD static_expr .)
    SEMI_COLON      reduce using rule 269 (static_expr -> static_expr MOD static_expr .)
    COMMA           reduce using rule 269 (static_expr -> static_expr MOD static_expr .)
    RPAREN          reduce using rule 269 (static_expr -> static_expr MOD static_expr .)
    RBRACKET        reduce using rule 269 (static_expr -> static_expr MOD static_expr .)

  ! BOOLEAN_AND     [ shift and go to state 394 ]
  ! BOOLEAN_OR      [ shift and go to state 395 ]
  ! LOGICAL_AND     [ shift and go to state 396 ]
  ! LOGICAL_OR      [ shift and go to state 397 ]
  ! LOGICAL_XOR     [ shift and go to state 398 ]
  ! AND             [ shift and go to state 399 ]
  ! OR              [ shift and go to state 400 ]
  ! XOR             [ shift and go to state 401 ]
  ! CONCAT          [ shift and go to state 402 ]
  ! PLUS            [ shift and go to state 403 ]
  ! MINUS           [ shift and go to state 404 ]
  ! MUL             [ shift and go to state 405 ]
  ! DIV             [ shift and go to state 406 ]
  ! SL              [ shift and go to state 407 ]
  ! SR              [ shift and go to state 408 ]
  ! MOD             [ shift and go to state 409 ]
  ! IS_IDENTICAL    [ shift and go to state 410 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 411 ]
  ! IS_EQUAL_TO     [ shift and go to state 412 ]
  ! IS_NOT_EQUAL    [ shift and go to state 413 ]
  ! LESS_THAN       [ shift and go to state 414 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 415 ]
  ! GREATER_THAN    [ shift and go to state 416 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 417 ]


state 481

    (270) static_expr -> static_expr IS_IDENTICAL static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 270 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    BOOLEAN_OR      reduce using rule 270 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    LOGICAL_AND     reduce using rule 270 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    LOGICAL_OR      reduce using rule 270 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    LOGICAL_XOR     reduce using rule 270 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    AND             reduce using rule 270 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    OR              reduce using rule 270 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    XOR             reduce using rule 270 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    IS_IDENTICAL    reduce using rule 270 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    IS_NOT_IDENTICAL reduce using rule 270 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    IS_EQUAL_TO     reduce using rule 270 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    IS_NOT_EQUAL    reduce using rule 270 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    SEMI_COLON      reduce using rule 270 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    COMMA           reduce using rule 270 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    RPAREN          reduce using rule 270 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    RBRACKET        reduce using rule 270 (static_expr -> static_expr IS_IDENTICAL static_expr .)
    CONCAT          shift and go to state 402
    PLUS            shift and go to state 403
    MINUS           shift and go to state 404
    MUL             shift and go to state 405
    DIV             shift and go to state 406
    SL              shift and go to state 407
    SR              shift and go to state 408
    MOD             shift and go to state 409
    LESS_THAN       shift and go to state 414
    LESS_THAN_OR_EQUAL shift and go to state 415
    GREATER_THAN    shift and go to state 416
    GRATER_THAN_OR_EQUAL shift and go to state 417

  ! CONCAT          [ reduce using rule 270 (static_expr -> static_expr IS_IDENTICAL static_expr .) ]
  ! PLUS            [ reduce using rule 270 (static_expr -> static_expr IS_IDENTICAL static_expr .) ]
  ! MINUS           [ reduce using rule 270 (static_expr -> static_expr IS_IDENTICAL static_expr .) ]
  ! MUL             [ reduce using rule 270 (static_expr -> static_expr IS_IDENTICAL static_expr .) ]
  ! DIV             [ reduce using rule 270 (static_expr -> static_expr IS_IDENTICAL static_expr .) ]
  ! SL              [ reduce using rule 270 (static_expr -> static_expr IS_IDENTICAL static_expr .) ]
  ! SR              [ reduce using rule 270 (static_expr -> static_expr IS_IDENTICAL static_expr .) ]
  ! MOD             [ reduce using rule 270 (static_expr -> static_expr IS_IDENTICAL static_expr .) ]
  ! LESS_THAN       [ reduce using rule 270 (static_expr -> static_expr IS_IDENTICAL static_expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 270 (static_expr -> static_expr IS_IDENTICAL static_expr .) ]
  ! GREATER_THAN    [ reduce using rule 270 (static_expr -> static_expr IS_IDENTICAL static_expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 270 (static_expr -> static_expr IS_IDENTICAL static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 394 ]
  ! BOOLEAN_OR      [ shift and go to state 395 ]
  ! LOGICAL_AND     [ shift and go to state 396 ]
  ! LOGICAL_OR      [ shift and go to state 397 ]
  ! LOGICAL_XOR     [ shift and go to state 398 ]
  ! AND             [ shift and go to state 399 ]
  ! OR              [ shift and go to state 400 ]
  ! XOR             [ shift and go to state 401 ]
  ! IS_IDENTICAL    [ shift and go to state 410 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 411 ]
  ! IS_EQUAL_TO     [ shift and go to state 412 ]
  ! IS_NOT_EQUAL    [ shift and go to state 413 ]


state 482

    (271) static_expr -> static_expr IS_NOT_IDENTICAL static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 271 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    BOOLEAN_OR      reduce using rule 271 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    LOGICAL_AND     reduce using rule 271 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    LOGICAL_OR      reduce using rule 271 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    LOGICAL_XOR     reduce using rule 271 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    AND             reduce using rule 271 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    OR              reduce using rule 271 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    XOR             reduce using rule 271 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    IS_IDENTICAL    reduce using rule 271 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    IS_NOT_IDENTICAL reduce using rule 271 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    IS_EQUAL_TO     reduce using rule 271 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    IS_NOT_EQUAL    reduce using rule 271 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    SEMI_COLON      reduce using rule 271 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    COMMA           reduce using rule 271 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    RPAREN          reduce using rule 271 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    RBRACKET        reduce using rule 271 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .)
    CONCAT          shift and go to state 402
    PLUS            shift and go to state 403
    MINUS           shift and go to state 404
    MUL             shift and go to state 405
    DIV             shift and go to state 406
    SL              shift and go to state 407
    SR              shift and go to state 408
    MOD             shift and go to state 409
    LESS_THAN       shift and go to state 414
    LESS_THAN_OR_EQUAL shift and go to state 415
    GREATER_THAN    shift and go to state 416
    GRATER_THAN_OR_EQUAL shift and go to state 417

  ! CONCAT          [ reduce using rule 271 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .) ]
  ! PLUS            [ reduce using rule 271 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .) ]
  ! MINUS           [ reduce using rule 271 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .) ]
  ! MUL             [ reduce using rule 271 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .) ]
  ! DIV             [ reduce using rule 271 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .) ]
  ! SL              [ reduce using rule 271 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .) ]
  ! SR              [ reduce using rule 271 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .) ]
  ! MOD             [ reduce using rule 271 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .) ]
  ! LESS_THAN       [ reduce using rule 271 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 271 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .) ]
  ! GREATER_THAN    [ reduce using rule 271 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 271 (static_expr -> static_expr IS_NOT_IDENTICAL static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 394 ]
  ! BOOLEAN_OR      [ shift and go to state 395 ]
  ! LOGICAL_AND     [ shift and go to state 396 ]
  ! LOGICAL_OR      [ shift and go to state 397 ]
  ! LOGICAL_XOR     [ shift and go to state 398 ]
  ! AND             [ shift and go to state 399 ]
  ! OR              [ shift and go to state 400 ]
  ! XOR             [ shift and go to state 401 ]
  ! IS_IDENTICAL    [ shift and go to state 410 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 411 ]
  ! IS_EQUAL_TO     [ shift and go to state 412 ]
  ! IS_NOT_EQUAL    [ shift and go to state 413 ]


state 483

    (272) static_expr -> static_expr IS_EQUAL_TO static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 272 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    BOOLEAN_OR      reduce using rule 272 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    LOGICAL_AND     reduce using rule 272 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    LOGICAL_OR      reduce using rule 272 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    LOGICAL_XOR     reduce using rule 272 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    AND             reduce using rule 272 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    OR              reduce using rule 272 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    XOR             reduce using rule 272 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    IS_IDENTICAL    reduce using rule 272 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    IS_NOT_IDENTICAL reduce using rule 272 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    IS_EQUAL_TO     reduce using rule 272 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    IS_NOT_EQUAL    reduce using rule 272 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    SEMI_COLON      reduce using rule 272 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    COMMA           reduce using rule 272 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    RPAREN          reduce using rule 272 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    RBRACKET        reduce using rule 272 (static_expr -> static_expr IS_EQUAL_TO static_expr .)
    CONCAT          shift and go to state 402
    PLUS            shift and go to state 403
    MINUS           shift and go to state 404
    MUL             shift and go to state 405
    DIV             shift and go to state 406
    SL              shift and go to state 407
    SR              shift and go to state 408
    MOD             shift and go to state 409
    LESS_THAN       shift and go to state 414
    LESS_THAN_OR_EQUAL shift and go to state 415
    GREATER_THAN    shift and go to state 416
    GRATER_THAN_OR_EQUAL shift and go to state 417

  ! CONCAT          [ reduce using rule 272 (static_expr -> static_expr IS_EQUAL_TO static_expr .) ]
  ! PLUS            [ reduce using rule 272 (static_expr -> static_expr IS_EQUAL_TO static_expr .) ]
  ! MINUS           [ reduce using rule 272 (static_expr -> static_expr IS_EQUAL_TO static_expr .) ]
  ! MUL             [ reduce using rule 272 (static_expr -> static_expr IS_EQUAL_TO static_expr .) ]
  ! DIV             [ reduce using rule 272 (static_expr -> static_expr IS_EQUAL_TO static_expr .) ]
  ! SL              [ reduce using rule 272 (static_expr -> static_expr IS_EQUAL_TO static_expr .) ]
  ! SR              [ reduce using rule 272 (static_expr -> static_expr IS_EQUAL_TO static_expr .) ]
  ! MOD             [ reduce using rule 272 (static_expr -> static_expr IS_EQUAL_TO static_expr .) ]
  ! LESS_THAN       [ reduce using rule 272 (static_expr -> static_expr IS_EQUAL_TO static_expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 272 (static_expr -> static_expr IS_EQUAL_TO static_expr .) ]
  ! GREATER_THAN    [ reduce using rule 272 (static_expr -> static_expr IS_EQUAL_TO static_expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 272 (static_expr -> static_expr IS_EQUAL_TO static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 394 ]
  ! BOOLEAN_OR      [ shift and go to state 395 ]
  ! LOGICAL_AND     [ shift and go to state 396 ]
  ! LOGICAL_OR      [ shift and go to state 397 ]
  ! LOGICAL_XOR     [ shift and go to state 398 ]
  ! AND             [ shift and go to state 399 ]
  ! OR              [ shift and go to state 400 ]
  ! XOR             [ shift and go to state 401 ]
  ! IS_IDENTICAL    [ shift and go to state 410 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 411 ]
  ! IS_EQUAL_TO     [ shift and go to state 412 ]
  ! IS_NOT_EQUAL    [ shift and go to state 413 ]


state 484

    (273) static_expr -> static_expr IS_NOT_EQUAL static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 273 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    BOOLEAN_OR      reduce using rule 273 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    LOGICAL_AND     reduce using rule 273 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    LOGICAL_OR      reduce using rule 273 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    LOGICAL_XOR     reduce using rule 273 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    AND             reduce using rule 273 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    OR              reduce using rule 273 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    XOR             reduce using rule 273 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    IS_IDENTICAL    reduce using rule 273 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    IS_NOT_IDENTICAL reduce using rule 273 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    IS_EQUAL_TO     reduce using rule 273 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    IS_NOT_EQUAL    reduce using rule 273 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    SEMI_COLON      reduce using rule 273 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    COMMA           reduce using rule 273 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    RPAREN          reduce using rule 273 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    RBRACKET        reduce using rule 273 (static_expr -> static_expr IS_NOT_EQUAL static_expr .)
    CONCAT          shift and go to state 402
    PLUS            shift and go to state 403
    MINUS           shift and go to state 404
    MUL             shift and go to state 405
    DIV             shift and go to state 406
    SL              shift and go to state 407
    SR              shift and go to state 408
    MOD             shift and go to state 409
    LESS_THAN       shift and go to state 414
    LESS_THAN_OR_EQUAL shift and go to state 415
    GREATER_THAN    shift and go to state 416
    GRATER_THAN_OR_EQUAL shift and go to state 417

  ! CONCAT          [ reduce using rule 273 (static_expr -> static_expr IS_NOT_EQUAL static_expr .) ]
  ! PLUS            [ reduce using rule 273 (static_expr -> static_expr IS_NOT_EQUAL static_expr .) ]
  ! MINUS           [ reduce using rule 273 (static_expr -> static_expr IS_NOT_EQUAL static_expr .) ]
  ! MUL             [ reduce using rule 273 (static_expr -> static_expr IS_NOT_EQUAL static_expr .) ]
  ! DIV             [ reduce using rule 273 (static_expr -> static_expr IS_NOT_EQUAL static_expr .) ]
  ! SL              [ reduce using rule 273 (static_expr -> static_expr IS_NOT_EQUAL static_expr .) ]
  ! SR              [ reduce using rule 273 (static_expr -> static_expr IS_NOT_EQUAL static_expr .) ]
  ! MOD             [ reduce using rule 273 (static_expr -> static_expr IS_NOT_EQUAL static_expr .) ]
  ! LESS_THAN       [ reduce using rule 273 (static_expr -> static_expr IS_NOT_EQUAL static_expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 273 (static_expr -> static_expr IS_NOT_EQUAL static_expr .) ]
  ! GREATER_THAN    [ reduce using rule 273 (static_expr -> static_expr IS_NOT_EQUAL static_expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 273 (static_expr -> static_expr IS_NOT_EQUAL static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 394 ]
  ! BOOLEAN_OR      [ shift and go to state 395 ]
  ! LOGICAL_AND     [ shift and go to state 396 ]
  ! LOGICAL_OR      [ shift and go to state 397 ]
  ! LOGICAL_XOR     [ shift and go to state 398 ]
  ! AND             [ shift and go to state 399 ]
  ! OR              [ shift and go to state 400 ]
  ! XOR             [ shift and go to state 401 ]
  ! IS_IDENTICAL    [ shift and go to state 410 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 411 ]
  ! IS_EQUAL_TO     [ shift and go to state 412 ]
  ! IS_NOT_EQUAL    [ shift and go to state 413 ]


state 485

    (274) static_expr -> static_expr LESS_THAN static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 274 (static_expr -> static_expr LESS_THAN static_expr .)
    BOOLEAN_OR      reduce using rule 274 (static_expr -> static_expr LESS_THAN static_expr .)
    LOGICAL_AND     reduce using rule 274 (static_expr -> static_expr LESS_THAN static_expr .)
    LOGICAL_OR      reduce using rule 274 (static_expr -> static_expr LESS_THAN static_expr .)
    LOGICAL_XOR     reduce using rule 274 (static_expr -> static_expr LESS_THAN static_expr .)
    AND             reduce using rule 274 (static_expr -> static_expr LESS_THAN static_expr .)
    OR              reduce using rule 274 (static_expr -> static_expr LESS_THAN static_expr .)
    XOR             reduce using rule 274 (static_expr -> static_expr LESS_THAN static_expr .)
    IS_IDENTICAL    reduce using rule 274 (static_expr -> static_expr LESS_THAN static_expr .)
    IS_NOT_IDENTICAL reduce using rule 274 (static_expr -> static_expr LESS_THAN static_expr .)
    IS_EQUAL_TO     reduce using rule 274 (static_expr -> static_expr LESS_THAN static_expr .)
    IS_NOT_EQUAL    reduce using rule 274 (static_expr -> static_expr LESS_THAN static_expr .)
    LESS_THAN       reduce using rule 274 (static_expr -> static_expr LESS_THAN static_expr .)
    LESS_THAN_OR_EQUAL reduce using rule 274 (static_expr -> static_expr LESS_THAN static_expr .)
    GREATER_THAN    reduce using rule 274 (static_expr -> static_expr LESS_THAN static_expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 274 (static_expr -> static_expr LESS_THAN static_expr .)
    SEMI_COLON      reduce using rule 274 (static_expr -> static_expr LESS_THAN static_expr .)
    COMMA           reduce using rule 274 (static_expr -> static_expr LESS_THAN static_expr .)
    RPAREN          reduce using rule 274 (static_expr -> static_expr LESS_THAN static_expr .)
    RBRACKET        reduce using rule 274 (static_expr -> static_expr LESS_THAN static_expr .)
    CONCAT          shift and go to state 402
    PLUS            shift and go to state 403
    MINUS           shift and go to state 404
    MUL             shift and go to state 405
    DIV             shift and go to state 406
    SL              shift and go to state 407
    SR              shift and go to state 408
    MOD             shift and go to state 409

  ! CONCAT          [ reduce using rule 274 (static_expr -> static_expr LESS_THAN static_expr .) ]
  ! PLUS            [ reduce using rule 274 (static_expr -> static_expr LESS_THAN static_expr .) ]
  ! MINUS           [ reduce using rule 274 (static_expr -> static_expr LESS_THAN static_expr .) ]
  ! MUL             [ reduce using rule 274 (static_expr -> static_expr LESS_THAN static_expr .) ]
  ! DIV             [ reduce using rule 274 (static_expr -> static_expr LESS_THAN static_expr .) ]
  ! SL              [ reduce using rule 274 (static_expr -> static_expr LESS_THAN static_expr .) ]
  ! SR              [ reduce using rule 274 (static_expr -> static_expr LESS_THAN static_expr .) ]
  ! MOD             [ reduce using rule 274 (static_expr -> static_expr LESS_THAN static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 394 ]
  ! BOOLEAN_OR      [ shift and go to state 395 ]
  ! LOGICAL_AND     [ shift and go to state 396 ]
  ! LOGICAL_OR      [ shift and go to state 397 ]
  ! LOGICAL_XOR     [ shift and go to state 398 ]
  ! AND             [ shift and go to state 399 ]
  ! OR              [ shift and go to state 400 ]
  ! XOR             [ shift and go to state 401 ]
  ! IS_IDENTICAL    [ shift and go to state 410 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 411 ]
  ! IS_EQUAL_TO     [ shift and go to state 412 ]
  ! IS_NOT_EQUAL    [ shift and go to state 413 ]
  ! LESS_THAN       [ shift and go to state 414 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 415 ]
  ! GREATER_THAN    [ shift and go to state 416 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 417 ]


state 486

    (275) static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 275 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    BOOLEAN_OR      reduce using rule 275 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    LOGICAL_AND     reduce using rule 275 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    LOGICAL_OR      reduce using rule 275 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    LOGICAL_XOR     reduce using rule 275 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    AND             reduce using rule 275 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    OR              reduce using rule 275 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    XOR             reduce using rule 275 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    IS_IDENTICAL    reduce using rule 275 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    IS_NOT_IDENTICAL reduce using rule 275 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    IS_EQUAL_TO     reduce using rule 275 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    IS_NOT_EQUAL    reduce using rule 275 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    LESS_THAN       reduce using rule 275 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    LESS_THAN_OR_EQUAL reduce using rule 275 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    GREATER_THAN    reduce using rule 275 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 275 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    SEMI_COLON      reduce using rule 275 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    COMMA           reduce using rule 275 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    RPAREN          reduce using rule 275 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    RBRACKET        reduce using rule 275 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .)
    CONCAT          shift and go to state 402
    PLUS            shift and go to state 403
    MINUS           shift and go to state 404
    MUL             shift and go to state 405
    DIV             shift and go to state 406
    SL              shift and go to state 407
    SR              shift and go to state 408
    MOD             shift and go to state 409

  ! CONCAT          [ reduce using rule 275 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .) ]
  ! PLUS            [ reduce using rule 275 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .) ]
  ! MINUS           [ reduce using rule 275 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .) ]
  ! MUL             [ reduce using rule 275 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .) ]
  ! DIV             [ reduce using rule 275 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .) ]
  ! SL              [ reduce using rule 275 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .) ]
  ! SR              [ reduce using rule 275 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .) ]
  ! MOD             [ reduce using rule 275 (static_expr -> static_expr LESS_THAN_OR_EQUAL static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 394 ]
  ! BOOLEAN_OR      [ shift and go to state 395 ]
  ! LOGICAL_AND     [ shift and go to state 396 ]
  ! LOGICAL_OR      [ shift and go to state 397 ]
  ! LOGICAL_XOR     [ shift and go to state 398 ]
  ! AND             [ shift and go to state 399 ]
  ! OR              [ shift and go to state 400 ]
  ! XOR             [ shift and go to state 401 ]
  ! IS_IDENTICAL    [ shift and go to state 410 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 411 ]
  ! IS_EQUAL_TO     [ shift and go to state 412 ]
  ! IS_NOT_EQUAL    [ shift and go to state 413 ]
  ! LESS_THAN       [ shift and go to state 414 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 415 ]
  ! GREATER_THAN    [ shift and go to state 416 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 417 ]


state 487

    (276) static_expr -> static_expr GREATER_THAN static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 276 (static_expr -> static_expr GREATER_THAN static_expr .)
    BOOLEAN_OR      reduce using rule 276 (static_expr -> static_expr GREATER_THAN static_expr .)
    LOGICAL_AND     reduce using rule 276 (static_expr -> static_expr GREATER_THAN static_expr .)
    LOGICAL_OR      reduce using rule 276 (static_expr -> static_expr GREATER_THAN static_expr .)
    LOGICAL_XOR     reduce using rule 276 (static_expr -> static_expr GREATER_THAN static_expr .)
    AND             reduce using rule 276 (static_expr -> static_expr GREATER_THAN static_expr .)
    OR              reduce using rule 276 (static_expr -> static_expr GREATER_THAN static_expr .)
    XOR             reduce using rule 276 (static_expr -> static_expr GREATER_THAN static_expr .)
    IS_IDENTICAL    reduce using rule 276 (static_expr -> static_expr GREATER_THAN static_expr .)
    IS_NOT_IDENTICAL reduce using rule 276 (static_expr -> static_expr GREATER_THAN static_expr .)
    IS_EQUAL_TO     reduce using rule 276 (static_expr -> static_expr GREATER_THAN static_expr .)
    IS_NOT_EQUAL    reduce using rule 276 (static_expr -> static_expr GREATER_THAN static_expr .)
    LESS_THAN       reduce using rule 276 (static_expr -> static_expr GREATER_THAN static_expr .)
    LESS_THAN_OR_EQUAL reduce using rule 276 (static_expr -> static_expr GREATER_THAN static_expr .)
    GREATER_THAN    reduce using rule 276 (static_expr -> static_expr GREATER_THAN static_expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 276 (static_expr -> static_expr GREATER_THAN static_expr .)
    SEMI_COLON      reduce using rule 276 (static_expr -> static_expr GREATER_THAN static_expr .)
    COMMA           reduce using rule 276 (static_expr -> static_expr GREATER_THAN static_expr .)
    RPAREN          reduce using rule 276 (static_expr -> static_expr GREATER_THAN static_expr .)
    RBRACKET        reduce using rule 276 (static_expr -> static_expr GREATER_THAN static_expr .)
    CONCAT          shift and go to state 402
    PLUS            shift and go to state 403
    MINUS           shift and go to state 404
    MUL             shift and go to state 405
    DIV             shift and go to state 406
    SL              shift and go to state 407
    SR              shift and go to state 408
    MOD             shift and go to state 409

  ! CONCAT          [ reduce using rule 276 (static_expr -> static_expr GREATER_THAN static_expr .) ]
  ! PLUS            [ reduce using rule 276 (static_expr -> static_expr GREATER_THAN static_expr .) ]
  ! MINUS           [ reduce using rule 276 (static_expr -> static_expr GREATER_THAN static_expr .) ]
  ! MUL             [ reduce using rule 276 (static_expr -> static_expr GREATER_THAN static_expr .) ]
  ! DIV             [ reduce using rule 276 (static_expr -> static_expr GREATER_THAN static_expr .) ]
  ! SL              [ reduce using rule 276 (static_expr -> static_expr GREATER_THAN static_expr .) ]
  ! SR              [ reduce using rule 276 (static_expr -> static_expr GREATER_THAN static_expr .) ]
  ! MOD             [ reduce using rule 276 (static_expr -> static_expr GREATER_THAN static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 394 ]
  ! BOOLEAN_OR      [ shift and go to state 395 ]
  ! LOGICAL_AND     [ shift and go to state 396 ]
  ! LOGICAL_OR      [ shift and go to state 397 ]
  ! LOGICAL_XOR     [ shift and go to state 398 ]
  ! AND             [ shift and go to state 399 ]
  ! OR              [ shift and go to state 400 ]
  ! XOR             [ shift and go to state 401 ]
  ! IS_IDENTICAL    [ shift and go to state 410 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 411 ]
  ! IS_EQUAL_TO     [ shift and go to state 412 ]
  ! IS_NOT_EQUAL    [ shift and go to state 413 ]
  ! LESS_THAN       [ shift and go to state 414 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 415 ]
  ! GREATER_THAN    [ shift and go to state 416 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 417 ]


state 488

    (277) static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    BOOLEAN_AND     reduce using rule 277 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    BOOLEAN_OR      reduce using rule 277 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    LOGICAL_AND     reduce using rule 277 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    LOGICAL_OR      reduce using rule 277 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    LOGICAL_XOR     reduce using rule 277 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    AND             reduce using rule 277 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    OR              reduce using rule 277 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    XOR             reduce using rule 277 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    IS_IDENTICAL    reduce using rule 277 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    IS_NOT_IDENTICAL reduce using rule 277 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    IS_EQUAL_TO     reduce using rule 277 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    IS_NOT_EQUAL    reduce using rule 277 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    LESS_THAN       reduce using rule 277 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    LESS_THAN_OR_EQUAL reduce using rule 277 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    GREATER_THAN    reduce using rule 277 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    GRATER_THAN_OR_EQUAL reduce using rule 277 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    SEMI_COLON      reduce using rule 277 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    COMMA           reduce using rule 277 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    RPAREN          reduce using rule 277 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    RBRACKET        reduce using rule 277 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .)
    CONCAT          shift and go to state 402
    PLUS            shift and go to state 403
    MINUS           shift and go to state 404
    MUL             shift and go to state 405
    DIV             shift and go to state 406
    SL              shift and go to state 407
    SR              shift and go to state 408
    MOD             shift and go to state 409

  ! CONCAT          [ reduce using rule 277 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .) ]
  ! PLUS            [ reduce using rule 277 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .) ]
  ! MINUS           [ reduce using rule 277 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .) ]
  ! MUL             [ reduce using rule 277 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .) ]
  ! DIV             [ reduce using rule 277 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .) ]
  ! SL              [ reduce using rule 277 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .) ]
  ! SR              [ reduce using rule 277 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .) ]
  ! MOD             [ reduce using rule 277 (static_expr -> static_expr GRATER_THAN_OR_EQUAL static_expr .) ]
  ! BOOLEAN_AND     [ shift and go to state 394 ]
  ! BOOLEAN_OR      [ shift and go to state 395 ]
  ! LOGICAL_AND     [ shift and go to state 396 ]
  ! LOGICAL_OR      [ shift and go to state 397 ]
  ! LOGICAL_XOR     [ shift and go to state 398 ]
  ! AND             [ shift and go to state 399 ]
  ! OR              [ shift and go to state 400 ]
  ! XOR             [ shift and go to state 401 ]
  ! IS_IDENTICAL    [ shift and go to state 410 ]
  ! IS_NOT_IDENTICAL [ shift and go to state 411 ]
  ! IS_EQUAL_TO     [ shift and go to state 412 ]
  ! IS_NOT_EQUAL    [ shift and go to state 413 ]
  ! LESS_THAN       [ shift and go to state 414 ]
  ! LESS_THAN_OR_EQUAL [ shift and go to state 415 ]
  ! GREATER_THAN    [ shift and go to state 416 ]
  ! GRATER_THAN_OR_EQUAL [ shift and go to state 417 ]


state 489

    (278) static_expr -> LPAREN static_expr RPAREN .

    BOOLEAN_AND     reduce using rule 278 (static_expr -> LPAREN static_expr RPAREN .)
    BOOLEAN_OR      reduce using rule 278 (static_expr -> LPAREN static_expr RPAREN .)
    LOGICAL_AND     reduce using rule 278 (static_expr -> LPAREN static_expr RPAREN .)
    LOGICAL_OR      reduce using rule 278 (static_expr -> LPAREN static_expr RPAREN .)
    LOGICAL_XOR     reduce using rule 278 (static_expr -> LPAREN static_expr RPAREN .)
    AND             reduce using rule 278 (static_expr -> LPAREN static_expr RPAREN .)
    OR              reduce using rule 278 (static_expr -> LPAREN static_expr RPAREN .)
    XOR             reduce using rule 278 (static_expr -> LPAREN static_expr RPAREN .)
    CONCAT          reduce using rule 278 (static_expr -> LPAREN static_expr RPAREN .)
    PLUS            reduce using rule 278 (static_expr -> LPAREN static_expr RPAREN .)
    MINUS           reduce using rule 278 (static_expr -> LPAREN static_expr RPAREN .)
    MUL             reduce using rule 278 (static_expr -> LPAREN static_expr RPAREN .)
    DIV             reduce using rule 278 (static_expr -> LPAREN static_expr RPAREN .)
    SL              reduce using rule 278 (static_expr -> LPAREN static_expr RPAREN .)
    SR              reduce using rule 278 (static_expr -> LPAREN static_expr RPAREN .)
    MOD             reduce using rule 278 (static_expr -> LPAREN static_expr RPAREN .)
    IS_IDENTICAL    reduce using rule 278 (static_expr -> LPAREN static_expr RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 278 (static_expr -> LPAREN static_expr RPAREN .)
    IS_EQUAL_TO     reduce using rule 278 (static_expr -> LPAREN static_expr RPAREN .)
    IS_NOT_EQUAL    reduce using rule 278 (static_expr -> LPAREN static_expr RPAREN .)
    LESS_THAN       reduce using rule 278 (static_expr -> LPAREN static_expr RPAREN .)
    LESS_THAN_OR_EQUAL reduce using rule 278 (static_expr -> LPAREN static_expr RPAREN .)
    GREATER_THAN    reduce using rule 278 (static_expr -> LPAREN static_expr RPAREN .)
    GRATER_THAN_OR_EQUAL reduce using rule 278 (static_expr -> LPAREN static_expr RPAREN .)
    SEMI_COLON      reduce using rule 278 (static_expr -> LPAREN static_expr RPAREN .)
    COMMA           reduce using rule 278 (static_expr -> LPAREN static_expr RPAREN .)
    RPAREN          reduce using rule 278 (static_expr -> LPAREN static_expr RPAREN .)
    RBRACKET        reduce using rule 278 (static_expr -> LPAREN static_expr RPAREN .)


state 490

    (236) static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .

    BOOLEAN_AND     reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    BOOLEAN_OR      reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    LOGICAL_AND     reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    LOGICAL_OR      reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    LOGICAL_XOR     reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    AND             reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    OR              reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    XOR             reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    CONCAT          reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    PLUS            reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    MINUS           reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    MUL             reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    DIV             reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    SL              reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    SR              reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    MOD             reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    IS_IDENTICAL    reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    IS_NOT_IDENTICAL reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    IS_EQUAL_TO     reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    IS_NOT_EQUAL    reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    LESS_THAN       reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    LESS_THAN_OR_EQUAL reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    GREATER_THAN    reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    GRATER_THAN_OR_EQUAL reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    SEMI_COLON      reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    COMMA           reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    RPAREN          reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    DOUBLE_ARROW    reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)
    RBRACKET        reduce using rule 236 (static_scalar -> DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE .)


state 491

    (245) static_scalar -> ARRAY LPAREN static_array_pair_list . RPAREN

    RPAREN          shift and go to state 523


state 492

    (246) static_scalar -> LBRACKET static_array_pair_list RBRACKET .

    BOOLEAN_AND     reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    BOOLEAN_OR      reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    LOGICAL_AND     reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    LOGICAL_OR      reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    LOGICAL_XOR     reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    AND             reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    OR              reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    XOR             reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    CONCAT          reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    PLUS            reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    MINUS           reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    MUL             reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    DIV             reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    SL              reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    SR              reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    MOD             reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    IS_IDENTICAL    reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    IS_NOT_IDENTICAL reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    IS_EQUAL_TO     reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    IS_NOT_EQUAL    reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    LESS_THAN       reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    LESS_THAN_OR_EQUAL reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    GREATER_THAN    reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    GRATER_THAN_OR_EQUAL reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    SEMI_COLON      reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    COMMA           reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    RPAREN          reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    DOUBLE_ARROW    reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)
    RBRACKET        reduce using rule 246 (static_scalar -> LBRACKET static_array_pair_list RBRACKET .)


state 493

    (248) static_array_pair_list -> static_non_empty_array_pair_list possible_comma .

    RBRACKET        reduce using rule 248 (static_array_pair_list -> static_non_empty_array_pair_list possible_comma .)
    RPAREN          reduce using rule 248 (static_array_pair_list -> static_non_empty_array_pair_list possible_comma .)


state 494

    (249) static_non_empty_array_pair_list -> static_non_empty_array_pair_list COMMA . static_expr
    (251) static_non_empty_array_pair_list -> static_non_empty_array_pair_list COMMA . static_scalar DOUBLE_ARROW static_expr
    (132) possible_comma -> COMMA .
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    RBRACKET        reduce using rule 132 (possible_comma -> COMMA .)
    RPAREN          reduce using rule 132 (possible_comma -> COMMA .)
    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_expr                    shift and go to state 524
    static_scalar                  shift and go to state 525
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 495

    (252) static_non_empty_array_pair_list -> static_scalar DOUBLE_ARROW . static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_scalar                  shift and go to state 331
    static_expr                    shift and go to state 526
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 496

    (239) static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .

    BOOLEAN_AND     reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    BOOLEAN_OR      reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    LOGICAL_AND     reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    LOGICAL_OR      reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    LOGICAL_XOR     reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    AND             reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    OR              reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    XOR             reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    CONCAT          reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    PLUS            reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    MINUS           reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    MUL             reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    DIV             reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    SL              reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    SR              reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    MOD             reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    IS_IDENTICAL    reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    IS_NOT_IDENTICAL reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    IS_EQUAL_TO     reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    IS_NOT_EQUAL    reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    LESS_THAN       reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    LESS_THAN_OR_EQUAL reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    GREATER_THAN    reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    GRATER_THAN_OR_EQUAL reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    SEMI_COLON      reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    COMMA           reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    RPAREN          reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    DOUBLE_ARROW    reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)
    RBRACKET        reduce using rule 239 (static_heredoc -> START_HEREDOC multiple_encapsed END_HEREDOC .)


state 497

    (240) multiple_encapsed -> multiple_encapsed ENCAPSED_AND_WHITESPACE .

    END_HEREDOC     reduce using rule 240 (multiple_encapsed -> multiple_encapsed ENCAPSED_AND_WHITESPACE .)
    ENCAPSED_AND_WHITESPACE reduce using rule 240 (multiple_encapsed -> multiple_encapsed ENCAPSED_AND_WHITESPACE .)


state 498

    (18) statement -> IF LPAREN expr RPAREN statement elseif_list . else_single
    (38) elseif_list -> elseif_list . ELSEIF LPAREN expr RPAREN statement
    (39) else_single -> . empty
    (40) else_single -> . ELSE statement
    (289) empty -> .

  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
    ELSEIF          shift and go to state 528
    ELSE            shift and go to state 530
    HALT_COMPILER   reduce using rule 289 (empty -> .)
    CONST           reduce using rule 289 (empty -> .)
    LBRACE          reduce using rule 289 (empty -> .)
    IF              reduce using rule 289 (empty -> .)
    WHILE           reduce using rule 289 (empty -> .)
    DO              reduce using rule 289 (empty -> .)
    FOR             reduce using rule 289 (empty -> .)
    SWITCH          reduce using rule 289 (empty -> .)
    BREAK           reduce using rule 289 (empty -> .)
    CONTINUE        reduce using rule 289 (empty -> .)
    RETURN          reduce using rule 289 (empty -> .)
    GLOBAL          reduce using rule 289 (empty -> .)
    STATIC          reduce using rule 289 (empty -> .)
    ECHO            reduce using rule 289 (empty -> .)
    INLINE_HTML     reduce using rule 289 (empty -> .)
    UNSET           reduce using rule 289 (empty -> .)
    SEMI_COLON      reduce using rule 289 (empty -> .)
    FUNCTION        reduce using rule 289 (empty -> .)
    CLONE           reduce using rule 289 (empty -> .)
    LIST            reduce using rule 289 (empty -> .)
    ARRAY           reduce using rule 289 (empty -> .)
    LBRACKET        reduce using rule 289 (empty -> .)
    PLUS            reduce using rule 289 (empty -> .)
    MINUS           reduce using rule 289 (empty -> .)
    NOT             reduce using rule 289 (empty -> .)
    BOOLEAN_NOT     reduce using rule 289 (empty -> .)
    INC             reduce using rule 289 (empty -> .)
    DEC             reduce using rule 289 (empty -> .)
    INT_CAST        reduce using rule 289 (empty -> .)
    ARRAY_CAST      reduce using rule 289 (empty -> .)
    STRING_CAST     reduce using rule 289 (empty -> .)
    DOUBLE_CAST     reduce using rule 289 (empty -> .)
    BOOL_CAST       reduce using rule 289 (empty -> .)
    UNSET_CAST      reduce using rule 289 (empty -> .)
    BINARY_CAST     reduce using rule 289 (empty -> .)
    ISSET           reduce using rule 289 (empty -> .)
    EMPTY           reduce using rule 289 (empty -> .)
    EVAL            reduce using rule 289 (empty -> .)
    INCLUDE         reduce using rule 289 (empty -> .)
    INCLUDE_ONCE    reduce using rule 289 (empty -> .)
    REQUIRE         reduce using rule 289 (empty -> .)
    REQUIRE_ONCE    reduce using rule 289 (empty -> .)
    PRINT           reduce using rule 289 (empty -> .)
    AT              reduce using rule 289 (empty -> .)
    LPAREN          reduce using rule 289 (empty -> .)
    DOUBLE_QUOTE    reduce using rule 289 (empty -> .)
    IDENTIFIER      reduce using rule 289 (empty -> .)
    EXIT            reduce using rule 289 (empty -> .)
    DIE             reduce using rule 289 (empty -> .)
    INT_NUMBER      reduce using rule 289 (empty -> .)
    FLOAT_NUMBER    reduce using rule 289 (empty -> .)
    CONSTANT_ENCAPSED_STRING reduce using rule 289 (empty -> .)
    FUNC_C          reduce using rule 289 (empty -> .)
    METHOD_C        reduce using rule 289 (empty -> .)
    LINE            reduce using rule 289 (empty -> .)
    FILE            reduce using rule 289 (empty -> .)
    DIR             reduce using rule 289 (empty -> .)
    START_HEREDOC   reduce using rule 289 (empty -> .)
    START_NOWDOC    reduce using rule 289 (empty -> .)
    DOLLAR          reduce using rule 289 (empty -> .)
    VARIABLE        reduce using rule 289 (empty -> .)
    $end            reduce using rule 289 (empty -> .)
    RBRACE          reduce using rule 289 (empty -> .)
    YIELD           reduce using rule 289 (empty -> .)
    ENDIF           reduce using rule 289 (empty -> .)
    ENDWHILE        reduce using rule 289 (empty -> .)
    ENDSWITCH       reduce using rule 289 (empty -> .)
    ENDFOR          reduce using rule 289 (empty -> .)
    CASE            reduce using rule 289 (empty -> .)
    DEFAULT         reduce using rule 289 (empty -> .)

  ! ELSEIF          [ reduce using rule 289 (empty -> .) ]
  ! ELSE            [ reduce using rule 289 (empty -> .) ]

    else_single                    shift and go to state 527
    empty                          shift and go to state 529

state 499

    (37) elseif_list -> empty .

    ELSEIF          reduce using rule 37 (elseif_list -> empty .)
    ELSE            reduce using rule 37 (elseif_list -> empty .)
    HALT_COMPILER   reduce using rule 37 (elseif_list -> empty .)
    CONST           reduce using rule 37 (elseif_list -> empty .)
    LBRACE          reduce using rule 37 (elseif_list -> empty .)
    IF              reduce using rule 37 (elseif_list -> empty .)
    WHILE           reduce using rule 37 (elseif_list -> empty .)
    DO              reduce using rule 37 (elseif_list -> empty .)
    FOR             reduce using rule 37 (elseif_list -> empty .)
    SWITCH          reduce using rule 37 (elseif_list -> empty .)
    BREAK           reduce using rule 37 (elseif_list -> empty .)
    CONTINUE        reduce using rule 37 (elseif_list -> empty .)
    RETURN          reduce using rule 37 (elseif_list -> empty .)
    GLOBAL          reduce using rule 37 (elseif_list -> empty .)
    STATIC          reduce using rule 37 (elseif_list -> empty .)
    ECHO            reduce using rule 37 (elseif_list -> empty .)
    INLINE_HTML     reduce using rule 37 (elseif_list -> empty .)
    UNSET           reduce using rule 37 (elseif_list -> empty .)
    SEMI_COLON      reduce using rule 37 (elseif_list -> empty .)
    FUNCTION        reduce using rule 37 (elseif_list -> empty .)
    CLONE           reduce using rule 37 (elseif_list -> empty .)
    LIST            reduce using rule 37 (elseif_list -> empty .)
    ARRAY           reduce using rule 37 (elseif_list -> empty .)
    LBRACKET        reduce using rule 37 (elseif_list -> empty .)
    PLUS            reduce using rule 37 (elseif_list -> empty .)
    MINUS           reduce using rule 37 (elseif_list -> empty .)
    NOT             reduce using rule 37 (elseif_list -> empty .)
    BOOLEAN_NOT     reduce using rule 37 (elseif_list -> empty .)
    INC             reduce using rule 37 (elseif_list -> empty .)
    DEC             reduce using rule 37 (elseif_list -> empty .)
    INT_CAST        reduce using rule 37 (elseif_list -> empty .)
    ARRAY_CAST      reduce using rule 37 (elseif_list -> empty .)
    STRING_CAST     reduce using rule 37 (elseif_list -> empty .)
    DOUBLE_CAST     reduce using rule 37 (elseif_list -> empty .)
    BOOL_CAST       reduce using rule 37 (elseif_list -> empty .)
    UNSET_CAST      reduce using rule 37 (elseif_list -> empty .)
    BINARY_CAST     reduce using rule 37 (elseif_list -> empty .)
    ISSET           reduce using rule 37 (elseif_list -> empty .)
    EMPTY           reduce using rule 37 (elseif_list -> empty .)
    EVAL            reduce using rule 37 (elseif_list -> empty .)
    INCLUDE         reduce using rule 37 (elseif_list -> empty .)
    INCLUDE_ONCE    reduce using rule 37 (elseif_list -> empty .)
    REQUIRE         reduce using rule 37 (elseif_list -> empty .)
    REQUIRE_ONCE    reduce using rule 37 (elseif_list -> empty .)
    PRINT           reduce using rule 37 (elseif_list -> empty .)
    AT              reduce using rule 37 (elseif_list -> empty .)
    LPAREN          reduce using rule 37 (elseif_list -> empty .)
    DOUBLE_QUOTE    reduce using rule 37 (elseif_list -> empty .)
    IDENTIFIER      reduce using rule 37 (elseif_list -> empty .)
    EXIT            reduce using rule 37 (elseif_list -> empty .)
    DIE             reduce using rule 37 (elseif_list -> empty .)
    INT_NUMBER      reduce using rule 37 (elseif_list -> empty .)
    FLOAT_NUMBER    reduce using rule 37 (elseif_list -> empty .)
    CONSTANT_ENCAPSED_STRING reduce using rule 37 (elseif_list -> empty .)
    FUNC_C          reduce using rule 37 (elseif_list -> empty .)
    METHOD_C        reduce using rule 37 (elseif_list -> empty .)
    LINE            reduce using rule 37 (elseif_list -> empty .)
    FILE            reduce using rule 37 (elseif_list -> empty .)
    DIR             reduce using rule 37 (elseif_list -> empty .)
    START_HEREDOC   reduce using rule 37 (elseif_list -> empty .)
    START_NOWDOC    reduce using rule 37 (elseif_list -> empty .)
    DOLLAR          reduce using rule 37 (elseif_list -> empty .)
    VARIABLE        reduce using rule 37 (elseif_list -> empty .)
    $end            reduce using rule 37 (elseif_list -> empty .)
    RBRACE          reduce using rule 37 (elseif_list -> empty .)
    YIELD           reduce using rule 37 (elseif_list -> empty .)
    ENDIF           reduce using rule 37 (elseif_list -> empty .)
    ENDWHILE        reduce using rule 37 (elseif_list -> empty .)
    ENDSWITCH       reduce using rule 37 (elseif_list -> empty .)
    ENDFOR          reduce using rule 37 (elseif_list -> empty .)
    CASE            reduce using rule 37 (elseif_list -> empty .)
    DEFAULT         reduce using rule 37 (elseif_list -> empty .)


state 500

    (19) statement -> IF LPAREN expr RPAREN COLON inner_statement_list . new_elseif_list new_else_single ENDIF SEMI_COLON
    (11) inner_statement_list -> inner_statement_list . inner_statement
    (41) new_elseif_list -> . empty
    (42) new_elseif_list -> . new_elseif_list ELSEIF LPAREN expr RPAREN COLON inner_statement_list
    (13) inner_statement -> . statement
    (14) inner_statement -> . function_declaration_statement
    (15) inner_statement -> . YIELD SEMI_COLON
    (16) inner_statement -> . YIELD expr SEMI_COLON
    (289) empty -> .
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list else_single
    (19) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (20) statement -> . WHILE LPAREN expr RPAREN while_statement
    (21) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (22) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (23) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (24) statement -> . BREAK SEMI_COLON
    (25) statement -> . BREAK expr SEMI_COLON
    (26) statement -> . CONTINUE SEMI_COLON
    (27) statement -> . CONTINUE expr SEMI_COLON
    (28) statement -> . RETURN SEMI_COLON
    (29) statement -> . RETURN expr SEMI_COLON
    (30) statement -> . GLOBAL global_var_list SEMI_COLON
    (31) statement -> . STATIC static_var_list SEMI_COLON
    (32) statement -> . ECHO echo_expr_list SEMI_COLON
    (33) statement -> . INLINE_HTML
    (34) statement -> . expr SEMI_COLON
    (35) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (36) statement -> . SEMI_COLON
    (78) function_declaration_statement -> . FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    YIELD           shift and go to state 217
    ELSEIF          reduce using rule 289 (empty -> .)
    ELSE            reduce using rule 289 (empty -> .)
    ENDIF           reduce using rule 289 (empty -> .)
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    FUNCTION        shift and go to state 26
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 13
    new_elseif_list                shift and go to state 531
    inner_statement                shift and go to state 214
    empty                          shift and go to state 532
    statement                      shift and go to state 215
    function_declaration_statement shift and go to state 216
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 501

    (46) while_statement -> COLON inner_statement_list . ENDWHILE SEMI_COLON
    (11) inner_statement_list -> inner_statement_list . inner_statement
    (13) inner_statement -> . statement
    (14) inner_statement -> . function_declaration_statement
    (15) inner_statement -> . YIELD SEMI_COLON
    (16) inner_statement -> . YIELD expr SEMI_COLON
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list else_single
    (19) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (20) statement -> . WHILE LPAREN expr RPAREN while_statement
    (21) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (22) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (23) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (24) statement -> . BREAK SEMI_COLON
    (25) statement -> . BREAK expr SEMI_COLON
    (26) statement -> . CONTINUE SEMI_COLON
    (27) statement -> . CONTINUE expr SEMI_COLON
    (28) statement -> . RETURN SEMI_COLON
    (29) statement -> . RETURN expr SEMI_COLON
    (30) statement -> . GLOBAL global_var_list SEMI_COLON
    (31) statement -> . STATIC static_var_list SEMI_COLON
    (32) statement -> . ECHO echo_expr_list SEMI_COLON
    (33) statement -> . INLINE_HTML
    (34) statement -> . expr SEMI_COLON
    (35) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (36) statement -> . SEMI_COLON
    (78) function_declaration_statement -> . FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    ENDWHILE        shift and go to state 533
    YIELD           shift and go to state 217
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    FUNCTION        shift and go to state 26
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    inner_statement                shift and go to state 214
    statement                      shift and go to state 215
    function_declaration_statement shift and go to state 216
    expr                           shift and go to state 13
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 502

    (21) statement -> DO statement WHILE LPAREN expr RPAREN . SEMI_COLON

    SEMI_COLON      shift and go to state 534


state 503

    (22) statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON . for_expr RPAREN for_statement
    (47) for_expr -> . empty
    (48) for_expr -> . non_empty_for_expr
    (289) empty -> .
    (49) non_empty_for_expr -> . non_empty_for_expr COMMA expr
    (50) non_empty_for_expr -> . expr
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    RPAREN          reduce using rule 289 (empty -> .)
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    for_expr                       shift and go to state 535
    empty                          shift and go to state 253
    non_empty_for_expr             shift and go to state 254
    expr                           shift and go to state 255
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 504

    (53) switch_case_list -> LBRACE case_list . RBRACE

    RBRACE          shift and go to state 536


state 505

    (54) switch_case_list -> LBRACE SEMI_COLON . case_list RBRACE
    (57) case_list -> . empty
    (58) case_list -> . case_list_no_default CASE expr case_separator inner_statement_list
    (59) case_list -> . case_list_no_default DEFAULT case_separator inner_statement_list
    (289) empty -> .
    (60) case_list_no_default -> . empty
    (61) case_list_no_default -> . case_list_no_default CASE expr case_separator inner_statement_list

    RBRACE          reduce using rule 289 (empty -> .)
    CASE            reduce using rule 289 (empty -> .)
    DEFAULT         reduce using rule 289 (empty -> .)

    case_list                      shift and go to state 537
    empty                          shift and go to state 506
    case_list_no_default           shift and go to state 507

state 506

    (57) case_list -> empty .
    (60) case_list_no_default -> empty .

    RBRACE          reduce using rule 57 (case_list -> empty .)
    ENDSWITCH       reduce using rule 57 (case_list -> empty .)
    CASE            reduce using rule 60 (case_list_no_default -> empty .)
    DEFAULT         reduce using rule 60 (case_list_no_default -> empty .)


state 507

    (58) case_list -> case_list_no_default . CASE expr case_separator inner_statement_list
    (59) case_list -> case_list_no_default . DEFAULT case_separator inner_statement_list
    (61) case_list_no_default -> case_list_no_default . CASE expr case_separator inner_statement_list

    CASE            shift and go to state 538
    DEFAULT         shift and go to state 539


state 508

    (55) switch_case_list -> COLON case_list . ENDSWITCH SEMI_COLON

    ENDSWITCH       shift and go to state 540


state 509

    (56) switch_case_list -> COLON SEMI_COLON . case_list ENDSWITCH SEMI_COLON
    (57) case_list -> . empty
    (58) case_list -> . case_list_no_default CASE expr case_separator inner_statement_list
    (59) case_list -> . case_list_no_default DEFAULT case_separator inner_statement_list
    (289) empty -> .
    (60) case_list_no_default -> . empty
    (61) case_list_no_default -> . case_list_no_default CASE expr case_separator inner_statement_list

    ENDSWITCH       reduce using rule 289 (empty -> .)
    CASE            reduce using rule 289 (empty -> .)
    DEFAULT         reduce using rule 289 (empty -> .)

    case_list                      shift and go to state 541
    empty                          shift and go to state 506
    case_list_no_default           shift and go to state 507

state 510

    (78) function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN . LBRACE inner_statement_list RBRACE

    LBRACE          shift and go to state 542


state 511

    (137) expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars . LBRACE inner_statement_list RBRACE

    LBRACE          shift and go to state 543


state 512

    (138) lexical_vars -> USE . LPAREN lexical_var_list RPAREN

    LPAREN          shift and go to state 544


state 513

    (139) lexical_vars -> empty .

    LBRACE          reduce using rule 139 (lexical_vars -> empty .)


state 514

    (83) non_empty_parameter_list -> non_empty_parameter_list COMMA parameter .

    COMMA           reduce using rule 83 (non_empty_parameter_list -> non_empty_parameter_list COMMA parameter .)
    RPAREN          reduce using rule 83 (non_empty_parameter_list -> non_empty_parameter_list COMMA parameter .)


state 515

    (87) parameter -> VARIABLE EQUALS static_scalar .

    COMMA           reduce using rule 87 (parameter -> VARIABLE EQUALS static_scalar .)
    RPAREN          reduce using rule 87 (parameter -> VARIABLE EQUALS static_scalar .)


state 516

    (88) parameter -> AND VARIABLE EQUALS . static_scalar
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_scalar                  shift and go to state 545
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 517

    (98) assignment_list_element -> LIST LPAREN assignment_list RPAREN .

    RPAREN          reduce using rule 98 (assignment_list_element -> LIST LPAREN assignment_list RPAREN .)
    COMMA           reduce using rule 98 (assignment_list_element -> LIST LPAREN assignment_list RPAREN .)


state 518

    (93) expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    SEMI_COLON      reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .)
    LBRACE          reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .)
    LOGICAL_AND     reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .)
    LOGICAL_OR      reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .)
    LOGICAL_XOR     reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .)
    RPAREN          reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .)
    COMMA           reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .)
    DOUBLE_ARROW    reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .)
    RBRACKET        reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .)
    RBRACE          reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .)
    COLON           reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .)
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118

  ! BOOLEAN_AND     [ reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! BOOLEAN_OR      [ reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! AND             [ reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! OR              [ reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! XOR             [ reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! CONCAT          [ reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! PLUS            [ reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! MINUS           [ reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! MUL             [ reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! DIV             [ reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! SL              [ reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! SR              [ reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! MOD             [ reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! IS_IDENTICAL    [ reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! IS_EQUAL_TO     [ reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! LESS_THAN       [ reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! LESS_THAN_OR_EQUAL [ reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! GREATER_THAN    [ reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! GRATER_THAN_OR_EQUAL [ reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! INSTANCEOF      [ reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! QUESTION        [ reduce using rule 93 (expr -> LIST LPAREN assignment_list RPAREN EQUALS expr .) ]
  ! LBRACE          [ shift and go to state 92 ]
  ! LOGICAL_AND     [ shift and go to state 95 ]
  ! LOGICAL_OR      [ shift and go to state 96 ]
  ! LOGICAL_XOR     [ shift and go to state 97 ]


state 519

    (128) non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr DOUBLE_ARROW expr .
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    COMMA           reduce using rule 128 (non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr DOUBLE_ARROW expr .)
    RBRACKET        reduce using rule 128 (non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr DOUBLE_ARROW expr .)
    RPAREN          reduce using rule 128 (non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr DOUBLE_ARROW expr .)
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 520

    (127) non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr DOUBLE_ARROW AND . variable
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    IDENTIFIER      shift and go to state 177
    ARRAY           shift and go to state 178
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    variable                       shift and go to state 546
    base_variable_with_function_calls shift and go to state 57
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 521

    (282) encaps_var -> VARIABLE LBRACKET encaps_var_offset RBRACKET .

    DOUBLE_QUOTE    reduce using rule 282 (encaps_var -> VARIABLE LBRACKET encaps_var_offset RBRACKET .)
    VARIABLE        reduce using rule 282 (encaps_var -> VARIABLE LBRACKET encaps_var_offset RBRACKET .)
    DOLLAR_OPEN_CURLY_BRACES reduce using rule 282 (encaps_var -> VARIABLE LBRACKET encaps_var_offset RBRACKET .)
    CURLY_OPEN      reduce using rule 282 (encaps_var -> VARIABLE LBRACKET encaps_var_offset RBRACKET .)
    END_HEREDOC     reduce using rule 282 (encaps_var -> VARIABLE LBRACKET encaps_var_offset RBRACKET .)


state 522

    (284) encaps_var -> DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME LBRACKET expr . RBRACKET RBRACE
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    RBRACKET        shift and go to state 547
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 523

    (245) static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .

    BOOLEAN_AND     reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    BOOLEAN_OR      reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    LOGICAL_AND     reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    LOGICAL_OR      reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    LOGICAL_XOR     reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    AND             reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    OR              reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    XOR             reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    CONCAT          reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    PLUS            reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    MINUS           reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    MUL             reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    DIV             reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    SL              reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    SR              reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    MOD             reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    IS_IDENTICAL    reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    IS_EQUAL_TO     reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    IS_NOT_EQUAL    reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    LESS_THAN       reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    LESS_THAN_OR_EQUAL reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    GREATER_THAN    reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    GRATER_THAN_OR_EQUAL reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    SEMI_COLON      reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    COMMA           reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    RPAREN          reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    DOUBLE_ARROW    reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)
    RBRACKET        reduce using rule 245 (static_scalar -> ARRAY LPAREN static_array_pair_list RPAREN .)


state 524

    (249) static_non_empty_array_pair_list -> static_non_empty_array_pair_list COMMA static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    COMMA           reduce using rule 249 (static_non_empty_array_pair_list -> static_non_empty_array_pair_list COMMA static_expr .)
    RBRACKET        reduce using rule 249 (static_non_empty_array_pair_list -> static_non_empty_array_pair_list COMMA static_expr .)
    RPAREN          reduce using rule 249 (static_non_empty_array_pair_list -> static_non_empty_array_pair_list COMMA static_expr .)
    BOOLEAN_AND     shift and go to state 394
    BOOLEAN_OR      shift and go to state 395
    LOGICAL_AND     shift and go to state 396
    LOGICAL_OR      shift and go to state 397
    LOGICAL_XOR     shift and go to state 398
    AND             shift and go to state 399
    OR              shift and go to state 400
    XOR             shift and go to state 401
    CONCAT          shift and go to state 402
    PLUS            shift and go to state 403
    MINUS           shift and go to state 404
    MUL             shift and go to state 405
    DIV             shift and go to state 406
    SL              shift and go to state 407
    SR              shift and go to state 408
    MOD             shift and go to state 409
    IS_IDENTICAL    shift and go to state 410
    IS_NOT_IDENTICAL shift and go to state 411
    IS_EQUAL_TO     shift and go to state 412
    IS_NOT_EQUAL    shift and go to state 413
    LESS_THAN       shift and go to state 414
    LESS_THAN_OR_EQUAL shift and go to state 415
    GREATER_THAN    shift and go to state 416
    GRATER_THAN_OR_EQUAL shift and go to state 417


state 525

    (251) static_non_empty_array_pair_list -> static_non_empty_array_pair_list COMMA static_scalar . DOUBLE_ARROW static_expr
    (253) static_expr -> static_scalar .

    DOUBLE_ARROW    shift and go to state 548
    BOOLEAN_AND     reduce using rule 253 (static_expr -> static_scalar .)
    BOOLEAN_OR      reduce using rule 253 (static_expr -> static_scalar .)
    LOGICAL_AND     reduce using rule 253 (static_expr -> static_scalar .)
    LOGICAL_OR      reduce using rule 253 (static_expr -> static_scalar .)
    LOGICAL_XOR     reduce using rule 253 (static_expr -> static_scalar .)
    AND             reduce using rule 253 (static_expr -> static_scalar .)
    OR              reduce using rule 253 (static_expr -> static_scalar .)
    XOR             reduce using rule 253 (static_expr -> static_scalar .)
    CONCAT          reduce using rule 253 (static_expr -> static_scalar .)
    PLUS            reduce using rule 253 (static_expr -> static_scalar .)
    MINUS           reduce using rule 253 (static_expr -> static_scalar .)
    MUL             reduce using rule 253 (static_expr -> static_scalar .)
    DIV             reduce using rule 253 (static_expr -> static_scalar .)
    SL              reduce using rule 253 (static_expr -> static_scalar .)
    SR              reduce using rule 253 (static_expr -> static_scalar .)
    MOD             reduce using rule 253 (static_expr -> static_scalar .)
    IS_IDENTICAL    reduce using rule 253 (static_expr -> static_scalar .)
    IS_NOT_IDENTICAL reduce using rule 253 (static_expr -> static_scalar .)
    IS_EQUAL_TO     reduce using rule 253 (static_expr -> static_scalar .)
    IS_NOT_EQUAL    reduce using rule 253 (static_expr -> static_scalar .)
    LESS_THAN       reduce using rule 253 (static_expr -> static_scalar .)
    LESS_THAN_OR_EQUAL reduce using rule 253 (static_expr -> static_scalar .)
    GREATER_THAN    reduce using rule 253 (static_expr -> static_scalar .)
    GRATER_THAN_OR_EQUAL reduce using rule 253 (static_expr -> static_scalar .)
    COMMA           reduce using rule 253 (static_expr -> static_scalar .)
    RBRACKET        reduce using rule 253 (static_expr -> static_scalar .)
    RPAREN          reduce using rule 253 (static_expr -> static_scalar .)


state 526

    (252) static_non_empty_array_pair_list -> static_scalar DOUBLE_ARROW static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    COMMA           reduce using rule 252 (static_non_empty_array_pair_list -> static_scalar DOUBLE_ARROW static_expr .)
    RBRACKET        reduce using rule 252 (static_non_empty_array_pair_list -> static_scalar DOUBLE_ARROW static_expr .)
    RPAREN          reduce using rule 252 (static_non_empty_array_pair_list -> static_scalar DOUBLE_ARROW static_expr .)
    BOOLEAN_AND     shift and go to state 394
    BOOLEAN_OR      shift and go to state 395
    LOGICAL_AND     shift and go to state 396
    LOGICAL_OR      shift and go to state 397
    LOGICAL_XOR     shift and go to state 398
    AND             shift and go to state 399
    OR              shift and go to state 400
    XOR             shift and go to state 401
    CONCAT          shift and go to state 402
    PLUS            shift and go to state 403
    MINUS           shift and go to state 404
    MUL             shift and go to state 405
    DIV             shift and go to state 406
    SL              shift and go to state 407
    SR              shift and go to state 408
    MOD             shift and go to state 409
    IS_IDENTICAL    shift and go to state 410
    IS_NOT_IDENTICAL shift and go to state 411
    IS_EQUAL_TO     shift and go to state 412
    IS_NOT_EQUAL    shift and go to state 413
    LESS_THAN       shift and go to state 414
    LESS_THAN_OR_EQUAL shift and go to state 415
    GREATER_THAN    shift and go to state 416
    GRATER_THAN_OR_EQUAL shift and go to state 417


state 527

    (18) statement -> IF LPAREN expr RPAREN statement elseif_list else_single .

    HALT_COMPILER   reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    CONST           reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    LBRACE          reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    IF              reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    WHILE           reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    DO              reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    FOR             reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    SWITCH          reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    BREAK           reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    CONTINUE        reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    RETURN          reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    GLOBAL          reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    STATIC          reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    ECHO            reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    INLINE_HTML     reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    UNSET           reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    SEMI_COLON      reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    FUNCTION        reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    CLONE           reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    LIST            reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    ARRAY           reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    LBRACKET        reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    PLUS            reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    MINUS           reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    NOT             reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    BOOLEAN_NOT     reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    INC             reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    DEC             reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    INT_CAST        reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    ARRAY_CAST      reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    STRING_CAST     reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    DOUBLE_CAST     reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    BOOL_CAST       reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    UNSET_CAST      reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    BINARY_CAST     reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    ISSET           reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    EMPTY           reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    EVAL            reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    INCLUDE         reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    INCLUDE_ONCE    reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    REQUIRE         reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    REQUIRE_ONCE    reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    PRINT           reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    AT              reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    LPAREN          reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    DOUBLE_QUOTE    reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    IDENTIFIER      reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    EXIT            reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    DIE             reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    INT_NUMBER      reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    FLOAT_NUMBER    reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    CONSTANT_ENCAPSED_STRING reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    FUNC_C          reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    METHOD_C        reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    LINE            reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    FILE            reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    DIR             reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    START_HEREDOC   reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    START_NOWDOC    reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    DOLLAR          reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    VARIABLE        reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    $end            reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    RBRACE          reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    YIELD           reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    ELSEIF          reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    ELSE            reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    ENDIF           reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    ENDWHILE        reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    ENDSWITCH       reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    ENDFOR          reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    CASE            reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)
    DEFAULT         reduce using rule 18 (statement -> IF LPAREN expr RPAREN statement elseif_list else_single .)


state 528

    (38) elseif_list -> elseif_list ELSEIF . LPAREN expr RPAREN statement

    LPAREN          shift and go to state 549


state 529

    (39) else_single -> empty .

    ELSEIF          reduce using rule 39 (else_single -> empty .)
    ELSE            reduce using rule 39 (else_single -> empty .)
    HALT_COMPILER   reduce using rule 39 (else_single -> empty .)
    CONST           reduce using rule 39 (else_single -> empty .)
    LBRACE          reduce using rule 39 (else_single -> empty .)
    IF              reduce using rule 39 (else_single -> empty .)
    WHILE           reduce using rule 39 (else_single -> empty .)
    DO              reduce using rule 39 (else_single -> empty .)
    FOR             reduce using rule 39 (else_single -> empty .)
    SWITCH          reduce using rule 39 (else_single -> empty .)
    BREAK           reduce using rule 39 (else_single -> empty .)
    CONTINUE        reduce using rule 39 (else_single -> empty .)
    RETURN          reduce using rule 39 (else_single -> empty .)
    GLOBAL          reduce using rule 39 (else_single -> empty .)
    STATIC          reduce using rule 39 (else_single -> empty .)
    ECHO            reduce using rule 39 (else_single -> empty .)
    INLINE_HTML     reduce using rule 39 (else_single -> empty .)
    UNSET           reduce using rule 39 (else_single -> empty .)
    SEMI_COLON      reduce using rule 39 (else_single -> empty .)
    FUNCTION        reduce using rule 39 (else_single -> empty .)
    CLONE           reduce using rule 39 (else_single -> empty .)
    LIST            reduce using rule 39 (else_single -> empty .)
    ARRAY           reduce using rule 39 (else_single -> empty .)
    LBRACKET        reduce using rule 39 (else_single -> empty .)
    PLUS            reduce using rule 39 (else_single -> empty .)
    MINUS           reduce using rule 39 (else_single -> empty .)
    NOT             reduce using rule 39 (else_single -> empty .)
    BOOLEAN_NOT     reduce using rule 39 (else_single -> empty .)
    INC             reduce using rule 39 (else_single -> empty .)
    DEC             reduce using rule 39 (else_single -> empty .)
    INT_CAST        reduce using rule 39 (else_single -> empty .)
    ARRAY_CAST      reduce using rule 39 (else_single -> empty .)
    STRING_CAST     reduce using rule 39 (else_single -> empty .)
    DOUBLE_CAST     reduce using rule 39 (else_single -> empty .)
    BOOL_CAST       reduce using rule 39 (else_single -> empty .)
    UNSET_CAST      reduce using rule 39 (else_single -> empty .)
    BINARY_CAST     reduce using rule 39 (else_single -> empty .)
    ISSET           reduce using rule 39 (else_single -> empty .)
    EMPTY           reduce using rule 39 (else_single -> empty .)
    EVAL            reduce using rule 39 (else_single -> empty .)
    INCLUDE         reduce using rule 39 (else_single -> empty .)
    INCLUDE_ONCE    reduce using rule 39 (else_single -> empty .)
    REQUIRE         reduce using rule 39 (else_single -> empty .)
    REQUIRE_ONCE    reduce using rule 39 (else_single -> empty .)
    PRINT           reduce using rule 39 (else_single -> empty .)
    AT              reduce using rule 39 (else_single -> empty .)
    LPAREN          reduce using rule 39 (else_single -> empty .)
    DOUBLE_QUOTE    reduce using rule 39 (else_single -> empty .)
    IDENTIFIER      reduce using rule 39 (else_single -> empty .)
    EXIT            reduce using rule 39 (else_single -> empty .)
    DIE             reduce using rule 39 (else_single -> empty .)
    INT_NUMBER      reduce using rule 39 (else_single -> empty .)
    FLOAT_NUMBER    reduce using rule 39 (else_single -> empty .)
    CONSTANT_ENCAPSED_STRING reduce using rule 39 (else_single -> empty .)
    FUNC_C          reduce using rule 39 (else_single -> empty .)
    METHOD_C        reduce using rule 39 (else_single -> empty .)
    LINE            reduce using rule 39 (else_single -> empty .)
    FILE            reduce using rule 39 (else_single -> empty .)
    DIR             reduce using rule 39 (else_single -> empty .)
    START_HEREDOC   reduce using rule 39 (else_single -> empty .)
    START_NOWDOC    reduce using rule 39 (else_single -> empty .)
    DOLLAR          reduce using rule 39 (else_single -> empty .)
    VARIABLE        reduce using rule 39 (else_single -> empty .)
    $end            reduce using rule 39 (else_single -> empty .)
    RBRACE          reduce using rule 39 (else_single -> empty .)
    YIELD           reduce using rule 39 (else_single -> empty .)
    ENDIF           reduce using rule 39 (else_single -> empty .)
    ENDWHILE        reduce using rule 39 (else_single -> empty .)
    ENDSWITCH       reduce using rule 39 (else_single -> empty .)
    ENDFOR          reduce using rule 39 (else_single -> empty .)
    CASE            reduce using rule 39 (else_single -> empty .)
    DEFAULT         reduce using rule 39 (else_single -> empty .)


state 530

    (40) else_single -> ELSE . statement
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list else_single
    (19) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (20) statement -> . WHILE LPAREN expr RPAREN while_statement
    (21) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (22) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (23) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (24) statement -> . BREAK SEMI_COLON
    (25) statement -> . BREAK expr SEMI_COLON
    (26) statement -> . CONTINUE SEMI_COLON
    (27) statement -> . CONTINUE expr SEMI_COLON
    (28) statement -> . RETURN SEMI_COLON
    (29) statement -> . RETURN expr SEMI_COLON
    (30) statement -> . GLOBAL global_var_list SEMI_COLON
    (31) statement -> . STATIC static_var_list SEMI_COLON
    (32) statement -> . ECHO echo_expr_list SEMI_COLON
    (33) statement -> . INLINE_HTML
    (34) statement -> . expr SEMI_COLON
    (35) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (36) statement -> . SEMI_COLON
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    statement                      shift and go to state 550
    expr                           shift and go to state 13
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 531

    (19) statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list . new_else_single ENDIF SEMI_COLON
    (42) new_elseif_list -> new_elseif_list . ELSEIF LPAREN expr RPAREN COLON inner_statement_list
    (43) new_else_single -> . empty
    (44) new_else_single -> . ELSE COLON inner_statement_list
    (289) empty -> .

    ELSEIF          shift and go to state 552
    ELSE            shift and go to state 554
    ENDIF           reduce using rule 289 (empty -> .)

    new_else_single                shift and go to state 551
    empty                          shift and go to state 553

state 532

    (41) new_elseif_list -> empty .

    ELSEIF          reduce using rule 41 (new_elseif_list -> empty .)
    ELSE            reduce using rule 41 (new_elseif_list -> empty .)
    ENDIF           reduce using rule 41 (new_elseif_list -> empty .)


state 533

    (46) while_statement -> COLON inner_statement_list ENDWHILE . SEMI_COLON

    SEMI_COLON      shift and go to state 555


state 534

    (21) statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .

    HALT_COMPILER   reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    CONST           reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    LBRACE          reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    IF              reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    WHILE           reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    DO              reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    FOR             reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    SWITCH          reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    BREAK           reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    CONTINUE        reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    RETURN          reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    GLOBAL          reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    STATIC          reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    ECHO            reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    INLINE_HTML     reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    UNSET           reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    SEMI_COLON      reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    FUNCTION        reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    CLONE           reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    LIST            reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    ARRAY           reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    LBRACKET        reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    PLUS            reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    MINUS           reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    NOT             reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    INC             reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    DEC             reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    INT_CAST        reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    ARRAY_CAST      reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    STRING_CAST     reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    BOOL_CAST       reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    UNSET_CAST      reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    BINARY_CAST     reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    ISSET           reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    EMPTY           reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    EVAL            reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    INCLUDE         reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    REQUIRE         reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    PRINT           reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    AT              reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    LPAREN          reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    IDENTIFIER      reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    EXIT            reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    DIE             reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    INT_NUMBER      reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    FUNC_C          reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    METHOD_C        reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    LINE            reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    FILE            reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    DIR             reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    START_HEREDOC   reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    START_NOWDOC    reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    DOLLAR          reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    VARIABLE        reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    $end            reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    RBRACE          reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    YIELD           reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    ELSEIF          reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    ELSE            reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    ENDIF           reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    ENDWHILE        reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    ENDSWITCH       reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    ENDFOR          reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    CASE            reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)
    DEFAULT         reduce using rule 21 (statement -> DO statement WHILE LPAREN expr RPAREN SEMI_COLON .)


state 535

    (22) statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr . RPAREN for_statement

    RPAREN          shift and go to state 556


state 536

    (53) switch_case_list -> LBRACE case_list RBRACE .

    HALT_COMPILER   reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    CONST           reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    LBRACE          reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    IF              reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    WHILE           reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    DO              reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    FOR             reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    SWITCH          reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    BREAK           reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    CONTINUE        reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    RETURN          reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    GLOBAL          reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    STATIC          reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    ECHO            reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    INLINE_HTML     reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    UNSET           reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    SEMI_COLON      reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    FUNCTION        reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    CLONE           reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    LIST            reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    ARRAY           reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    LBRACKET        reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    PLUS            reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    MINUS           reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    NOT             reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    BOOLEAN_NOT     reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    INC             reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    DEC             reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    INT_CAST        reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    ARRAY_CAST      reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    STRING_CAST     reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    DOUBLE_CAST     reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    BOOL_CAST       reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    UNSET_CAST      reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    BINARY_CAST     reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    ISSET           reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    EMPTY           reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    EVAL            reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    INCLUDE         reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    INCLUDE_ONCE    reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    REQUIRE         reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    REQUIRE_ONCE    reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    PRINT           reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    AT              reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    LPAREN          reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    DOUBLE_QUOTE    reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    IDENTIFIER      reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    EXIT            reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    DIE             reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    INT_NUMBER      reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    FLOAT_NUMBER    reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    CONSTANT_ENCAPSED_STRING reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    FUNC_C          reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    METHOD_C        reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    LINE            reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    FILE            reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    DIR             reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    START_HEREDOC   reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    START_NOWDOC    reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    DOLLAR          reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    VARIABLE        reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    $end            reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    RBRACE          reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    YIELD           reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    ELSEIF          reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    ELSE            reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    ENDIF           reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    ENDWHILE        reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    ENDSWITCH       reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    ENDFOR          reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    CASE            reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)
    DEFAULT         reduce using rule 53 (switch_case_list -> LBRACE case_list RBRACE .)


state 537

    (54) switch_case_list -> LBRACE SEMI_COLON case_list . RBRACE

    RBRACE          shift and go to state 557


state 538

    (58) case_list -> case_list_no_default CASE . expr case_separator inner_statement_list
    (61) case_list_no_default -> case_list_no_default CASE . expr case_separator inner_statement_list
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 558
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 539

    (59) case_list -> case_list_no_default DEFAULT . case_separator inner_statement_list
    (62) case_separator -> . COLON
    (63) case_separator -> . SEMI_COLON

    COLON           shift and go to state 560
    SEMI_COLON      shift and go to state 561

    case_separator                 shift and go to state 559

state 540

    (55) switch_case_list -> COLON case_list ENDSWITCH . SEMI_COLON

    SEMI_COLON      shift and go to state 562


state 541

    (56) switch_case_list -> COLON SEMI_COLON case_list . ENDSWITCH SEMI_COLON

    ENDSWITCH       shift and go to state 563


state 542

    (78) function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE . inner_statement_list RBRACE
    (11) inner_statement_list -> . inner_statement_list inner_statement
    (12) inner_statement_list -> . empty
    (289) empty -> .

    RBRACE          reduce using rule 289 (empty -> .)
    YIELD           reduce using rule 289 (empty -> .)
    LBRACE          reduce using rule 289 (empty -> .)
    IF              reduce using rule 289 (empty -> .)
    WHILE           reduce using rule 289 (empty -> .)
    DO              reduce using rule 289 (empty -> .)
    FOR             reduce using rule 289 (empty -> .)
    SWITCH          reduce using rule 289 (empty -> .)
    BREAK           reduce using rule 289 (empty -> .)
    CONTINUE        reduce using rule 289 (empty -> .)
    RETURN          reduce using rule 289 (empty -> .)
    GLOBAL          reduce using rule 289 (empty -> .)
    STATIC          reduce using rule 289 (empty -> .)
    ECHO            reduce using rule 289 (empty -> .)
    INLINE_HTML     reduce using rule 289 (empty -> .)
    UNSET           reduce using rule 289 (empty -> .)
    SEMI_COLON      reduce using rule 289 (empty -> .)
    FUNCTION        reduce using rule 289 (empty -> .)
    CLONE           reduce using rule 289 (empty -> .)
    LIST            reduce using rule 289 (empty -> .)
    ARRAY           reduce using rule 289 (empty -> .)
    LBRACKET        reduce using rule 289 (empty -> .)
    PLUS            reduce using rule 289 (empty -> .)
    MINUS           reduce using rule 289 (empty -> .)
    NOT             reduce using rule 289 (empty -> .)
    BOOLEAN_NOT     reduce using rule 289 (empty -> .)
    INC             reduce using rule 289 (empty -> .)
    DEC             reduce using rule 289 (empty -> .)
    INT_CAST        reduce using rule 289 (empty -> .)
    ARRAY_CAST      reduce using rule 289 (empty -> .)
    STRING_CAST     reduce using rule 289 (empty -> .)
    DOUBLE_CAST     reduce using rule 289 (empty -> .)
    BOOL_CAST       reduce using rule 289 (empty -> .)
    UNSET_CAST      reduce using rule 289 (empty -> .)
    BINARY_CAST     reduce using rule 289 (empty -> .)
    ISSET           reduce using rule 289 (empty -> .)
    EMPTY           reduce using rule 289 (empty -> .)
    EVAL            reduce using rule 289 (empty -> .)
    INCLUDE         reduce using rule 289 (empty -> .)
    INCLUDE_ONCE    reduce using rule 289 (empty -> .)
    REQUIRE         reduce using rule 289 (empty -> .)
    REQUIRE_ONCE    reduce using rule 289 (empty -> .)
    PRINT           reduce using rule 289 (empty -> .)
    AT              reduce using rule 289 (empty -> .)
    LPAREN          reduce using rule 289 (empty -> .)
    DOUBLE_QUOTE    reduce using rule 289 (empty -> .)
    IDENTIFIER      reduce using rule 289 (empty -> .)
    EXIT            reduce using rule 289 (empty -> .)
    DIE             reduce using rule 289 (empty -> .)
    INT_NUMBER      reduce using rule 289 (empty -> .)
    FLOAT_NUMBER    reduce using rule 289 (empty -> .)
    CONSTANT_ENCAPSED_STRING reduce using rule 289 (empty -> .)
    FUNC_C          reduce using rule 289 (empty -> .)
    METHOD_C        reduce using rule 289 (empty -> .)
    LINE            reduce using rule 289 (empty -> .)
    FILE            reduce using rule 289 (empty -> .)
    DIR             reduce using rule 289 (empty -> .)
    START_HEREDOC   reduce using rule 289 (empty -> .)
    START_NOWDOC    reduce using rule 289 (empty -> .)
    DOLLAR          reduce using rule 289 (empty -> .)
    VARIABLE        reduce using rule 289 (empty -> .)

    inner_statement_list           shift and go to state 564
    empty                          shift and go to state 89

state 543

    (137) expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE . inner_statement_list RBRACE
    (11) inner_statement_list -> . inner_statement_list inner_statement
    (12) inner_statement_list -> . empty
    (289) empty -> .

    RBRACE          reduce using rule 289 (empty -> .)
    YIELD           reduce using rule 289 (empty -> .)
    LBRACE          reduce using rule 289 (empty -> .)
    IF              reduce using rule 289 (empty -> .)
    WHILE           reduce using rule 289 (empty -> .)
    DO              reduce using rule 289 (empty -> .)
    FOR             reduce using rule 289 (empty -> .)
    SWITCH          reduce using rule 289 (empty -> .)
    BREAK           reduce using rule 289 (empty -> .)
    CONTINUE        reduce using rule 289 (empty -> .)
    RETURN          reduce using rule 289 (empty -> .)
    GLOBAL          reduce using rule 289 (empty -> .)
    STATIC          reduce using rule 289 (empty -> .)
    ECHO            reduce using rule 289 (empty -> .)
    INLINE_HTML     reduce using rule 289 (empty -> .)
    UNSET           reduce using rule 289 (empty -> .)
    SEMI_COLON      reduce using rule 289 (empty -> .)
    FUNCTION        reduce using rule 289 (empty -> .)
    CLONE           reduce using rule 289 (empty -> .)
    LIST            reduce using rule 289 (empty -> .)
    ARRAY           reduce using rule 289 (empty -> .)
    LBRACKET        reduce using rule 289 (empty -> .)
    PLUS            reduce using rule 289 (empty -> .)
    MINUS           reduce using rule 289 (empty -> .)
    NOT             reduce using rule 289 (empty -> .)
    BOOLEAN_NOT     reduce using rule 289 (empty -> .)
    INC             reduce using rule 289 (empty -> .)
    DEC             reduce using rule 289 (empty -> .)
    INT_CAST        reduce using rule 289 (empty -> .)
    ARRAY_CAST      reduce using rule 289 (empty -> .)
    STRING_CAST     reduce using rule 289 (empty -> .)
    DOUBLE_CAST     reduce using rule 289 (empty -> .)
    BOOL_CAST       reduce using rule 289 (empty -> .)
    UNSET_CAST      reduce using rule 289 (empty -> .)
    BINARY_CAST     reduce using rule 289 (empty -> .)
    ISSET           reduce using rule 289 (empty -> .)
    EMPTY           reduce using rule 289 (empty -> .)
    EVAL            reduce using rule 289 (empty -> .)
    INCLUDE         reduce using rule 289 (empty -> .)
    INCLUDE_ONCE    reduce using rule 289 (empty -> .)
    REQUIRE         reduce using rule 289 (empty -> .)
    REQUIRE_ONCE    reduce using rule 289 (empty -> .)
    PRINT           reduce using rule 289 (empty -> .)
    AT              reduce using rule 289 (empty -> .)
    LPAREN          reduce using rule 289 (empty -> .)
    DOUBLE_QUOTE    reduce using rule 289 (empty -> .)
    IDENTIFIER      reduce using rule 289 (empty -> .)
    EXIT            reduce using rule 289 (empty -> .)
    DIE             reduce using rule 289 (empty -> .)
    INT_NUMBER      reduce using rule 289 (empty -> .)
    FLOAT_NUMBER    reduce using rule 289 (empty -> .)
    CONSTANT_ENCAPSED_STRING reduce using rule 289 (empty -> .)
    FUNC_C          reduce using rule 289 (empty -> .)
    METHOD_C        reduce using rule 289 (empty -> .)
    LINE            reduce using rule 289 (empty -> .)
    FILE            reduce using rule 289 (empty -> .)
    DIR             reduce using rule 289 (empty -> .)
    START_HEREDOC   reduce using rule 289 (empty -> .)
    START_NOWDOC    reduce using rule 289 (empty -> .)
    DOLLAR          reduce using rule 289 (empty -> .)
    VARIABLE        reduce using rule 289 (empty -> .)

    inner_statement_list           shift and go to state 565
    empty                          shift and go to state 89

state 544

    (138) lexical_vars -> USE LPAREN . lexical_var_list RPAREN
    (140) lexical_var_list -> . lexical_var_list COMMA AND VARIABLE
    (141) lexical_var_list -> . lexical_var_list COMMA VARIABLE
    (142) lexical_var_list -> . AND VARIABLE
    (143) lexical_var_list -> . VARIABLE

    AND             shift and go to state 567
    VARIABLE        shift and go to state 568

    lexical_var_list               shift and go to state 566

state 545

    (88) parameter -> AND VARIABLE EQUALS static_scalar .

    COMMA           reduce using rule 88 (parameter -> AND VARIABLE EQUALS static_scalar .)
    RPAREN          reduce using rule 88 (parameter -> AND VARIABLE EQUALS static_scalar .)


state 546

    (127) non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr DOUBLE_ARROW AND variable .
    (111) variable -> variable . LBRACKET dim_offset RBRACKET

    COMMA           reduce using rule 127 (non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr DOUBLE_ARROW AND variable .)
    RBRACKET        reduce using rule 127 (non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr DOUBLE_ARROW AND variable .)
    RPAREN          reduce using rule 127 (non_empty_array_pair_list -> non_empty_array_pair_list COMMA expr DOUBLE_ARROW AND variable .)
    LBRACKET        shift and go to state 160


state 547

    (284) encaps_var -> DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME LBRACKET expr RBRACKET . RBRACE

    RBRACE          shift and go to state 569


state 548

    (251) static_non_empty_array_pair_list -> static_non_empty_array_pair_list COMMA static_scalar DOUBLE_ARROW . static_expr
    (253) static_expr -> . static_scalar
    (254) static_expr -> . static_expr BOOLEAN_AND static_expr
    (255) static_expr -> . static_expr BOOLEAN_OR static_expr
    (256) static_expr -> . static_expr LOGICAL_AND static_expr
    (257) static_expr -> . static_expr LOGICAL_OR static_expr
    (258) static_expr -> . static_expr LOGICAL_XOR static_expr
    (259) static_expr -> . static_expr AND static_expr
    (260) static_expr -> . static_expr OR static_expr
    (261) static_expr -> . static_expr XOR static_expr
    (262) static_expr -> . static_expr CONCAT static_expr
    (263) static_expr -> . static_expr PLUS static_expr
    (264) static_expr -> . static_expr MINUS static_expr
    (265) static_expr -> . static_expr MUL static_expr
    (266) static_expr -> . static_expr DIV static_expr
    (267) static_expr -> . static_expr SL static_expr
    (268) static_expr -> . static_expr SR static_expr
    (269) static_expr -> . static_expr MOD static_expr
    (270) static_expr -> . static_expr IS_IDENTICAL static_expr
    (271) static_expr -> . static_expr IS_NOT_IDENTICAL static_expr
    (272) static_expr -> . static_expr IS_EQUAL_TO static_expr
    (273) static_expr -> . static_expr IS_NOT_EQUAL static_expr
    (274) static_expr -> . static_expr LESS_THAN static_expr
    (275) static_expr -> . static_expr LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> . static_expr GREATER_THAN static_expr
    (277) static_expr -> . static_expr GRATER_THAN_OR_EQUAL static_expr
    (278) static_expr -> . LPAREN static_expr RPAREN
    (234) static_scalar -> . common_scalar
    (235) static_scalar -> . DOUBLE_QUOTE DOUBLE_QUOTE
    (236) static_scalar -> . DOUBLE_QUOTE ENCAPSED_AND_WHITESPACE DOUBLE_QUOTE
    (237) static_scalar -> . static_heredoc
    (238) static_scalar -> . nowdoc
    (242) static_scalar -> . IDENTIFIER
    (243) static_scalar -> . PLUS static_scalar
    (244) static_scalar -> . MINUS static_scalar
    (245) static_scalar -> . ARRAY LPAREN static_array_pair_list RPAREN
    (246) static_scalar -> . LBRACKET static_array_pair_list RBRACKET
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (239) static_heredoc -> . START_HEREDOC multiple_encapsed END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC

    LPAREN          shift and go to state 334
    DOUBLE_QUOTE    shift and go to state 336
    IDENTIFIER      shift and go to state 329
    PLUS            shift and go to state 332
    MINUS           shift and go to state 333
    ARRAY           shift and go to state 339
    LBRACKET        shift and go to state 340
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 341
    START_NOWDOC    shift and go to state 75

    static_scalar                  shift and go to state 331
    static_expr                    shift and go to state 570
    common_scalar                  shift and go to state 335
    static_heredoc                 shift and go to state 337
    nowdoc                         shift and go to state 338

state 549

    (38) elseif_list -> elseif_list ELSEIF LPAREN . expr RPAREN statement
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 571
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 550

    (40) else_single -> ELSE statement .

    ELSEIF          reduce using rule 40 (else_single -> ELSE statement .)
    ELSE            reduce using rule 40 (else_single -> ELSE statement .)
    HALT_COMPILER   reduce using rule 40 (else_single -> ELSE statement .)
    CONST           reduce using rule 40 (else_single -> ELSE statement .)
    LBRACE          reduce using rule 40 (else_single -> ELSE statement .)
    IF              reduce using rule 40 (else_single -> ELSE statement .)
    WHILE           reduce using rule 40 (else_single -> ELSE statement .)
    DO              reduce using rule 40 (else_single -> ELSE statement .)
    FOR             reduce using rule 40 (else_single -> ELSE statement .)
    SWITCH          reduce using rule 40 (else_single -> ELSE statement .)
    BREAK           reduce using rule 40 (else_single -> ELSE statement .)
    CONTINUE        reduce using rule 40 (else_single -> ELSE statement .)
    RETURN          reduce using rule 40 (else_single -> ELSE statement .)
    GLOBAL          reduce using rule 40 (else_single -> ELSE statement .)
    STATIC          reduce using rule 40 (else_single -> ELSE statement .)
    ECHO            reduce using rule 40 (else_single -> ELSE statement .)
    INLINE_HTML     reduce using rule 40 (else_single -> ELSE statement .)
    UNSET           reduce using rule 40 (else_single -> ELSE statement .)
    SEMI_COLON      reduce using rule 40 (else_single -> ELSE statement .)
    FUNCTION        reduce using rule 40 (else_single -> ELSE statement .)
    CLONE           reduce using rule 40 (else_single -> ELSE statement .)
    LIST            reduce using rule 40 (else_single -> ELSE statement .)
    ARRAY           reduce using rule 40 (else_single -> ELSE statement .)
    LBRACKET        reduce using rule 40 (else_single -> ELSE statement .)
    PLUS            reduce using rule 40 (else_single -> ELSE statement .)
    MINUS           reduce using rule 40 (else_single -> ELSE statement .)
    NOT             reduce using rule 40 (else_single -> ELSE statement .)
    BOOLEAN_NOT     reduce using rule 40 (else_single -> ELSE statement .)
    INC             reduce using rule 40 (else_single -> ELSE statement .)
    DEC             reduce using rule 40 (else_single -> ELSE statement .)
    INT_CAST        reduce using rule 40 (else_single -> ELSE statement .)
    ARRAY_CAST      reduce using rule 40 (else_single -> ELSE statement .)
    STRING_CAST     reduce using rule 40 (else_single -> ELSE statement .)
    DOUBLE_CAST     reduce using rule 40 (else_single -> ELSE statement .)
    BOOL_CAST       reduce using rule 40 (else_single -> ELSE statement .)
    UNSET_CAST      reduce using rule 40 (else_single -> ELSE statement .)
    BINARY_CAST     reduce using rule 40 (else_single -> ELSE statement .)
    ISSET           reduce using rule 40 (else_single -> ELSE statement .)
    EMPTY           reduce using rule 40 (else_single -> ELSE statement .)
    EVAL            reduce using rule 40 (else_single -> ELSE statement .)
    INCLUDE         reduce using rule 40 (else_single -> ELSE statement .)
    INCLUDE_ONCE    reduce using rule 40 (else_single -> ELSE statement .)
    REQUIRE         reduce using rule 40 (else_single -> ELSE statement .)
    REQUIRE_ONCE    reduce using rule 40 (else_single -> ELSE statement .)
    PRINT           reduce using rule 40 (else_single -> ELSE statement .)
    AT              reduce using rule 40 (else_single -> ELSE statement .)
    LPAREN          reduce using rule 40 (else_single -> ELSE statement .)
    DOUBLE_QUOTE    reduce using rule 40 (else_single -> ELSE statement .)
    IDENTIFIER      reduce using rule 40 (else_single -> ELSE statement .)
    EXIT            reduce using rule 40 (else_single -> ELSE statement .)
    DIE             reduce using rule 40 (else_single -> ELSE statement .)
    INT_NUMBER      reduce using rule 40 (else_single -> ELSE statement .)
    FLOAT_NUMBER    reduce using rule 40 (else_single -> ELSE statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 40 (else_single -> ELSE statement .)
    FUNC_C          reduce using rule 40 (else_single -> ELSE statement .)
    METHOD_C        reduce using rule 40 (else_single -> ELSE statement .)
    LINE            reduce using rule 40 (else_single -> ELSE statement .)
    FILE            reduce using rule 40 (else_single -> ELSE statement .)
    DIR             reduce using rule 40 (else_single -> ELSE statement .)
    START_HEREDOC   reduce using rule 40 (else_single -> ELSE statement .)
    START_NOWDOC    reduce using rule 40 (else_single -> ELSE statement .)
    DOLLAR          reduce using rule 40 (else_single -> ELSE statement .)
    VARIABLE        reduce using rule 40 (else_single -> ELSE statement .)
    $end            reduce using rule 40 (else_single -> ELSE statement .)
    RBRACE          reduce using rule 40 (else_single -> ELSE statement .)
    YIELD           reduce using rule 40 (else_single -> ELSE statement .)
    ENDIF           reduce using rule 40 (else_single -> ELSE statement .)
    ENDWHILE        reduce using rule 40 (else_single -> ELSE statement .)
    ENDSWITCH       reduce using rule 40 (else_single -> ELSE statement .)
    ENDFOR          reduce using rule 40 (else_single -> ELSE statement .)
    CASE            reduce using rule 40 (else_single -> ELSE statement .)
    DEFAULT         reduce using rule 40 (else_single -> ELSE statement .)


state 551

    (19) statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single . ENDIF SEMI_COLON

    ENDIF           shift and go to state 572


state 552

    (42) new_elseif_list -> new_elseif_list ELSEIF . LPAREN expr RPAREN COLON inner_statement_list

    LPAREN          shift and go to state 573


state 553

    (43) new_else_single -> empty .

    ENDIF           reduce using rule 43 (new_else_single -> empty .)


state 554

    (44) new_else_single -> ELSE . COLON inner_statement_list

    COLON           shift and go to state 574


state 555

    (46) while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .

    ELSEIF          reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    ELSE            reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    HALT_COMPILER   reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    CONST           reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    LBRACE          reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    IF              reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    WHILE           reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    DO              reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    FOR             reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    SWITCH          reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    BREAK           reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    CONTINUE        reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    RETURN          reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    GLOBAL          reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    STATIC          reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    ECHO            reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    INLINE_HTML     reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    UNSET           reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    SEMI_COLON      reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    FUNCTION        reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    CLONE           reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    LIST            reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    ARRAY           reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    LBRACKET        reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    PLUS            reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    MINUS           reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    NOT             reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    INC             reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    DEC             reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    INT_CAST        reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    ARRAY_CAST      reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    STRING_CAST     reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    BOOL_CAST       reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    UNSET_CAST      reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    BINARY_CAST     reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    ISSET           reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    EMPTY           reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    EVAL            reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    INCLUDE         reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    REQUIRE         reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    PRINT           reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    AT              reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    LPAREN          reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    IDENTIFIER      reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    EXIT            reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    DIE             reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    INT_NUMBER      reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    FUNC_C          reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    METHOD_C        reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    LINE            reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    FILE            reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    DIR             reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    START_HEREDOC   reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    START_NOWDOC    reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    DOLLAR          reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    VARIABLE        reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    $end            reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    RBRACE          reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    YIELD           reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    ENDIF           reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    ENDWHILE        reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    ENDSWITCH       reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    ENDFOR          reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    CASE            reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)
    DEFAULT         reduce using rule 46 (while_statement -> COLON inner_statement_list ENDWHILE SEMI_COLON .)


state 556

    (22) statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN . for_statement
    (51) for_statement -> . statement
    (52) for_statement -> . COLON inner_statement_list ENDFOR SEMI_COLON
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list else_single
    (19) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (20) statement -> . WHILE LPAREN expr RPAREN while_statement
    (21) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (22) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (23) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (24) statement -> . BREAK SEMI_COLON
    (25) statement -> . BREAK expr SEMI_COLON
    (26) statement -> . CONTINUE SEMI_COLON
    (27) statement -> . CONTINUE expr SEMI_COLON
    (28) statement -> . RETURN SEMI_COLON
    (29) statement -> . RETURN expr SEMI_COLON
    (30) statement -> . GLOBAL global_var_list SEMI_COLON
    (31) statement -> . STATIC static_var_list SEMI_COLON
    (32) statement -> . ECHO echo_expr_list SEMI_COLON
    (33) statement -> . INLINE_HTML
    (34) statement -> . expr SEMI_COLON
    (35) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (36) statement -> . SEMI_COLON
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    COLON           shift and go to state 577
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    for_statement                  shift and go to state 575
    statement                      shift and go to state 576
    expr                           shift and go to state 13
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 557

    (54) switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .

    HALT_COMPILER   reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    CONST           reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    LBRACE          reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    IF              reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    WHILE           reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    DO              reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    FOR             reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    SWITCH          reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    BREAK           reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    CONTINUE        reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    RETURN          reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    GLOBAL          reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    STATIC          reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    ECHO            reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    INLINE_HTML     reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    UNSET           reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    SEMI_COLON      reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    FUNCTION        reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    CLONE           reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    LIST            reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    ARRAY           reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    LBRACKET        reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    PLUS            reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    MINUS           reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    NOT             reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    BOOLEAN_NOT     reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    INC             reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    DEC             reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    INT_CAST        reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    ARRAY_CAST      reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    STRING_CAST     reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    DOUBLE_CAST     reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    BOOL_CAST       reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    UNSET_CAST      reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    BINARY_CAST     reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    ISSET           reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    EMPTY           reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    EVAL            reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    INCLUDE         reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    INCLUDE_ONCE    reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    REQUIRE         reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    REQUIRE_ONCE    reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    PRINT           reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    AT              reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    LPAREN          reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    DOUBLE_QUOTE    reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    IDENTIFIER      reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    EXIT            reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    DIE             reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    INT_NUMBER      reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    FLOAT_NUMBER    reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    CONSTANT_ENCAPSED_STRING reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    FUNC_C          reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    METHOD_C        reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    LINE            reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    FILE            reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    DIR             reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    START_HEREDOC   reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    START_NOWDOC    reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    DOLLAR          reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    VARIABLE        reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    $end            reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    RBRACE          reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    YIELD           reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    ELSEIF          reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    ELSE            reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    ENDIF           reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    ENDWHILE        reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    ENDSWITCH       reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    ENDFOR          reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    CASE            reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)
    DEFAULT         reduce using rule 54 (switch_case_list -> LBRACE SEMI_COLON case_list RBRACE .)


state 558

    (58) case_list -> case_list_no_default CASE expr . case_separator inner_statement_list
    (61) case_list_no_default -> case_list_no_default CASE expr . case_separator inner_statement_list
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr
    (62) case_separator -> . COLON
    (63) case_separator -> . SEMI_COLON

    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118
    COLON           shift and go to state 560
    SEMI_COLON      shift and go to state 561

    case_separator                 shift and go to state 578

state 559

    (59) case_list -> case_list_no_default DEFAULT case_separator . inner_statement_list
    (11) inner_statement_list -> . inner_statement_list inner_statement
    (12) inner_statement_list -> . empty
    (289) empty -> .

    YIELD           reduce using rule 289 (empty -> .)
    LBRACE          reduce using rule 289 (empty -> .)
    IF              reduce using rule 289 (empty -> .)
    WHILE           reduce using rule 289 (empty -> .)
    DO              reduce using rule 289 (empty -> .)
    FOR             reduce using rule 289 (empty -> .)
    SWITCH          reduce using rule 289 (empty -> .)
    BREAK           reduce using rule 289 (empty -> .)
    CONTINUE        reduce using rule 289 (empty -> .)
    RETURN          reduce using rule 289 (empty -> .)
    GLOBAL          reduce using rule 289 (empty -> .)
    STATIC          reduce using rule 289 (empty -> .)
    ECHO            reduce using rule 289 (empty -> .)
    INLINE_HTML     reduce using rule 289 (empty -> .)
    UNSET           reduce using rule 289 (empty -> .)
    SEMI_COLON      reduce using rule 289 (empty -> .)
    FUNCTION        reduce using rule 289 (empty -> .)
    CLONE           reduce using rule 289 (empty -> .)
    LIST            reduce using rule 289 (empty -> .)
    ARRAY           reduce using rule 289 (empty -> .)
    LBRACKET        reduce using rule 289 (empty -> .)
    PLUS            reduce using rule 289 (empty -> .)
    MINUS           reduce using rule 289 (empty -> .)
    NOT             reduce using rule 289 (empty -> .)
    BOOLEAN_NOT     reduce using rule 289 (empty -> .)
    INC             reduce using rule 289 (empty -> .)
    DEC             reduce using rule 289 (empty -> .)
    INT_CAST        reduce using rule 289 (empty -> .)
    ARRAY_CAST      reduce using rule 289 (empty -> .)
    STRING_CAST     reduce using rule 289 (empty -> .)
    DOUBLE_CAST     reduce using rule 289 (empty -> .)
    BOOL_CAST       reduce using rule 289 (empty -> .)
    UNSET_CAST      reduce using rule 289 (empty -> .)
    BINARY_CAST     reduce using rule 289 (empty -> .)
    ISSET           reduce using rule 289 (empty -> .)
    EMPTY           reduce using rule 289 (empty -> .)
    EVAL            reduce using rule 289 (empty -> .)
    INCLUDE         reduce using rule 289 (empty -> .)
    INCLUDE_ONCE    reduce using rule 289 (empty -> .)
    REQUIRE         reduce using rule 289 (empty -> .)
    REQUIRE_ONCE    reduce using rule 289 (empty -> .)
    PRINT           reduce using rule 289 (empty -> .)
    AT              reduce using rule 289 (empty -> .)
    LPAREN          reduce using rule 289 (empty -> .)
    DOUBLE_QUOTE    reduce using rule 289 (empty -> .)
    IDENTIFIER      reduce using rule 289 (empty -> .)
    EXIT            reduce using rule 289 (empty -> .)
    DIE             reduce using rule 289 (empty -> .)
    INT_NUMBER      reduce using rule 289 (empty -> .)
    FLOAT_NUMBER    reduce using rule 289 (empty -> .)
    CONSTANT_ENCAPSED_STRING reduce using rule 289 (empty -> .)
    FUNC_C          reduce using rule 289 (empty -> .)
    METHOD_C        reduce using rule 289 (empty -> .)
    LINE            reduce using rule 289 (empty -> .)
    FILE            reduce using rule 289 (empty -> .)
    DIR             reduce using rule 289 (empty -> .)
    START_HEREDOC   reduce using rule 289 (empty -> .)
    START_NOWDOC    reduce using rule 289 (empty -> .)
    DOLLAR          reduce using rule 289 (empty -> .)
    VARIABLE        reduce using rule 289 (empty -> .)
    RBRACE          reduce using rule 289 (empty -> .)
    ENDSWITCH       reduce using rule 289 (empty -> .)

    inner_statement_list           shift and go to state 579
    empty                          shift and go to state 89

state 560

    (62) case_separator -> COLON .

    YIELD           reduce using rule 62 (case_separator -> COLON .)
    LBRACE          reduce using rule 62 (case_separator -> COLON .)
    IF              reduce using rule 62 (case_separator -> COLON .)
    WHILE           reduce using rule 62 (case_separator -> COLON .)
    DO              reduce using rule 62 (case_separator -> COLON .)
    FOR             reduce using rule 62 (case_separator -> COLON .)
    SWITCH          reduce using rule 62 (case_separator -> COLON .)
    BREAK           reduce using rule 62 (case_separator -> COLON .)
    CONTINUE        reduce using rule 62 (case_separator -> COLON .)
    RETURN          reduce using rule 62 (case_separator -> COLON .)
    GLOBAL          reduce using rule 62 (case_separator -> COLON .)
    STATIC          reduce using rule 62 (case_separator -> COLON .)
    ECHO            reduce using rule 62 (case_separator -> COLON .)
    INLINE_HTML     reduce using rule 62 (case_separator -> COLON .)
    UNSET           reduce using rule 62 (case_separator -> COLON .)
    SEMI_COLON      reduce using rule 62 (case_separator -> COLON .)
    FUNCTION        reduce using rule 62 (case_separator -> COLON .)
    CLONE           reduce using rule 62 (case_separator -> COLON .)
    LIST            reduce using rule 62 (case_separator -> COLON .)
    ARRAY           reduce using rule 62 (case_separator -> COLON .)
    LBRACKET        reduce using rule 62 (case_separator -> COLON .)
    PLUS            reduce using rule 62 (case_separator -> COLON .)
    MINUS           reduce using rule 62 (case_separator -> COLON .)
    NOT             reduce using rule 62 (case_separator -> COLON .)
    BOOLEAN_NOT     reduce using rule 62 (case_separator -> COLON .)
    INC             reduce using rule 62 (case_separator -> COLON .)
    DEC             reduce using rule 62 (case_separator -> COLON .)
    INT_CAST        reduce using rule 62 (case_separator -> COLON .)
    ARRAY_CAST      reduce using rule 62 (case_separator -> COLON .)
    STRING_CAST     reduce using rule 62 (case_separator -> COLON .)
    DOUBLE_CAST     reduce using rule 62 (case_separator -> COLON .)
    BOOL_CAST       reduce using rule 62 (case_separator -> COLON .)
    UNSET_CAST      reduce using rule 62 (case_separator -> COLON .)
    BINARY_CAST     reduce using rule 62 (case_separator -> COLON .)
    ISSET           reduce using rule 62 (case_separator -> COLON .)
    EMPTY           reduce using rule 62 (case_separator -> COLON .)
    EVAL            reduce using rule 62 (case_separator -> COLON .)
    INCLUDE         reduce using rule 62 (case_separator -> COLON .)
    INCLUDE_ONCE    reduce using rule 62 (case_separator -> COLON .)
    REQUIRE         reduce using rule 62 (case_separator -> COLON .)
    REQUIRE_ONCE    reduce using rule 62 (case_separator -> COLON .)
    PRINT           reduce using rule 62 (case_separator -> COLON .)
    AT              reduce using rule 62 (case_separator -> COLON .)
    LPAREN          reduce using rule 62 (case_separator -> COLON .)
    DOUBLE_QUOTE    reduce using rule 62 (case_separator -> COLON .)
    IDENTIFIER      reduce using rule 62 (case_separator -> COLON .)
    EXIT            reduce using rule 62 (case_separator -> COLON .)
    DIE             reduce using rule 62 (case_separator -> COLON .)
    INT_NUMBER      reduce using rule 62 (case_separator -> COLON .)
    FLOAT_NUMBER    reduce using rule 62 (case_separator -> COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 62 (case_separator -> COLON .)
    FUNC_C          reduce using rule 62 (case_separator -> COLON .)
    METHOD_C        reduce using rule 62 (case_separator -> COLON .)
    LINE            reduce using rule 62 (case_separator -> COLON .)
    FILE            reduce using rule 62 (case_separator -> COLON .)
    DIR             reduce using rule 62 (case_separator -> COLON .)
    START_HEREDOC   reduce using rule 62 (case_separator -> COLON .)
    START_NOWDOC    reduce using rule 62 (case_separator -> COLON .)
    DOLLAR          reduce using rule 62 (case_separator -> COLON .)
    VARIABLE        reduce using rule 62 (case_separator -> COLON .)
    RBRACE          reduce using rule 62 (case_separator -> COLON .)
    ENDSWITCH       reduce using rule 62 (case_separator -> COLON .)
    CASE            reduce using rule 62 (case_separator -> COLON .)
    DEFAULT         reduce using rule 62 (case_separator -> COLON .)


state 561

    (63) case_separator -> SEMI_COLON .

    YIELD           reduce using rule 63 (case_separator -> SEMI_COLON .)
    LBRACE          reduce using rule 63 (case_separator -> SEMI_COLON .)
    IF              reduce using rule 63 (case_separator -> SEMI_COLON .)
    WHILE           reduce using rule 63 (case_separator -> SEMI_COLON .)
    DO              reduce using rule 63 (case_separator -> SEMI_COLON .)
    FOR             reduce using rule 63 (case_separator -> SEMI_COLON .)
    SWITCH          reduce using rule 63 (case_separator -> SEMI_COLON .)
    BREAK           reduce using rule 63 (case_separator -> SEMI_COLON .)
    CONTINUE        reduce using rule 63 (case_separator -> SEMI_COLON .)
    RETURN          reduce using rule 63 (case_separator -> SEMI_COLON .)
    GLOBAL          reduce using rule 63 (case_separator -> SEMI_COLON .)
    STATIC          reduce using rule 63 (case_separator -> SEMI_COLON .)
    ECHO            reduce using rule 63 (case_separator -> SEMI_COLON .)
    INLINE_HTML     reduce using rule 63 (case_separator -> SEMI_COLON .)
    UNSET           reduce using rule 63 (case_separator -> SEMI_COLON .)
    SEMI_COLON      reduce using rule 63 (case_separator -> SEMI_COLON .)
    FUNCTION        reduce using rule 63 (case_separator -> SEMI_COLON .)
    CLONE           reduce using rule 63 (case_separator -> SEMI_COLON .)
    LIST            reduce using rule 63 (case_separator -> SEMI_COLON .)
    ARRAY           reduce using rule 63 (case_separator -> SEMI_COLON .)
    LBRACKET        reduce using rule 63 (case_separator -> SEMI_COLON .)
    PLUS            reduce using rule 63 (case_separator -> SEMI_COLON .)
    MINUS           reduce using rule 63 (case_separator -> SEMI_COLON .)
    NOT             reduce using rule 63 (case_separator -> SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 63 (case_separator -> SEMI_COLON .)
    INC             reduce using rule 63 (case_separator -> SEMI_COLON .)
    DEC             reduce using rule 63 (case_separator -> SEMI_COLON .)
    INT_CAST        reduce using rule 63 (case_separator -> SEMI_COLON .)
    ARRAY_CAST      reduce using rule 63 (case_separator -> SEMI_COLON .)
    STRING_CAST     reduce using rule 63 (case_separator -> SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 63 (case_separator -> SEMI_COLON .)
    BOOL_CAST       reduce using rule 63 (case_separator -> SEMI_COLON .)
    UNSET_CAST      reduce using rule 63 (case_separator -> SEMI_COLON .)
    BINARY_CAST     reduce using rule 63 (case_separator -> SEMI_COLON .)
    ISSET           reduce using rule 63 (case_separator -> SEMI_COLON .)
    EMPTY           reduce using rule 63 (case_separator -> SEMI_COLON .)
    EVAL            reduce using rule 63 (case_separator -> SEMI_COLON .)
    INCLUDE         reduce using rule 63 (case_separator -> SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 63 (case_separator -> SEMI_COLON .)
    REQUIRE         reduce using rule 63 (case_separator -> SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 63 (case_separator -> SEMI_COLON .)
    PRINT           reduce using rule 63 (case_separator -> SEMI_COLON .)
    AT              reduce using rule 63 (case_separator -> SEMI_COLON .)
    LPAREN          reduce using rule 63 (case_separator -> SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 63 (case_separator -> SEMI_COLON .)
    IDENTIFIER      reduce using rule 63 (case_separator -> SEMI_COLON .)
    EXIT            reduce using rule 63 (case_separator -> SEMI_COLON .)
    DIE             reduce using rule 63 (case_separator -> SEMI_COLON .)
    INT_NUMBER      reduce using rule 63 (case_separator -> SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 63 (case_separator -> SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 63 (case_separator -> SEMI_COLON .)
    FUNC_C          reduce using rule 63 (case_separator -> SEMI_COLON .)
    METHOD_C        reduce using rule 63 (case_separator -> SEMI_COLON .)
    LINE            reduce using rule 63 (case_separator -> SEMI_COLON .)
    FILE            reduce using rule 63 (case_separator -> SEMI_COLON .)
    DIR             reduce using rule 63 (case_separator -> SEMI_COLON .)
    START_HEREDOC   reduce using rule 63 (case_separator -> SEMI_COLON .)
    START_NOWDOC    reduce using rule 63 (case_separator -> SEMI_COLON .)
    DOLLAR          reduce using rule 63 (case_separator -> SEMI_COLON .)
    VARIABLE        reduce using rule 63 (case_separator -> SEMI_COLON .)
    RBRACE          reduce using rule 63 (case_separator -> SEMI_COLON .)
    ENDSWITCH       reduce using rule 63 (case_separator -> SEMI_COLON .)
    CASE            reduce using rule 63 (case_separator -> SEMI_COLON .)
    DEFAULT         reduce using rule 63 (case_separator -> SEMI_COLON .)


state 562

    (55) switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .

    HALT_COMPILER   reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    CONST           reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    LBRACE          reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    IF              reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    WHILE           reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    DO              reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    FOR             reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    SWITCH          reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    BREAK           reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    CONTINUE        reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    RETURN          reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    GLOBAL          reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    STATIC          reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    ECHO            reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    INLINE_HTML     reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    UNSET           reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    SEMI_COLON      reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    FUNCTION        reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    CLONE           reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    LIST            reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    ARRAY           reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    LBRACKET        reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    PLUS            reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    MINUS           reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    NOT             reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    INC             reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    DEC             reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    INT_CAST        reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    ARRAY_CAST      reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    STRING_CAST     reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    BOOL_CAST       reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    UNSET_CAST      reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    BINARY_CAST     reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    ISSET           reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    EMPTY           reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    EVAL            reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    INCLUDE         reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    REQUIRE         reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    PRINT           reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    AT              reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    LPAREN          reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    IDENTIFIER      reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    EXIT            reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    DIE             reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    INT_NUMBER      reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    FUNC_C          reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    METHOD_C        reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    LINE            reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    FILE            reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    DIR             reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    START_HEREDOC   reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    START_NOWDOC    reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    DOLLAR          reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    VARIABLE        reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    $end            reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    RBRACE          reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    YIELD           reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    ELSEIF          reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    ELSE            reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    ENDIF           reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    ENDWHILE        reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    ENDSWITCH       reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    ENDFOR          reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    CASE            reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)
    DEFAULT         reduce using rule 55 (switch_case_list -> COLON case_list ENDSWITCH SEMI_COLON .)


state 563

    (56) switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH . SEMI_COLON

    SEMI_COLON      shift and go to state 580


state 564

    (78) function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list . RBRACE
    (11) inner_statement_list -> inner_statement_list . inner_statement
    (13) inner_statement -> . statement
    (14) inner_statement -> . function_declaration_statement
    (15) inner_statement -> . YIELD SEMI_COLON
    (16) inner_statement -> . YIELD expr SEMI_COLON
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list else_single
    (19) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (20) statement -> . WHILE LPAREN expr RPAREN while_statement
    (21) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (22) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (23) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (24) statement -> . BREAK SEMI_COLON
    (25) statement -> . BREAK expr SEMI_COLON
    (26) statement -> . CONTINUE SEMI_COLON
    (27) statement -> . CONTINUE expr SEMI_COLON
    (28) statement -> . RETURN SEMI_COLON
    (29) statement -> . RETURN expr SEMI_COLON
    (30) statement -> . GLOBAL global_var_list SEMI_COLON
    (31) statement -> . STATIC static_var_list SEMI_COLON
    (32) statement -> . ECHO echo_expr_list SEMI_COLON
    (33) statement -> . INLINE_HTML
    (34) statement -> . expr SEMI_COLON
    (35) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (36) statement -> . SEMI_COLON
    (78) function_declaration_statement -> . FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    RBRACE          shift and go to state 581
    YIELD           shift and go to state 217
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    FUNCTION        shift and go to state 26
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    inner_statement                shift and go to state 214
    statement                      shift and go to state 215
    function_declaration_statement shift and go to state 216
    expr                           shift and go to state 13
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 565

    (137) expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list . RBRACE
    (11) inner_statement_list -> inner_statement_list . inner_statement
    (13) inner_statement -> . statement
    (14) inner_statement -> . function_declaration_statement
    (15) inner_statement -> . YIELD SEMI_COLON
    (16) inner_statement -> . YIELD expr SEMI_COLON
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list else_single
    (19) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (20) statement -> . WHILE LPAREN expr RPAREN while_statement
    (21) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (22) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (23) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (24) statement -> . BREAK SEMI_COLON
    (25) statement -> . BREAK expr SEMI_COLON
    (26) statement -> . CONTINUE SEMI_COLON
    (27) statement -> . CONTINUE expr SEMI_COLON
    (28) statement -> . RETURN SEMI_COLON
    (29) statement -> . RETURN expr SEMI_COLON
    (30) statement -> . GLOBAL global_var_list SEMI_COLON
    (31) statement -> . STATIC static_var_list SEMI_COLON
    (32) statement -> . ECHO echo_expr_list SEMI_COLON
    (33) statement -> . INLINE_HTML
    (34) statement -> . expr SEMI_COLON
    (35) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (36) statement -> . SEMI_COLON
    (78) function_declaration_statement -> . FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    RBRACE          shift and go to state 582
    YIELD           shift and go to state 217
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    FUNCTION        shift and go to state 26
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    inner_statement                shift and go to state 214
    statement                      shift and go to state 215
    function_declaration_statement shift and go to state 216
    expr                           shift and go to state 13
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 566

    (138) lexical_vars -> USE LPAREN lexical_var_list . RPAREN
    (140) lexical_var_list -> lexical_var_list . COMMA AND VARIABLE
    (141) lexical_var_list -> lexical_var_list . COMMA VARIABLE

    RPAREN          shift and go to state 583
    COMMA           shift and go to state 584


state 567

    (142) lexical_var_list -> AND . VARIABLE

    VARIABLE        shift and go to state 585


state 568

    (143) lexical_var_list -> VARIABLE .

    RPAREN          reduce using rule 143 (lexical_var_list -> VARIABLE .)
    COMMA           reduce using rule 143 (lexical_var_list -> VARIABLE .)


state 569

    (284) encaps_var -> DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME LBRACKET expr RBRACKET RBRACE .

    DOUBLE_QUOTE    reduce using rule 284 (encaps_var -> DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME LBRACKET expr RBRACKET RBRACE .)
    VARIABLE        reduce using rule 284 (encaps_var -> DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME LBRACKET expr RBRACKET RBRACE .)
    DOLLAR_OPEN_CURLY_BRACES reduce using rule 284 (encaps_var -> DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME LBRACKET expr RBRACKET RBRACE .)
    CURLY_OPEN      reduce using rule 284 (encaps_var -> DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME LBRACKET expr RBRACKET RBRACE .)
    END_HEREDOC     reduce using rule 284 (encaps_var -> DOLLAR_OPEN_CURLY_BRACES STRING_VARNAME LBRACKET expr RBRACKET RBRACE .)


state 570

    (251) static_non_empty_array_pair_list -> static_non_empty_array_pair_list COMMA static_scalar DOUBLE_ARROW static_expr .
    (254) static_expr -> static_expr . BOOLEAN_AND static_expr
    (255) static_expr -> static_expr . BOOLEAN_OR static_expr
    (256) static_expr -> static_expr . LOGICAL_AND static_expr
    (257) static_expr -> static_expr . LOGICAL_OR static_expr
    (258) static_expr -> static_expr . LOGICAL_XOR static_expr
    (259) static_expr -> static_expr . AND static_expr
    (260) static_expr -> static_expr . OR static_expr
    (261) static_expr -> static_expr . XOR static_expr
    (262) static_expr -> static_expr . CONCAT static_expr
    (263) static_expr -> static_expr . PLUS static_expr
    (264) static_expr -> static_expr . MINUS static_expr
    (265) static_expr -> static_expr . MUL static_expr
    (266) static_expr -> static_expr . DIV static_expr
    (267) static_expr -> static_expr . SL static_expr
    (268) static_expr -> static_expr . SR static_expr
    (269) static_expr -> static_expr . MOD static_expr
    (270) static_expr -> static_expr . IS_IDENTICAL static_expr
    (271) static_expr -> static_expr . IS_NOT_IDENTICAL static_expr
    (272) static_expr -> static_expr . IS_EQUAL_TO static_expr
    (273) static_expr -> static_expr . IS_NOT_EQUAL static_expr
    (274) static_expr -> static_expr . LESS_THAN static_expr
    (275) static_expr -> static_expr . LESS_THAN_OR_EQUAL static_expr
    (276) static_expr -> static_expr . GREATER_THAN static_expr
    (277) static_expr -> static_expr . GRATER_THAN_OR_EQUAL static_expr

    COMMA           reduce using rule 251 (static_non_empty_array_pair_list -> static_non_empty_array_pair_list COMMA static_scalar DOUBLE_ARROW static_expr .)
    RBRACKET        reduce using rule 251 (static_non_empty_array_pair_list -> static_non_empty_array_pair_list COMMA static_scalar DOUBLE_ARROW static_expr .)
    RPAREN          reduce using rule 251 (static_non_empty_array_pair_list -> static_non_empty_array_pair_list COMMA static_scalar DOUBLE_ARROW static_expr .)
    BOOLEAN_AND     shift and go to state 394
    BOOLEAN_OR      shift and go to state 395
    LOGICAL_AND     shift and go to state 396
    LOGICAL_OR      shift and go to state 397
    LOGICAL_XOR     shift and go to state 398
    AND             shift and go to state 399
    OR              shift and go to state 400
    XOR             shift and go to state 401
    CONCAT          shift and go to state 402
    PLUS            shift and go to state 403
    MINUS           shift and go to state 404
    MUL             shift and go to state 405
    DIV             shift and go to state 406
    SL              shift and go to state 407
    SR              shift and go to state 408
    MOD             shift and go to state 409
    IS_IDENTICAL    shift and go to state 410
    IS_NOT_IDENTICAL shift and go to state 411
    IS_EQUAL_TO     shift and go to state 412
    IS_NOT_EQUAL    shift and go to state 413
    LESS_THAN       shift and go to state 414
    LESS_THAN_OR_EQUAL shift and go to state 415
    GREATER_THAN    shift and go to state 416
    GRATER_THAN_OR_EQUAL shift and go to state 417


state 571

    (38) elseif_list -> elseif_list ELSEIF LPAREN expr . RPAREN statement
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    RPAREN          shift and go to state 586
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 572

    (19) statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF . SEMI_COLON

    SEMI_COLON      shift and go to state 587


state 573

    (42) new_elseif_list -> new_elseif_list ELSEIF LPAREN . expr RPAREN COLON inner_statement_list
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 588
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 574

    (44) new_else_single -> ELSE COLON . inner_statement_list
    (11) inner_statement_list -> . inner_statement_list inner_statement
    (12) inner_statement_list -> . empty
    (289) empty -> .

    YIELD           reduce using rule 289 (empty -> .)
    LBRACE          reduce using rule 289 (empty -> .)
    IF              reduce using rule 289 (empty -> .)
    WHILE           reduce using rule 289 (empty -> .)
    DO              reduce using rule 289 (empty -> .)
    FOR             reduce using rule 289 (empty -> .)
    SWITCH          reduce using rule 289 (empty -> .)
    BREAK           reduce using rule 289 (empty -> .)
    CONTINUE        reduce using rule 289 (empty -> .)
    RETURN          reduce using rule 289 (empty -> .)
    GLOBAL          reduce using rule 289 (empty -> .)
    STATIC          reduce using rule 289 (empty -> .)
    ECHO            reduce using rule 289 (empty -> .)
    INLINE_HTML     reduce using rule 289 (empty -> .)
    UNSET           reduce using rule 289 (empty -> .)
    SEMI_COLON      reduce using rule 289 (empty -> .)
    FUNCTION        reduce using rule 289 (empty -> .)
    CLONE           reduce using rule 289 (empty -> .)
    LIST            reduce using rule 289 (empty -> .)
    ARRAY           reduce using rule 289 (empty -> .)
    LBRACKET        reduce using rule 289 (empty -> .)
    PLUS            reduce using rule 289 (empty -> .)
    MINUS           reduce using rule 289 (empty -> .)
    NOT             reduce using rule 289 (empty -> .)
    BOOLEAN_NOT     reduce using rule 289 (empty -> .)
    INC             reduce using rule 289 (empty -> .)
    DEC             reduce using rule 289 (empty -> .)
    INT_CAST        reduce using rule 289 (empty -> .)
    ARRAY_CAST      reduce using rule 289 (empty -> .)
    STRING_CAST     reduce using rule 289 (empty -> .)
    DOUBLE_CAST     reduce using rule 289 (empty -> .)
    BOOL_CAST       reduce using rule 289 (empty -> .)
    UNSET_CAST      reduce using rule 289 (empty -> .)
    BINARY_CAST     reduce using rule 289 (empty -> .)
    ISSET           reduce using rule 289 (empty -> .)
    EMPTY           reduce using rule 289 (empty -> .)
    EVAL            reduce using rule 289 (empty -> .)
    INCLUDE         reduce using rule 289 (empty -> .)
    INCLUDE_ONCE    reduce using rule 289 (empty -> .)
    REQUIRE         reduce using rule 289 (empty -> .)
    REQUIRE_ONCE    reduce using rule 289 (empty -> .)
    PRINT           reduce using rule 289 (empty -> .)
    AT              reduce using rule 289 (empty -> .)
    LPAREN          reduce using rule 289 (empty -> .)
    DOUBLE_QUOTE    reduce using rule 289 (empty -> .)
    IDENTIFIER      reduce using rule 289 (empty -> .)
    EXIT            reduce using rule 289 (empty -> .)
    DIE             reduce using rule 289 (empty -> .)
    INT_NUMBER      reduce using rule 289 (empty -> .)
    FLOAT_NUMBER    reduce using rule 289 (empty -> .)
    CONSTANT_ENCAPSED_STRING reduce using rule 289 (empty -> .)
    FUNC_C          reduce using rule 289 (empty -> .)
    METHOD_C        reduce using rule 289 (empty -> .)
    LINE            reduce using rule 289 (empty -> .)
    FILE            reduce using rule 289 (empty -> .)
    DIR             reduce using rule 289 (empty -> .)
    START_HEREDOC   reduce using rule 289 (empty -> .)
    START_NOWDOC    reduce using rule 289 (empty -> .)
    DOLLAR          reduce using rule 289 (empty -> .)
    VARIABLE        reduce using rule 289 (empty -> .)
    ENDIF           reduce using rule 289 (empty -> .)

    inner_statement_list           shift and go to state 589
    empty                          shift and go to state 89

state 575

    (22) statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .

    HALT_COMPILER   reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    CONST           reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    LBRACE          reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    IF              reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    WHILE           reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    DO              reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    FOR             reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    SWITCH          reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    BREAK           reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    CONTINUE        reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    RETURN          reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    GLOBAL          reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    STATIC          reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    ECHO            reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    INLINE_HTML     reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    UNSET           reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    SEMI_COLON      reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    FUNCTION        reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    CLONE           reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    LIST            reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    ARRAY           reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    LBRACKET        reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    PLUS            reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    MINUS           reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    NOT             reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    BOOLEAN_NOT     reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    INC             reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    DEC             reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    INT_CAST        reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    ARRAY_CAST      reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    STRING_CAST     reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    DOUBLE_CAST     reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    BOOL_CAST       reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    UNSET_CAST      reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    BINARY_CAST     reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    ISSET           reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    EMPTY           reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    EVAL            reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    INCLUDE         reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    INCLUDE_ONCE    reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    REQUIRE         reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    REQUIRE_ONCE    reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    PRINT           reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    AT              reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    LPAREN          reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    DOUBLE_QUOTE    reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    IDENTIFIER      reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    EXIT            reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    DIE             reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    INT_NUMBER      reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    FLOAT_NUMBER    reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    FUNC_C          reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    METHOD_C        reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    LINE            reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    FILE            reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    DIR             reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    START_HEREDOC   reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    START_NOWDOC    reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    DOLLAR          reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    VARIABLE        reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    $end            reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    RBRACE          reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    YIELD           reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    ELSEIF          reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    ELSE            reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    ENDIF           reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    ENDWHILE        reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    ENDSWITCH       reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    ENDFOR          reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    CASE            reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)
    DEFAULT         reduce using rule 22 (statement -> FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement .)


state 576

    (51) for_statement -> statement .

    ELSEIF          reduce using rule 51 (for_statement -> statement .)
    ELSE            reduce using rule 51 (for_statement -> statement .)
    HALT_COMPILER   reduce using rule 51 (for_statement -> statement .)
    CONST           reduce using rule 51 (for_statement -> statement .)
    LBRACE          reduce using rule 51 (for_statement -> statement .)
    IF              reduce using rule 51 (for_statement -> statement .)
    WHILE           reduce using rule 51 (for_statement -> statement .)
    DO              reduce using rule 51 (for_statement -> statement .)
    FOR             reduce using rule 51 (for_statement -> statement .)
    SWITCH          reduce using rule 51 (for_statement -> statement .)
    BREAK           reduce using rule 51 (for_statement -> statement .)
    CONTINUE        reduce using rule 51 (for_statement -> statement .)
    RETURN          reduce using rule 51 (for_statement -> statement .)
    GLOBAL          reduce using rule 51 (for_statement -> statement .)
    STATIC          reduce using rule 51 (for_statement -> statement .)
    ECHO            reduce using rule 51 (for_statement -> statement .)
    INLINE_HTML     reduce using rule 51 (for_statement -> statement .)
    UNSET           reduce using rule 51 (for_statement -> statement .)
    SEMI_COLON      reduce using rule 51 (for_statement -> statement .)
    FUNCTION        reduce using rule 51 (for_statement -> statement .)
    CLONE           reduce using rule 51 (for_statement -> statement .)
    LIST            reduce using rule 51 (for_statement -> statement .)
    ARRAY           reduce using rule 51 (for_statement -> statement .)
    LBRACKET        reduce using rule 51 (for_statement -> statement .)
    PLUS            reduce using rule 51 (for_statement -> statement .)
    MINUS           reduce using rule 51 (for_statement -> statement .)
    NOT             reduce using rule 51 (for_statement -> statement .)
    BOOLEAN_NOT     reduce using rule 51 (for_statement -> statement .)
    INC             reduce using rule 51 (for_statement -> statement .)
    DEC             reduce using rule 51 (for_statement -> statement .)
    INT_CAST        reduce using rule 51 (for_statement -> statement .)
    ARRAY_CAST      reduce using rule 51 (for_statement -> statement .)
    STRING_CAST     reduce using rule 51 (for_statement -> statement .)
    DOUBLE_CAST     reduce using rule 51 (for_statement -> statement .)
    BOOL_CAST       reduce using rule 51 (for_statement -> statement .)
    UNSET_CAST      reduce using rule 51 (for_statement -> statement .)
    BINARY_CAST     reduce using rule 51 (for_statement -> statement .)
    ISSET           reduce using rule 51 (for_statement -> statement .)
    EMPTY           reduce using rule 51 (for_statement -> statement .)
    EVAL            reduce using rule 51 (for_statement -> statement .)
    INCLUDE         reduce using rule 51 (for_statement -> statement .)
    INCLUDE_ONCE    reduce using rule 51 (for_statement -> statement .)
    REQUIRE         reduce using rule 51 (for_statement -> statement .)
    REQUIRE_ONCE    reduce using rule 51 (for_statement -> statement .)
    PRINT           reduce using rule 51 (for_statement -> statement .)
    AT              reduce using rule 51 (for_statement -> statement .)
    LPAREN          reduce using rule 51 (for_statement -> statement .)
    DOUBLE_QUOTE    reduce using rule 51 (for_statement -> statement .)
    IDENTIFIER      reduce using rule 51 (for_statement -> statement .)
    EXIT            reduce using rule 51 (for_statement -> statement .)
    DIE             reduce using rule 51 (for_statement -> statement .)
    INT_NUMBER      reduce using rule 51 (for_statement -> statement .)
    FLOAT_NUMBER    reduce using rule 51 (for_statement -> statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 51 (for_statement -> statement .)
    FUNC_C          reduce using rule 51 (for_statement -> statement .)
    METHOD_C        reduce using rule 51 (for_statement -> statement .)
    LINE            reduce using rule 51 (for_statement -> statement .)
    FILE            reduce using rule 51 (for_statement -> statement .)
    DIR             reduce using rule 51 (for_statement -> statement .)
    START_HEREDOC   reduce using rule 51 (for_statement -> statement .)
    START_NOWDOC    reduce using rule 51 (for_statement -> statement .)
    DOLLAR          reduce using rule 51 (for_statement -> statement .)
    VARIABLE        reduce using rule 51 (for_statement -> statement .)
    $end            reduce using rule 51 (for_statement -> statement .)
    RBRACE          reduce using rule 51 (for_statement -> statement .)
    YIELD           reduce using rule 51 (for_statement -> statement .)
    ENDIF           reduce using rule 51 (for_statement -> statement .)
    ENDWHILE        reduce using rule 51 (for_statement -> statement .)
    ENDSWITCH       reduce using rule 51 (for_statement -> statement .)
    ENDFOR          reduce using rule 51 (for_statement -> statement .)
    CASE            reduce using rule 51 (for_statement -> statement .)
    DEFAULT         reduce using rule 51 (for_statement -> statement .)


state 577

    (52) for_statement -> COLON . inner_statement_list ENDFOR SEMI_COLON
    (11) inner_statement_list -> . inner_statement_list inner_statement
    (12) inner_statement_list -> . empty
    (289) empty -> .

    ENDFOR          reduce using rule 289 (empty -> .)
    YIELD           reduce using rule 289 (empty -> .)
    LBRACE          reduce using rule 289 (empty -> .)
    IF              reduce using rule 289 (empty -> .)
    WHILE           reduce using rule 289 (empty -> .)
    DO              reduce using rule 289 (empty -> .)
    FOR             reduce using rule 289 (empty -> .)
    SWITCH          reduce using rule 289 (empty -> .)
    BREAK           reduce using rule 289 (empty -> .)
    CONTINUE        reduce using rule 289 (empty -> .)
    RETURN          reduce using rule 289 (empty -> .)
    GLOBAL          reduce using rule 289 (empty -> .)
    STATIC          reduce using rule 289 (empty -> .)
    ECHO            reduce using rule 289 (empty -> .)
    INLINE_HTML     reduce using rule 289 (empty -> .)
    UNSET           reduce using rule 289 (empty -> .)
    SEMI_COLON      reduce using rule 289 (empty -> .)
    FUNCTION        reduce using rule 289 (empty -> .)
    CLONE           reduce using rule 289 (empty -> .)
    LIST            reduce using rule 289 (empty -> .)
    ARRAY           reduce using rule 289 (empty -> .)
    LBRACKET        reduce using rule 289 (empty -> .)
    PLUS            reduce using rule 289 (empty -> .)
    MINUS           reduce using rule 289 (empty -> .)
    NOT             reduce using rule 289 (empty -> .)
    BOOLEAN_NOT     reduce using rule 289 (empty -> .)
    INC             reduce using rule 289 (empty -> .)
    DEC             reduce using rule 289 (empty -> .)
    INT_CAST        reduce using rule 289 (empty -> .)
    ARRAY_CAST      reduce using rule 289 (empty -> .)
    STRING_CAST     reduce using rule 289 (empty -> .)
    DOUBLE_CAST     reduce using rule 289 (empty -> .)
    BOOL_CAST       reduce using rule 289 (empty -> .)
    UNSET_CAST      reduce using rule 289 (empty -> .)
    BINARY_CAST     reduce using rule 289 (empty -> .)
    ISSET           reduce using rule 289 (empty -> .)
    EMPTY           reduce using rule 289 (empty -> .)
    EVAL            reduce using rule 289 (empty -> .)
    INCLUDE         reduce using rule 289 (empty -> .)
    INCLUDE_ONCE    reduce using rule 289 (empty -> .)
    REQUIRE         reduce using rule 289 (empty -> .)
    REQUIRE_ONCE    reduce using rule 289 (empty -> .)
    PRINT           reduce using rule 289 (empty -> .)
    AT              reduce using rule 289 (empty -> .)
    LPAREN          reduce using rule 289 (empty -> .)
    DOUBLE_QUOTE    reduce using rule 289 (empty -> .)
    IDENTIFIER      reduce using rule 289 (empty -> .)
    EXIT            reduce using rule 289 (empty -> .)
    DIE             reduce using rule 289 (empty -> .)
    INT_NUMBER      reduce using rule 289 (empty -> .)
    FLOAT_NUMBER    reduce using rule 289 (empty -> .)
    CONSTANT_ENCAPSED_STRING reduce using rule 289 (empty -> .)
    FUNC_C          reduce using rule 289 (empty -> .)
    METHOD_C        reduce using rule 289 (empty -> .)
    LINE            reduce using rule 289 (empty -> .)
    FILE            reduce using rule 289 (empty -> .)
    DIR             reduce using rule 289 (empty -> .)
    START_HEREDOC   reduce using rule 289 (empty -> .)
    START_NOWDOC    reduce using rule 289 (empty -> .)
    DOLLAR          reduce using rule 289 (empty -> .)
    VARIABLE        reduce using rule 289 (empty -> .)

    inner_statement_list           shift and go to state 590
    empty                          shift and go to state 89

state 578

    (58) case_list -> case_list_no_default CASE expr case_separator . inner_statement_list
    (61) case_list_no_default -> case_list_no_default CASE expr case_separator . inner_statement_list
    (11) inner_statement_list -> . inner_statement_list inner_statement
    (12) inner_statement_list -> . empty
    (289) empty -> .

    YIELD           reduce using rule 289 (empty -> .)
    LBRACE          reduce using rule 289 (empty -> .)
    IF              reduce using rule 289 (empty -> .)
    WHILE           reduce using rule 289 (empty -> .)
    DO              reduce using rule 289 (empty -> .)
    FOR             reduce using rule 289 (empty -> .)
    SWITCH          reduce using rule 289 (empty -> .)
    BREAK           reduce using rule 289 (empty -> .)
    CONTINUE        reduce using rule 289 (empty -> .)
    RETURN          reduce using rule 289 (empty -> .)
    GLOBAL          reduce using rule 289 (empty -> .)
    STATIC          reduce using rule 289 (empty -> .)
    ECHO            reduce using rule 289 (empty -> .)
    INLINE_HTML     reduce using rule 289 (empty -> .)
    UNSET           reduce using rule 289 (empty -> .)
    SEMI_COLON      reduce using rule 289 (empty -> .)
    FUNCTION        reduce using rule 289 (empty -> .)
    CLONE           reduce using rule 289 (empty -> .)
    LIST            reduce using rule 289 (empty -> .)
    ARRAY           reduce using rule 289 (empty -> .)
    LBRACKET        reduce using rule 289 (empty -> .)
    PLUS            reduce using rule 289 (empty -> .)
    MINUS           reduce using rule 289 (empty -> .)
    NOT             reduce using rule 289 (empty -> .)
    BOOLEAN_NOT     reduce using rule 289 (empty -> .)
    INC             reduce using rule 289 (empty -> .)
    DEC             reduce using rule 289 (empty -> .)
    INT_CAST        reduce using rule 289 (empty -> .)
    ARRAY_CAST      reduce using rule 289 (empty -> .)
    STRING_CAST     reduce using rule 289 (empty -> .)
    DOUBLE_CAST     reduce using rule 289 (empty -> .)
    BOOL_CAST       reduce using rule 289 (empty -> .)
    UNSET_CAST      reduce using rule 289 (empty -> .)
    BINARY_CAST     reduce using rule 289 (empty -> .)
    ISSET           reduce using rule 289 (empty -> .)
    EMPTY           reduce using rule 289 (empty -> .)
    EVAL            reduce using rule 289 (empty -> .)
    INCLUDE         reduce using rule 289 (empty -> .)
    INCLUDE_ONCE    reduce using rule 289 (empty -> .)
    REQUIRE         reduce using rule 289 (empty -> .)
    REQUIRE_ONCE    reduce using rule 289 (empty -> .)
    PRINT           reduce using rule 289 (empty -> .)
    AT              reduce using rule 289 (empty -> .)
    LPAREN          reduce using rule 289 (empty -> .)
    DOUBLE_QUOTE    reduce using rule 289 (empty -> .)
    IDENTIFIER      reduce using rule 289 (empty -> .)
    EXIT            reduce using rule 289 (empty -> .)
    DIE             reduce using rule 289 (empty -> .)
    INT_NUMBER      reduce using rule 289 (empty -> .)
    FLOAT_NUMBER    reduce using rule 289 (empty -> .)
    CONSTANT_ENCAPSED_STRING reduce using rule 289 (empty -> .)
    FUNC_C          reduce using rule 289 (empty -> .)
    METHOD_C        reduce using rule 289 (empty -> .)
    LINE            reduce using rule 289 (empty -> .)
    FILE            reduce using rule 289 (empty -> .)
    DIR             reduce using rule 289 (empty -> .)
    START_HEREDOC   reduce using rule 289 (empty -> .)
    START_NOWDOC    reduce using rule 289 (empty -> .)
    DOLLAR          reduce using rule 289 (empty -> .)
    VARIABLE        reduce using rule 289 (empty -> .)
    RBRACE          reduce using rule 289 (empty -> .)
    CASE            reduce using rule 289 (empty -> .)
    DEFAULT         reduce using rule 289 (empty -> .)
    ENDSWITCH       reduce using rule 289 (empty -> .)

    inner_statement_list           shift and go to state 591
    empty                          shift and go to state 89

state 579

    (59) case_list -> case_list_no_default DEFAULT case_separator inner_statement_list .
    (11) inner_statement_list -> inner_statement_list . inner_statement
    (13) inner_statement -> . statement
    (14) inner_statement -> . function_declaration_statement
    (15) inner_statement -> . YIELD SEMI_COLON
    (16) inner_statement -> . YIELD expr SEMI_COLON
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list else_single
    (19) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (20) statement -> . WHILE LPAREN expr RPAREN while_statement
    (21) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (22) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (23) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (24) statement -> . BREAK SEMI_COLON
    (25) statement -> . BREAK expr SEMI_COLON
    (26) statement -> . CONTINUE SEMI_COLON
    (27) statement -> . CONTINUE expr SEMI_COLON
    (28) statement -> . RETURN SEMI_COLON
    (29) statement -> . RETURN expr SEMI_COLON
    (30) statement -> . GLOBAL global_var_list SEMI_COLON
    (31) statement -> . STATIC static_var_list SEMI_COLON
    (32) statement -> . ECHO echo_expr_list SEMI_COLON
    (33) statement -> . INLINE_HTML
    (34) statement -> . expr SEMI_COLON
    (35) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (36) statement -> . SEMI_COLON
    (78) function_declaration_statement -> . FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    RBRACE          reduce using rule 59 (case_list -> case_list_no_default DEFAULT case_separator inner_statement_list .)
    ENDSWITCH       reduce using rule 59 (case_list -> case_list_no_default DEFAULT case_separator inner_statement_list .)
    YIELD           shift and go to state 217
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    FUNCTION        shift and go to state 26
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    inner_statement                shift and go to state 214
    statement                      shift and go to state 215
    function_declaration_statement shift and go to state 216
    expr                           shift and go to state 13
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 580

    (56) switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .

    HALT_COMPILER   reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    CONST           reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    LBRACE          reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    IF              reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    WHILE           reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    DO              reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    FOR             reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    SWITCH          reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    BREAK           reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    CONTINUE        reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    RETURN          reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    GLOBAL          reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    STATIC          reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    ECHO            reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    INLINE_HTML     reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    UNSET           reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    SEMI_COLON      reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    FUNCTION        reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    CLONE           reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    LIST            reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    ARRAY           reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    LBRACKET        reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    PLUS            reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    MINUS           reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    NOT             reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    INC             reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    DEC             reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    INT_CAST        reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    ARRAY_CAST      reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    STRING_CAST     reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    BOOL_CAST       reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    UNSET_CAST      reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    BINARY_CAST     reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    ISSET           reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    EMPTY           reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    EVAL            reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    INCLUDE         reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    REQUIRE         reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    PRINT           reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    AT              reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    LPAREN          reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    IDENTIFIER      reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    EXIT            reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    DIE             reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    INT_NUMBER      reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    FUNC_C          reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    METHOD_C        reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    LINE            reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    FILE            reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    DIR             reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    START_HEREDOC   reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    START_NOWDOC    reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    DOLLAR          reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    VARIABLE        reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    $end            reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    RBRACE          reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    YIELD           reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    ELSEIF          reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    ELSE            reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    ENDIF           reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    ENDWHILE        reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    ENDSWITCH       reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    ENDFOR          reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    CASE            reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)
    DEFAULT         reduce using rule 56 (switch_case_list -> COLON SEMI_COLON case_list ENDSWITCH SEMI_COLON .)


state 581

    (78) function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .

    HALT_COMPILER   reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    CONST           reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    LBRACE          reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    IF              reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    WHILE           reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    DO              reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    FOR             reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    SWITCH          reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    BREAK           reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    CONTINUE        reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    RETURN          reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    GLOBAL          reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    STATIC          reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    ECHO            reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    INLINE_HTML     reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    UNSET           reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    SEMI_COLON      reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    FUNCTION        reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    CLONE           reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    LIST            reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    ARRAY           reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    LBRACKET        reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    PLUS            reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    MINUS           reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    NOT             reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    BOOLEAN_NOT     reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    INC             reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    DEC             reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    INT_CAST        reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    ARRAY_CAST      reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    STRING_CAST     reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    DOUBLE_CAST     reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    BOOL_CAST       reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    UNSET_CAST      reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    BINARY_CAST     reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    ISSET           reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    EMPTY           reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    EVAL            reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    INCLUDE         reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    INCLUDE_ONCE    reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    REQUIRE         reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    REQUIRE_ONCE    reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    PRINT           reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    AT              reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    LPAREN          reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    DOUBLE_QUOTE    reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    IDENTIFIER      reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    EXIT            reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    DIE             reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    INT_NUMBER      reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    FLOAT_NUMBER    reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    CONSTANT_ENCAPSED_STRING reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    FUNC_C          reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    METHOD_C        reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    LINE            reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    FILE            reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    DIR             reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    START_HEREDOC   reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    START_NOWDOC    reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    DOLLAR          reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    VARIABLE        reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    $end            reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    RBRACE          reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    YIELD           reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    ELSEIF          reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    ELSE            reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    ENDIF           reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    ENDWHILE        reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    ENDSWITCH       reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    ENDFOR          reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    CASE            reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)
    DEFAULT         reduce using rule 78 (function_declaration_statement -> FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE .)


state 582

    (137) expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .

    SEMI_COLON      reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    LBRACE          reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    BOOLEAN_AND     reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    BOOLEAN_OR      reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    LOGICAL_AND     reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    LOGICAL_OR      reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    LOGICAL_XOR     reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    AND             reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    OR              reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    XOR             reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    CONCAT          reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    PLUS            reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    MINUS           reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    MUL             reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    DIV             reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    SL              reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    SR              reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    MOD             reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    IS_IDENTICAL    reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    IS_NOT_IDENTICAL reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    IS_EQUAL_TO     reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    IS_NOT_EQUAL    reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    LESS_THAN       reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    LESS_THAN_OR_EQUAL reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    GREATER_THAN    reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    GRATER_THAN_OR_EQUAL reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    INSTANCEOF      reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    QUESTION        reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    RPAREN          reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    COMMA           reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    DOUBLE_ARROW    reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    RBRACKET        reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    RBRACE          reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)
    COLON           reduce using rule 137 (expr -> FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE .)


state 583

    (138) lexical_vars -> USE LPAREN lexical_var_list RPAREN .

    LBRACE          reduce using rule 138 (lexical_vars -> USE LPAREN lexical_var_list RPAREN .)


state 584

    (140) lexical_var_list -> lexical_var_list COMMA . AND VARIABLE
    (141) lexical_var_list -> lexical_var_list COMMA . VARIABLE

    AND             shift and go to state 592
    VARIABLE        shift and go to state 593


state 585

    (142) lexical_var_list -> AND VARIABLE .

    RPAREN          reduce using rule 142 (lexical_var_list -> AND VARIABLE .)
    COMMA           reduce using rule 142 (lexical_var_list -> AND VARIABLE .)


state 586

    (38) elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN . statement
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list else_single
    (19) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (20) statement -> . WHILE LPAREN expr RPAREN while_statement
    (21) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (22) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (23) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (24) statement -> . BREAK SEMI_COLON
    (25) statement -> . BREAK expr SEMI_COLON
    (26) statement -> . CONTINUE SEMI_COLON
    (27) statement -> . CONTINUE expr SEMI_COLON
    (28) statement -> . RETURN SEMI_COLON
    (29) statement -> . RETURN expr SEMI_COLON
    (30) statement -> . GLOBAL global_var_list SEMI_COLON
    (31) statement -> . STATIC static_var_list SEMI_COLON
    (32) statement -> . ECHO echo_expr_list SEMI_COLON
    (33) statement -> . INLINE_HTML
    (34) statement -> . expr SEMI_COLON
    (35) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (36) statement -> . SEMI_COLON
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    FUNCTION        shift and go to state 84
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 13
    statement                      shift and go to state 594
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 587

    (19) statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .

    HALT_COMPILER   reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    CONST           reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    LBRACE          reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    IF              reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    WHILE           reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    DO              reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    FOR             reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    SWITCH          reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    BREAK           reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    CONTINUE        reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    RETURN          reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    GLOBAL          reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    STATIC          reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    ECHO            reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    INLINE_HTML     reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    UNSET           reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    SEMI_COLON      reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    FUNCTION        reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    CLONE           reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    LIST            reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    ARRAY           reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    LBRACKET        reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    PLUS            reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    MINUS           reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    NOT             reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    INC             reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    DEC             reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    INT_CAST        reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    ARRAY_CAST      reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    STRING_CAST     reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    BOOL_CAST       reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    UNSET_CAST      reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    BINARY_CAST     reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    ISSET           reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    EMPTY           reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    EVAL            reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    INCLUDE         reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    REQUIRE         reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    PRINT           reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    AT              reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    LPAREN          reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    IDENTIFIER      reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    EXIT            reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    DIE             reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    INT_NUMBER      reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    FUNC_C          reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    METHOD_C        reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    LINE            reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    FILE            reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    DIR             reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    START_HEREDOC   reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    START_NOWDOC    reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    DOLLAR          reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    VARIABLE        reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    $end            reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    RBRACE          reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    YIELD           reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    ELSEIF          reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    ELSE            reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    ENDIF           reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    ENDWHILE        reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    ENDSWITCH       reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    ENDFOR          reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    CASE            reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)
    DEFAULT         reduce using rule 19 (statement -> IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON .)


state 588

    (42) new_elseif_list -> new_elseif_list ELSEIF LPAREN expr . RPAREN COLON inner_statement_list
    (115) expr -> expr . LBRACE dim_offset RBRACE
    (155) expr -> expr . BOOLEAN_AND expr
    (156) expr -> expr . BOOLEAN_OR expr
    (157) expr -> expr . LOGICAL_AND expr
    (158) expr -> expr . LOGICAL_OR expr
    (159) expr -> expr . LOGICAL_XOR expr
    (160) expr -> expr . AND expr
    (161) expr -> expr . OR expr
    (162) expr -> expr . XOR expr
    (163) expr -> expr . CONCAT expr
    (164) expr -> expr . PLUS expr
    (165) expr -> expr . MINUS expr
    (166) expr -> expr . MUL expr
    (167) expr -> expr . DIV expr
    (168) expr -> expr . SL expr
    (169) expr -> expr . SR expr
    (170) expr -> expr . MOD expr
    (171) expr -> expr . IS_IDENTICAL expr
    (172) expr -> expr . IS_NOT_IDENTICAL expr
    (173) expr -> expr . IS_EQUAL_TO expr
    (174) expr -> expr . IS_NOT_EQUAL expr
    (175) expr -> expr . LESS_THAN expr
    (176) expr -> expr . LESS_THAN_OR_EQUAL expr
    (177) expr -> expr . GREATER_THAN expr
    (178) expr -> expr . GRATER_THAN_OR_EQUAL expr
    (179) expr -> expr . INSTANCEOF expr
    (180) expr -> expr . INSTANCEOF STATIC
    (185) expr -> expr . QUESTION expr COLON expr
    (186) expr -> expr . QUESTION COLON expr

    RPAREN          shift and go to state 595
    LBRACE          shift and go to state 92
    BOOLEAN_AND     shift and go to state 93
    BOOLEAN_OR      shift and go to state 94
    LOGICAL_AND     shift and go to state 95
    LOGICAL_OR      shift and go to state 96
    LOGICAL_XOR     shift and go to state 97
    AND             shift and go to state 98
    OR              shift and go to state 99
    XOR             shift and go to state 100
    CONCAT          shift and go to state 101
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103
    MUL             shift and go to state 104
    DIV             shift and go to state 105
    SL              shift and go to state 106
    SR              shift and go to state 107
    MOD             shift and go to state 108
    IS_IDENTICAL    shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_EQUAL_TO     shift and go to state 111
    IS_NOT_EQUAL    shift and go to state 112
    LESS_THAN       shift and go to state 113
    LESS_THAN_OR_EQUAL shift and go to state 114
    GREATER_THAN    shift and go to state 115
    GRATER_THAN_OR_EQUAL shift and go to state 116
    INSTANCEOF      shift and go to state 117
    QUESTION        shift and go to state 118


state 589

    (44) new_else_single -> ELSE COLON inner_statement_list .
    (11) inner_statement_list -> inner_statement_list . inner_statement
    (13) inner_statement -> . statement
    (14) inner_statement -> . function_declaration_statement
    (15) inner_statement -> . YIELD SEMI_COLON
    (16) inner_statement -> . YIELD expr SEMI_COLON
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list else_single
    (19) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (20) statement -> . WHILE LPAREN expr RPAREN while_statement
    (21) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (22) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (23) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (24) statement -> . BREAK SEMI_COLON
    (25) statement -> . BREAK expr SEMI_COLON
    (26) statement -> . CONTINUE SEMI_COLON
    (27) statement -> . CONTINUE expr SEMI_COLON
    (28) statement -> . RETURN SEMI_COLON
    (29) statement -> . RETURN expr SEMI_COLON
    (30) statement -> . GLOBAL global_var_list SEMI_COLON
    (31) statement -> . STATIC static_var_list SEMI_COLON
    (32) statement -> . ECHO echo_expr_list SEMI_COLON
    (33) statement -> . INLINE_HTML
    (34) statement -> . expr SEMI_COLON
    (35) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (36) statement -> . SEMI_COLON
    (78) function_declaration_statement -> . FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    ENDIF           reduce using rule 44 (new_else_single -> ELSE COLON inner_statement_list .)
    YIELD           shift and go to state 217
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    FUNCTION        shift and go to state 26
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    inner_statement                shift and go to state 214
    statement                      shift and go to state 215
    function_declaration_statement shift and go to state 216
    expr                           shift and go to state 13
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 590

    (52) for_statement -> COLON inner_statement_list . ENDFOR SEMI_COLON
    (11) inner_statement_list -> inner_statement_list . inner_statement
    (13) inner_statement -> . statement
    (14) inner_statement -> . function_declaration_statement
    (15) inner_statement -> . YIELD SEMI_COLON
    (16) inner_statement -> . YIELD expr SEMI_COLON
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list else_single
    (19) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (20) statement -> . WHILE LPAREN expr RPAREN while_statement
    (21) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (22) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (23) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (24) statement -> . BREAK SEMI_COLON
    (25) statement -> . BREAK expr SEMI_COLON
    (26) statement -> . CONTINUE SEMI_COLON
    (27) statement -> . CONTINUE expr SEMI_COLON
    (28) statement -> . RETURN SEMI_COLON
    (29) statement -> . RETURN expr SEMI_COLON
    (30) statement -> . GLOBAL global_var_list SEMI_COLON
    (31) statement -> . STATIC static_var_list SEMI_COLON
    (32) statement -> . ECHO echo_expr_list SEMI_COLON
    (33) statement -> . INLINE_HTML
    (34) statement -> . expr SEMI_COLON
    (35) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (36) statement -> . SEMI_COLON
    (78) function_declaration_statement -> . FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    ENDFOR          shift and go to state 596
    YIELD           shift and go to state 217
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    FUNCTION        shift and go to state 26
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    inner_statement                shift and go to state 214
    statement                      shift and go to state 215
    function_declaration_statement shift and go to state 216
    expr                           shift and go to state 13
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 591

    (58) case_list -> case_list_no_default CASE expr case_separator inner_statement_list .
    (61) case_list_no_default -> case_list_no_default CASE expr case_separator inner_statement_list .
    (11) inner_statement_list -> inner_statement_list . inner_statement
    (13) inner_statement -> . statement
    (14) inner_statement -> . function_declaration_statement
    (15) inner_statement -> . YIELD SEMI_COLON
    (16) inner_statement -> . YIELD expr SEMI_COLON
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list else_single
    (19) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (20) statement -> . WHILE LPAREN expr RPAREN while_statement
    (21) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (22) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (23) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (24) statement -> . BREAK SEMI_COLON
    (25) statement -> . BREAK expr SEMI_COLON
    (26) statement -> . CONTINUE SEMI_COLON
    (27) statement -> . CONTINUE expr SEMI_COLON
    (28) statement -> . RETURN SEMI_COLON
    (29) statement -> . RETURN expr SEMI_COLON
    (30) statement -> . GLOBAL global_var_list SEMI_COLON
    (31) statement -> . STATIC static_var_list SEMI_COLON
    (32) statement -> . ECHO echo_expr_list SEMI_COLON
    (33) statement -> . INLINE_HTML
    (34) statement -> . expr SEMI_COLON
    (35) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (36) statement -> . SEMI_COLON
    (78) function_declaration_statement -> . FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    RBRACE          reduce using rule 58 (case_list -> case_list_no_default CASE expr case_separator inner_statement_list .)
    ENDSWITCH       reduce using rule 58 (case_list -> case_list_no_default CASE expr case_separator inner_statement_list .)
    CASE            reduce using rule 61 (case_list_no_default -> case_list_no_default CASE expr case_separator inner_statement_list .)
    DEFAULT         reduce using rule 61 (case_list_no_default -> case_list_no_default CASE expr case_separator inner_statement_list .)
    YIELD           shift and go to state 217
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    FUNCTION        shift and go to state 26
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 13
    inner_statement                shift and go to state 214
    statement                      shift and go to state 215
    function_declaration_statement shift and go to state 216
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80

state 592

    (140) lexical_var_list -> lexical_var_list COMMA AND . VARIABLE

    VARIABLE        shift and go to state 597


state 593

    (141) lexical_var_list -> lexical_var_list COMMA VARIABLE .

    RPAREN          reduce using rule 141 (lexical_var_list -> lexical_var_list COMMA VARIABLE .)
    COMMA           reduce using rule 141 (lexical_var_list -> lexical_var_list COMMA VARIABLE .)


state 594

    (38) elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .

    ELSEIF          reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    ELSE            reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    HALT_COMPILER   reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    CONST           reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    LBRACE          reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    IF              reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    WHILE           reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    DO              reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    FOR             reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    SWITCH          reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    BREAK           reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    CONTINUE        reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    RETURN          reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    GLOBAL          reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    STATIC          reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    ECHO            reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    INLINE_HTML     reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    UNSET           reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    SEMI_COLON      reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    FUNCTION        reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    CLONE           reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    LIST            reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    ARRAY           reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    LBRACKET        reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    PLUS            reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    MINUS           reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    NOT             reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    BOOLEAN_NOT     reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    INC             reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    DEC             reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    INT_CAST        reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    ARRAY_CAST      reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    STRING_CAST     reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    DOUBLE_CAST     reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    BOOL_CAST       reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    UNSET_CAST      reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    BINARY_CAST     reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    ISSET           reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    EMPTY           reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    EVAL            reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    INCLUDE         reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    INCLUDE_ONCE    reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    REQUIRE         reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    REQUIRE_ONCE    reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    PRINT           reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    AT              reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    LPAREN          reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    DOUBLE_QUOTE    reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    IDENTIFIER      reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    EXIT            reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    DIE             reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    INT_NUMBER      reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    FLOAT_NUMBER    reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    FUNC_C          reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    METHOD_C        reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    LINE            reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    FILE            reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    DIR             reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    START_HEREDOC   reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    START_NOWDOC    reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    DOLLAR          reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    VARIABLE        reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    $end            reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    RBRACE          reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    YIELD           reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    ENDIF           reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    ENDWHILE        reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    ENDSWITCH       reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    ENDFOR          reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    CASE            reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)
    DEFAULT         reduce using rule 38 (elseif_list -> elseif_list ELSEIF LPAREN expr RPAREN statement .)


state 595

    (42) new_elseif_list -> new_elseif_list ELSEIF LPAREN expr RPAREN . COLON inner_statement_list

    COLON           shift and go to state 598


state 596

    (52) for_statement -> COLON inner_statement_list ENDFOR . SEMI_COLON

    SEMI_COLON      shift and go to state 599


state 597

    (140) lexical_var_list -> lexical_var_list COMMA AND VARIABLE .

    RPAREN          reduce using rule 140 (lexical_var_list -> lexical_var_list COMMA AND VARIABLE .)
    COMMA           reduce using rule 140 (lexical_var_list -> lexical_var_list COMMA AND VARIABLE .)


state 598

    (42) new_elseif_list -> new_elseif_list ELSEIF LPAREN expr RPAREN COLON . inner_statement_list
    (11) inner_statement_list -> . inner_statement_list inner_statement
    (12) inner_statement_list -> . empty
    (289) empty -> .

    YIELD           reduce using rule 289 (empty -> .)
    LBRACE          reduce using rule 289 (empty -> .)
    IF              reduce using rule 289 (empty -> .)
    WHILE           reduce using rule 289 (empty -> .)
    DO              reduce using rule 289 (empty -> .)
    FOR             reduce using rule 289 (empty -> .)
    SWITCH          reduce using rule 289 (empty -> .)
    BREAK           reduce using rule 289 (empty -> .)
    CONTINUE        reduce using rule 289 (empty -> .)
    RETURN          reduce using rule 289 (empty -> .)
    GLOBAL          reduce using rule 289 (empty -> .)
    STATIC          reduce using rule 289 (empty -> .)
    ECHO            reduce using rule 289 (empty -> .)
    INLINE_HTML     reduce using rule 289 (empty -> .)
    UNSET           reduce using rule 289 (empty -> .)
    SEMI_COLON      reduce using rule 289 (empty -> .)
    FUNCTION        reduce using rule 289 (empty -> .)
    CLONE           reduce using rule 289 (empty -> .)
    LIST            reduce using rule 289 (empty -> .)
    ARRAY           reduce using rule 289 (empty -> .)
    LBRACKET        reduce using rule 289 (empty -> .)
    PLUS            reduce using rule 289 (empty -> .)
    MINUS           reduce using rule 289 (empty -> .)
    NOT             reduce using rule 289 (empty -> .)
    BOOLEAN_NOT     reduce using rule 289 (empty -> .)
    INC             reduce using rule 289 (empty -> .)
    DEC             reduce using rule 289 (empty -> .)
    INT_CAST        reduce using rule 289 (empty -> .)
    ARRAY_CAST      reduce using rule 289 (empty -> .)
    STRING_CAST     reduce using rule 289 (empty -> .)
    DOUBLE_CAST     reduce using rule 289 (empty -> .)
    BOOL_CAST       reduce using rule 289 (empty -> .)
    UNSET_CAST      reduce using rule 289 (empty -> .)
    BINARY_CAST     reduce using rule 289 (empty -> .)
    ISSET           reduce using rule 289 (empty -> .)
    EMPTY           reduce using rule 289 (empty -> .)
    EVAL            reduce using rule 289 (empty -> .)
    INCLUDE         reduce using rule 289 (empty -> .)
    INCLUDE_ONCE    reduce using rule 289 (empty -> .)
    REQUIRE         reduce using rule 289 (empty -> .)
    REQUIRE_ONCE    reduce using rule 289 (empty -> .)
    PRINT           reduce using rule 289 (empty -> .)
    AT              reduce using rule 289 (empty -> .)
    LPAREN          reduce using rule 289 (empty -> .)
    DOUBLE_QUOTE    reduce using rule 289 (empty -> .)
    IDENTIFIER      reduce using rule 289 (empty -> .)
    EXIT            reduce using rule 289 (empty -> .)
    DIE             reduce using rule 289 (empty -> .)
    INT_NUMBER      reduce using rule 289 (empty -> .)
    FLOAT_NUMBER    reduce using rule 289 (empty -> .)
    CONSTANT_ENCAPSED_STRING reduce using rule 289 (empty -> .)
    FUNC_C          reduce using rule 289 (empty -> .)
    METHOD_C        reduce using rule 289 (empty -> .)
    LINE            reduce using rule 289 (empty -> .)
    FILE            reduce using rule 289 (empty -> .)
    DIR             reduce using rule 289 (empty -> .)
    START_HEREDOC   reduce using rule 289 (empty -> .)
    START_NOWDOC    reduce using rule 289 (empty -> .)
    DOLLAR          reduce using rule 289 (empty -> .)
    VARIABLE        reduce using rule 289 (empty -> .)
    ELSEIF          reduce using rule 289 (empty -> .)
    ELSE            reduce using rule 289 (empty -> .)
    ENDIF           reduce using rule 289 (empty -> .)

    inner_statement_list           shift and go to state 600
    empty                          shift and go to state 89

state 599

    (52) for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .

    ELSEIF          reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    ELSE            reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    HALT_COMPILER   reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    CONST           reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    LBRACE          reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    IF              reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    WHILE           reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    DO              reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    FOR             reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    SWITCH          reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    BREAK           reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    CONTINUE        reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    RETURN          reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    GLOBAL          reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    STATIC          reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    ECHO            reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    INLINE_HTML     reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    UNSET           reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    SEMI_COLON      reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    FUNCTION        reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    CLONE           reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    LIST            reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    ARRAY           reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    LBRACKET        reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    PLUS            reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    MINUS           reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    NOT             reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    BOOLEAN_NOT     reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    INC             reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    DEC             reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    INT_CAST        reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    ARRAY_CAST      reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    STRING_CAST     reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    DOUBLE_CAST     reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    BOOL_CAST       reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    UNSET_CAST      reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    BINARY_CAST     reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    ISSET           reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    EMPTY           reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    EVAL            reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    INCLUDE         reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    INCLUDE_ONCE    reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    REQUIRE         reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    REQUIRE_ONCE    reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    PRINT           reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    AT              reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    LPAREN          reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    DOUBLE_QUOTE    reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    IDENTIFIER      reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    EXIT            reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    DIE             reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    INT_NUMBER      reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    FLOAT_NUMBER    reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    FUNC_C          reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    METHOD_C        reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    LINE            reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    FILE            reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    DIR             reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    START_HEREDOC   reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    START_NOWDOC    reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    DOLLAR          reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    VARIABLE        reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    $end            reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    RBRACE          reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    YIELD           reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    ENDIF           reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    ENDWHILE        reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    ENDSWITCH       reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    ENDFOR          reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    CASE            reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)
    DEFAULT         reduce using rule 52 (for_statement -> COLON inner_statement_list ENDFOR SEMI_COLON .)


state 600

    (42) new_elseif_list -> new_elseif_list ELSEIF LPAREN expr RPAREN COLON inner_statement_list .
    (11) inner_statement_list -> inner_statement_list . inner_statement
    (13) inner_statement -> . statement
    (14) inner_statement -> . function_declaration_statement
    (15) inner_statement -> . YIELD SEMI_COLON
    (16) inner_statement -> . YIELD expr SEMI_COLON
    (17) statement -> . LBRACE inner_statement_list RBRACE
    (18) statement -> . IF LPAREN expr RPAREN statement elseif_list else_single
    (19) statement -> . IF LPAREN expr RPAREN COLON inner_statement_list new_elseif_list new_else_single ENDIF SEMI_COLON
    (20) statement -> . WHILE LPAREN expr RPAREN while_statement
    (21) statement -> . DO statement WHILE LPAREN expr RPAREN SEMI_COLON
    (22) statement -> . FOR LPAREN for_expr SEMI_COLON for_expr SEMI_COLON for_expr RPAREN for_statement
    (23) statement -> . SWITCH LPAREN expr RPAREN switch_case_list
    (24) statement -> . BREAK SEMI_COLON
    (25) statement -> . BREAK expr SEMI_COLON
    (26) statement -> . CONTINUE SEMI_COLON
    (27) statement -> . CONTINUE expr SEMI_COLON
    (28) statement -> . RETURN SEMI_COLON
    (29) statement -> . RETURN expr SEMI_COLON
    (30) statement -> . GLOBAL global_var_list SEMI_COLON
    (31) statement -> . STATIC static_var_list SEMI_COLON
    (32) statement -> . ECHO echo_expr_list SEMI_COLON
    (33) statement -> . INLINE_HTML
    (34) statement -> . expr SEMI_COLON
    (35) statement -> . UNSET LPAREN unset_variables RPAREN SEMI_COLON
    (36) statement -> . SEMI_COLON
    (78) function_declaration_statement -> . FUNCTION is_reference IDENTIFIER LPAREN parameter_list RPAREN LBRACE inner_statement_list RBRACE
    (89) expr -> . variable
    (90) expr -> . variable EQUALS expr
    (91) expr -> . variable EQUALS AND expr
    (92) expr -> . CLONE expr
    (93) expr -> . LIST LPAREN assignment_list RPAREN EQUALS expr
    (115) expr -> . expr LBRACE dim_offset RBRACE
    (121) expr -> . scalar
    (122) expr -> . ARRAY LPAREN array_pair_list RPAREN
    (123) expr -> . LBRACKET array_pair_list RBRACKET
    (137) expr -> . FUNCTION is_reference LPAREN parameter_list RPAREN lexical_vars LBRACE inner_statement_list RBRACE
    (144) expr -> . variable PLUS_EQUAL expr
    (145) expr -> . variable MINUS_EQUAL expr
    (146) expr -> . variable MUL_EQUAL expr
    (147) expr -> . variable DIV_EQUAL expr
    (148) expr -> . variable CONCAT_EQUAL expr
    (149) expr -> . variable MOD_EQUAL expr
    (150) expr -> . variable AND_EQUAL expr
    (151) expr -> . variable OR_EQUAL expr
    (152) expr -> . variable XOR_EQUAL expr
    (153) expr -> . variable SL_EQUAL expr
    (154) expr -> . variable SR_EQUAL expr
    (155) expr -> . expr BOOLEAN_AND expr
    (156) expr -> . expr BOOLEAN_OR expr
    (157) expr -> . expr LOGICAL_AND expr
    (158) expr -> . expr LOGICAL_OR expr
    (159) expr -> . expr LOGICAL_XOR expr
    (160) expr -> . expr AND expr
    (161) expr -> . expr OR expr
    (162) expr -> . expr XOR expr
    (163) expr -> . expr CONCAT expr
    (164) expr -> . expr PLUS expr
    (165) expr -> . expr MINUS expr
    (166) expr -> . expr MUL expr
    (167) expr -> . expr DIV expr
    (168) expr -> . expr SL expr
    (169) expr -> . expr SR expr
    (170) expr -> . expr MOD expr
    (171) expr -> . expr IS_IDENTICAL expr
    (172) expr -> . expr IS_NOT_IDENTICAL expr
    (173) expr -> . expr IS_EQUAL_TO expr
    (174) expr -> . expr IS_NOT_EQUAL expr
    (175) expr -> . expr LESS_THAN expr
    (176) expr -> . expr LESS_THAN_OR_EQUAL expr
    (177) expr -> . expr GREATER_THAN expr
    (178) expr -> . expr GRATER_THAN_OR_EQUAL expr
    (179) expr -> . expr INSTANCEOF expr
    (180) expr -> . expr INSTANCEOF STATIC
    (181) expr -> . PLUS expr
    (182) expr -> . MINUS expr
    (183) expr -> . NOT expr
    (184) expr -> . BOOLEAN_NOT expr
    (185) expr -> . expr QUESTION expr COLON expr
    (186) expr -> . expr QUESTION COLON expr
    (187) expr -> . INC variable
    (188) expr -> . DEC variable
    (189) expr -> . variable INC
    (190) expr -> . variable DEC
    (191) expr -> . INT_CAST expr
    (192) expr -> . ARRAY_CAST expr
    (193) expr -> . STRING_CAST expr
    (194) expr -> . DOUBLE_CAST expr
    (195) expr -> . BOOL_CAST expr
    (196) expr -> . UNSET_CAST expr
    (197) expr -> . BINARY_CAST expr
    (198) expr -> . ISSET LPAREN isset_variables RPAREN
    (201) expr -> . EMPTY LPAREN expr RPAREN
    (202) expr -> . EVAL LPAREN expr RPAREN
    (203) expr -> . INCLUDE expr
    (204) expr -> . INCLUDE_ONCE expr
    (205) expr -> . REQUIRE expr
    (206) expr -> . REQUIRE_ONCE expr
    (209) expr -> . exit_or_die
    (210) expr -> . exit_or_die LPAREN RPAREN
    (211) expr -> . exit_or_die LPAREN expr RPAREN
    (212) expr -> . PRINT expr
    (213) expr -> . AT expr
    (214) expr -> . LPAREN expr RPAREN
    (99) variable -> . base_variable_with_function_calls
    (111) variable -> . variable LBRACKET dim_offset RBRACKET
    (216) scalar -> . common_scalar
    (217) scalar -> . DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (218) scalar -> . IDENTIFIER DOUBLE_QUOTE encaps_list DOUBLE_QUOTE
    (219) scalar -> . scalar_heredoc
    (220) scalar -> . nowdoc
    (224) scalar -> . IDENTIFIER
    (207) exit_or_die -> . EXIT
    (208) exit_or_die -> . DIE
    (100) base_variable_with_function_calls -> . base_variable
    (101) base_variable_with_function_calls -> . function_call
    (225) common_scalar -> . INT_NUMBER
    (226) common_scalar -> . FLOAT_NUMBER
    (227) common_scalar -> . CONSTANT_ENCAPSED_STRING
    (228) common_scalar -> . IDENTIFIER CONSTANT_ENCAPSED_STRING
    (229) common_scalar -> . FUNC_C
    (230) common_scalar -> . METHOD_C
    (231) common_scalar -> . LINE
    (232) common_scalar -> . FILE
    (233) common_scalar -> . DIR
    (221) scalar_heredoc -> . START_HEREDOC encaps_list END_HEREDOC
    (215) nowdoc -> . START_NOWDOC nowdoc_text_content END_NOWDOC
    (108) base_variable -> . simple_indirect_reference
    (102) function_call -> . IDENTIFIER fucntion_call_body
    (103) function_call -> . ARRAY fucntion_call_body
    (106) function_call -> . variable_without_objects LPAREN nonempty_function_call_parameter_list RPAREN
    (107) function_call -> . variable_without_objects LPAREN empty RPAREN
    (109) simple_indirect_reference -> . DOLLAR simple_indirect_reference
    (110) simple_indirect_reference -> . reference_variable
    (120) variable_without_objects -> . simple_indirect_reference
    (112) reference_variable -> . reference_variable LBRACKET dim_offset RBRACKET
    (113) reference_variable -> . reference_variable LBRACE expr RBRACE
    (114) reference_variable -> . compound_variable
    (116) compound_variable -> . VARIABLE
    (117) compound_variable -> . DOLLAR LBRACE expr RBRACE

    ELSEIF          reduce using rule 42 (new_elseif_list -> new_elseif_list ELSEIF LPAREN expr RPAREN COLON inner_statement_list .)
    ELSE            reduce using rule 42 (new_elseif_list -> new_elseif_list ELSEIF LPAREN expr RPAREN COLON inner_statement_list .)
    ENDIF           reduce using rule 42 (new_elseif_list -> new_elseif_list ELSEIF LPAREN expr RPAREN COLON inner_statement_list .)
    YIELD           shift and go to state 217
    LBRACE          shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 14
    DO              shift and go to state 15
    FOR             shift and go to state 16
    SWITCH          shift and go to state 17
    BREAK           shift and go to state 18
    CONTINUE        shift and go to state 19
    RETURN          shift and go to state 20
    GLOBAL          shift and go to state 21
    STATIC          shift and go to state 22
    ECHO            shift and go to state 23
    INLINE_HTML     shift and go to state 24
    UNSET           shift and go to state 25
    SEMI_COLON      shift and go to state 9
    FUNCTION        shift and go to state 26
    CLONE           shift and go to state 29
    LIST            shift and go to state 30
    ARRAY           shift and go to state 32
    LBRACKET        shift and go to state 33
    PLUS            shift and go to state 34
    MINUS           shift and go to state 35
    NOT             shift and go to state 36
    BOOLEAN_NOT     shift and go to state 37
    INC             shift and go to state 38
    DEC             shift and go to state 39
    INT_CAST        shift and go to state 40
    ARRAY_CAST      shift and go to state 41
    STRING_CAST     shift and go to state 42
    DOUBLE_CAST     shift and go to state 43
    BOOL_CAST       shift and go to state 44
    UNSET_CAST      shift and go to state 45
    BINARY_CAST     shift and go to state 46
    ISSET           shift and go to state 47
    EMPTY           shift and go to state 48
    EVAL            shift and go to state 49
    INCLUDE         shift and go to state 50
    INCLUDE_ONCE    shift and go to state 51
    REQUIRE         shift and go to state 52
    REQUIRE_ONCE    shift and go to state 53
    PRINT           shift and go to state 55
    AT              shift and go to state 56
    LPAREN          shift and go to state 8
    DOUBLE_QUOTE    shift and go to state 59
    IDENTIFIER      shift and go to state 27
    EXIT            shift and go to state 62
    DIE             shift and go to state 63
    INT_NUMBER      shift and go to state 66
    FLOAT_NUMBER    shift and go to state 67
    CONSTANT_ENCAPSED_STRING shift and go to state 68
    FUNC_C          shift and go to state 69
    METHOD_C        shift and go to state 70
    LINE            shift and go to state 71
    FILE            shift and go to state 72
    DIR             shift and go to state 73
    START_HEREDOC   shift and go to state 74
    START_NOWDOC    shift and go to state 75
    DOLLAR          shift and go to state 78
    VARIABLE        shift and go to state 81

    expr                           shift and go to state 13
    inner_statement                shift and go to state 214
    statement                      shift and go to state 215
    function_declaration_statement shift and go to state 216
    variable                       shift and go to state 28
    scalar                         shift and go to state 31
    exit_or_die                    shift and go to state 54
    base_variable_with_function_calls shift and go to state 57
    common_scalar                  shift and go to state 58
    scalar_heredoc                 shift and go to state 60
    nowdoc                         shift and go to state 61
    base_variable                  shift and go to state 64
    function_call                  shift and go to state 65
    simple_indirect_reference      shift and go to state 76
    variable_without_objects       shift and go to state 77
    reference_variable             shift and go to state 79
    compound_variable              shift and go to state 80
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LBRACKET in state 79 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 79 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 168 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 298 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 298 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 299 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 498 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 498 resolved as shift
